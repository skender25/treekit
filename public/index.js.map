{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/core/SvgHelper.ts","../src/core/Activator.ts","../src/core/Renderer.ts","../src/core/Style.ts","../src/ui/Toolbar.ts","../src/ui/Toolbox.ts","../src/ui/ToolboxPanel.ts","../src/ui/toolbox-panels/ColorPickerPanel.ts","../src/core/MarkerBase.ts","../src/markers/RectangularBoxMarkerGrips.ts","../src/markers/ResizeGrip.ts","../src/core/TransformMatrix.ts","../src/markers/RectangularBoxMarkerBase.ts","../src/markers/RectangleMarker.ts","../src/ui/toolbox-panels/LineWidthPanel.ts","../src/ui/toolbox-panels/LineStylePanel.ts","../src/markers/frame-marker/FrameMarker.ts","../src/core/Settings.ts","../src/markers/LinearMarkerBase.ts","../src/markers/line-marker/LineMarker.ts","../src/ui/toolbox-panels/FontFamilyPanel.ts","../src/markers/text-marker/TextMarker.ts","../src/markers/freehand-marker/FreehandMarker.ts","../src/ui/toolbox-panels/ArrowTypePanel.ts","../src/markers/arrow-marker/ArrowMarker.ts","../src/markers/cover-marker/CoverMarker.ts","../src/ui/toolbox-panels/OpacityPanel.ts","../src/markers/highlight-marker/HighlightMarker.ts","../src/markers/callout-marker/CalloutMarker.ts","../src/markers/ellipse-marker/EllipseMarker.ts","../src/markers/measurement-marker/MeasurementMarker.ts","../src/markers/ellipse-frame-marker/EllipseFrameMarker.ts","../src/core/UndoRedoManager.ts","../src/markers/curve-marker/CurveMarker.ts","../src/core/Events.ts","../src/MarkerArea.ts","../test/manual/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\r\n * Utility class to simplify SVG operations.\r\n */\r\nexport class SvgHelper {\r\n  /**\r\n   * Creates SVG \"defs\".\r\n   */\r\n  public static createDefs(): SVGDefsElement {\r\n    const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\r\n\r\n    return defs;\r\n  }\r\n\r\n  /**\r\n   * Sets attributes on an arbitrary SVG element\r\n   * @param el - target SVG element.\r\n   * @param attributes - set of name-value attribute pairs.\r\n   */\r\n  public static setAttributes(\r\n    el: SVGElement,\r\n    attributes: Array<[string, string]>\r\n  ): void {\r\n    for (const [attr, value] of attributes) {\r\n      el.setAttribute(attr, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG rectangle with the specified width and height.\r\n   * @param width \r\n   * @param height \r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createRect(\r\n    width: number | string,\r\n    height: number | string,\r\n    attributes?: Array<[string, string]>\r\n  ): SVGRectElement {\r\n    const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\r\n\r\n    rect.setAttribute('width', width.toString());\r\n    rect.setAttribute('height', height.toString());\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(rect, attributes);\r\n    }\r\n\r\n    return rect;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG line with specified end-point coordinates.\r\n   * @param x1 \r\n   * @param y1 \r\n   * @param x2 \r\n   * @param y2 \r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createLine(\r\n    x1: number | string,\r\n    y1: number | string,\r\n    x2: number | string,\r\n    y2: number | string,\r\n    attributes?: Array<[string, string]>\r\n  ): SVGLineElement {\r\n    const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\r\n\r\n    line.setAttribute('x1', x1.toString());\r\n    line.setAttribute('y1', y1.toString());\r\n    line.setAttribute('x2', x2.toString());\r\n    line.setAttribute('y2', y2.toString());\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(line, attributes);\r\n    }\r\n\r\n    return line;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG polygon with specified points.\r\n   * @param points - points as string.\r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createPolygon(\r\n    points: string,\r\n    attributes?: Array<[string, string]>\r\n  ): SVGPolygonElement {\r\n    const polygon = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'polygon'\r\n    );\r\n\r\n    polygon.setAttribute('points', points);\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(polygon, attributes);\r\n    }\r\n\r\n    return polygon;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG circle with the specified radius.\r\n   * @param radius \r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createCircle(\r\n    radius: number,\r\n    attributes?: Array<[string, string]>\r\n  ): SVGCircleElement {\r\n    const circle = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'circle'\r\n    );\r\n\r\n    circle.setAttribute('cx', (radius / 2).toString());\r\n    circle.setAttribute('cy', (radius / 2).toString());\r\n    circle.setAttribute('r', radius.toString());\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(circle, attributes);\r\n    }\r\n\r\n    return circle;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG ellipse with the specified horizontal and vertical radii.\r\n   * @param rx \r\n   * @param ry \r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createEllipse(\r\n    rx: number,\r\n    ry: number,\r\n    attributes?: Array<[string, string]>\r\n  ): SVGEllipseElement {\r\n    const ellipse = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'ellipse'\r\n    );\r\n\r\n    ellipse.setAttribute('cx', (rx / 2).toString());\r\n    ellipse.setAttribute('cy', (ry / 2).toString());\r\n    ellipse.setAttribute('rx', (rx / 2).toString());\r\n    ellipse.setAttribute('ry', (ry / 2).toString());\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(ellipse, attributes);\r\n    }\r\n\r\n    return ellipse;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG group.\r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createGroup(attributes?: Array<[string, string]>): SVGGElement {\r\n    const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(g, attributes);\r\n    }\r\n    return g;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG transform.\r\n   */\r\n  public static createTransform(): SVGTransform {\r\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n\r\n    return svg.createSVGTransform();\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG marker.\r\n   * @param id \r\n   * @param orient \r\n   * @param markerWidth \r\n   * @param markerHeight \r\n   * @param refX \r\n   * @param refY \r\n   * @param markerElement \r\n   */\r\n  public static createMarker(\r\n    id: string,\r\n    orient: string,\r\n    markerWidth: number | string,\r\n    markerHeight: number | string,\r\n    refX: number | string,\r\n    refY: number | string,\r\n    markerElement: SVGGraphicsElement\r\n  ): SVGMarkerElement {\r\n    const marker = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'marker'\r\n    );\r\n    SvgHelper.setAttributes(marker, [\r\n      ['id', id],\r\n      ['orient', orient],\r\n      ['markerWidth', markerWidth.toString()],\r\n      ['markerHeight', markerHeight.toString()],\r\n      ['refX', refX.toString()],\r\n      ['refY', refY.toString()],\r\n    ]);\r\n\r\n    marker.appendChild(markerElement);\r\n\r\n    return marker;\r\n  }\r\n\r\n  /**\r\n   * Creaes an SVG text element.\r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createText(\r\n    attributes?: Array<[string, string]>\r\n  ): SVGTextElement {\r\n    const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\r\n    text.setAttribute('x', '0');\r\n    text.setAttribute('y', '0');\r\n\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(text, attributes);\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG TSpan.\r\n   * @param text - inner text.\r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createTSpan(\r\n    text: string,\r\n    attributes?: Array<[string, string]>\r\n  ): SVGTSpanElement {\r\n    const tspan = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'tspan'\r\n    );\r\n    tspan.textContent = text;\r\n\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(tspan, attributes);\r\n    }\r\n\r\n    return tspan;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG image element.\r\n   * @param attributes - additional attributes.\r\n   */\r\n  public static createImage(\r\n    attributes?: Array<[string, string]>\r\n  ): SVGImageElement {\r\n    const image = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'image'\r\n    );\r\n\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(image, attributes);\r\n    }\r\n\r\n    return image;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG point with the specified coordinates.\r\n   * @param x \r\n   * @param y \r\n   */\r\n  public static createPoint(      \r\n    x: number,\r\n    y: number\r\n  ): SVGPoint {\r\n      const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n      const svgPoint = svg.createSVGPoint();\r\n      svgPoint.x = x;\r\n      svgPoint.y = y;\r\n  \r\n      return svgPoint;\r\n  }\r\n\r\n  /**\r\n   * Creates an SVG path with the specified shape (d).\r\n   * @param d - path shape\r\n   * @param attributes - additional attributes.\r\n   */\r\n   public static createPath(\r\n    d: string,\r\n    attributes?: Array<[string, string]>\r\n  ): SVGPathElement {\r\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n\r\n    path.setAttribute('d', d);\r\n    if (attributes) {\r\n      SvgHelper.setAttributes(path, attributes);\r\n    }\r\n\r\n    return path;\r\n  }\r\n}\r\n","/**\r\n * Manages commercial marker.js 2 licenses.\r\n */\r\nexport class Activator {\r\n  private static key: string;\r\n\r\n  /**\r\n   * Add a license key\r\n   * @param key license key sent to you after purchase.\r\n   */\r\n  public static addKey(key: string): void {\r\n    Activator.key = key;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the copy of marker.js is commercially licensed.\r\n   */\r\n  public static get isLicensed(): boolean {\r\n    // NOTE:\r\n    // before removing or modifying this please consider supporting marker.js\r\n    // by visiting https://markerjs.com/ for details\r\n    // thank you!\r\n    if (Activator.key) {\r\n      const keyRegex = new RegExp(/^MJS2-[A-Z][0-9]{3}-[A-Z][0-9]{3}-[0-9]{4}$/, 'i');\r\n      return keyRegex.test(Activator.key);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Renders the original image and markup to a flat raster image.\r\n */\r\nexport class Renderer {\r\n    /**\r\n     * Whether the image should be rendered at the original (natural) target image size.\r\n     */\r\n    public naturalSize = false; \r\n    /**\r\n     * Rendered image type (`image/png`, `image/jpeg`, etc.).\r\n     */\r\n    public imageType = 'image/png';\r\n    /**\r\n     * For formats that support it, specifies rendering quality.\r\n     * \r\n     * In the case of `image/jpeg` you can specify a value between 0 and 1 (lowest to highest quality).\r\n     *\r\n     * @type {number} - image rendering quality (0..1)\r\n     */\r\n    public imageQuality?: number;\r\n    /**\r\n     * When set to true, only the marker layer without the original image will be rendered.\r\n     */\r\n    public markersOnly = false;\r\n\r\n    /**\r\n     * When set and {@linkcode naturalSize} is `false` sets the width of the rendered image.\r\n     * \r\n     * Both `width` and `height` have to be set for this to take effect.\r\n     */\r\n    public width?: number;\r\n    /**\r\n     * When set and {@linkcode naturalSize} is `false` sets the height of the rendered image.\r\n     * \r\n     * Both `width` and `height` have to be set for this to take effect.\r\n     */\r\n    public height?: number;\r\n\r\n\r\n    /**\r\n     * Initiates rendering of the result image and returns a promise which when resolved\r\n     * contains a data URL for the rendered image.\r\n     * \r\n     * @param target - target (underlying original) image\r\n     * @param markerImage - marker layer\r\n     */\r\n    public rasterize(\r\n        target: HTMLImageElement, \r\n        markerImage: SVGSVGElement,\r\n        targetCanvas?: HTMLCanvasElement \r\n    ): Promise<string> {\r\n        return new Promise<string>((resolve) => {\r\n            const canvas = targetCanvas !== undefined ? targetCanvas : document.createElement(\"canvas\");\r\n\r\n            if (target === null) {\r\n                this.markersOnly = true;\r\n                this.naturalSize = false;\r\n            }\r\n\r\n            const markerImageCopy = document.createElementNS(\r\n            'http://www.w3.org/2000/svg',\r\n            'svg'\r\n            );\r\n            markerImageCopy.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n            markerImageCopy.setAttribute('width', markerImage.width.baseVal.valueAsString);\r\n            markerImageCopy.setAttribute(\r\n              'height',\r\n              markerImage.height.baseVal.valueAsString\r\n            );\r\n            markerImageCopy.setAttribute(\r\n              'viewBox',\r\n              '0 0 ' +\r\n                markerImage.viewBox.baseVal.width.toString() +\r\n                ' ' +\r\n                markerImage.viewBox.baseVal.height.toString()\r\n            );            \r\n            markerImageCopy.innerHTML = markerImage.innerHTML;\r\n\r\n            if (this.naturalSize === true) {\r\n                // scale to full image size\r\n                markerImageCopy.width.baseVal.value = target.naturalWidth;\r\n                markerImageCopy.height.baseVal.value = target.naturalHeight;\r\n            } else if (this.width !== undefined && this.height !== undefined) {\r\n                // scale to specific dimensions\r\n                markerImageCopy.width.baseVal.value = this.width;\r\n                markerImageCopy.height.baseVal.value = this.height;\r\n            }\r\n    \r\n            canvas.width = markerImageCopy.width.baseVal.value;\r\n            canvas.height = markerImageCopy.height.baseVal.value;\r\n    \r\n            const data = markerImageCopy.outerHTML;\r\n\r\n            const ctx = canvas.getContext(\"2d\");\r\n            if (this.markersOnly !== true) { \r\n                ctx.drawImage(target, 0, 0, canvas.width, canvas.height);\r\n            }\r\n    \r\n            const DOMURL = window.URL; // || window.webkitURL || window;\r\n    \r\n            const img = new Image(canvas.width, canvas.height);\r\n            img.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    \r\n            const blob = new Blob([data], { type: \"image/svg+xml\" });\r\n    \r\n            const url = DOMURL.createObjectURL(blob);\r\n    \r\n            img.onload = () => {\r\n                ctx.drawImage(img, 0, 0);\r\n                DOMURL.revokeObjectURL(url);\r\n    \r\n                const result = canvas.toDataURL(this.imageType, this.imageQuality);\r\n                resolve(result);\r\n            };\r\n    \r\n            img.src = url;\r\n        });\r\n    }\r\n}\r\n","import { IStyleSettings } from './IStyleSettings';\r\n\r\n/**\r\n * Simple utility CSS-in-JS implementation.\r\n */\r\nexport class Style {\r\n  /**\r\n   * Prefix used for all internally created CSS classes.\r\n   */\r\n  public static CLASS_PREFIX = '__markerjs2_';\r\n\r\n  private static classes: StyleClass[] = [];\r\n  private static rules: StyleRule[] = [];\r\n  private static styleSheet?: HTMLStyleElement;\r\n\r\n  /**\r\n   * For cases when you need to add the stylesheet to anything\r\n   * other than document.head (default), set this property\r\n   * befor calling `MarkerArea.show()`.\r\n   *\r\n   * Example: here we set the rendering/placement root (targetRoot)\r\n   * to the `shadowRoot` of a web componet and set `styleSheetRoot`\r\n   * to the same value as well.\r\n   *\r\n   * ```javascript\r\n   * const markerArea = new markerjs2.MarkerArea(target);\r\n   * markerArea.targetRoot = this.shadowRoot;\r\n   * markerjs2.Style.styleSheetRoot = this.shadowRoot;\r\n   * markerArea.show();\r\n   * ```\r\n   *\r\n   * Known issue/limitation:\r\n   * you can't use marker.js 2 in both main and Shadow DOM\r\n   * on the same page.\r\n   */\r\n  public static styleSheetRoot: HTMLElement;\r\n\r\n  /**\r\n   * Returns default UI styles.\r\n   */\r\n  public static get defaultSettings(): IStyleSettings {\r\n    return {\r\n      canvasBackgroundColor: '#ffffff',\r\n      toolbarBackgroundColor: '#111111',\r\n      toolbarBackgroundHoverColor: '#333333',\r\n      toolbarColor: '#eeeeee',\r\n      toolbarHeight: 40,\r\n      toolboxBackgroundColor: '#2a2a2a',\r\n      toolboxColor: '#eeeeee',\r\n      toolboxAccentColor: '#3080c3',\r\n      undoButtonVisible: true,\r\n      redoButtonVisible: false,\r\n      zoomButtonVisible: false,\r\n      zoomOutButtonVisible: false,\r\n      clearButtonVisible: false,\r\n      logoPosition: 'left',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Holds current UI styles.\r\n   */\r\n  public static settings: IStyleSettings = Style.defaultSettings;\r\n\r\n  /**\r\n   * Returns global fade-in animation class name.\r\n   */\r\n  public static get fadeInAnimationClassName(): string {\r\n    return `${Style.CLASS_PREFIX}fade_in`;\r\n  }\r\n  /**\r\n   * Returns global fade-out animation class name.\r\n   */\r\n  public static get fadeOutAnimationClassName(): string {\r\n    return `${Style.CLASS_PREFIX}fade_out`;\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS class declaration.\r\n   * @param styleClass - class to add.\r\n   */\r\n  public static addClass(styleClass: StyleClass): StyleClass {\r\n    if (Style.styleSheet === undefined) {\r\n      Style.addStyleSheet();\r\n    }\r\n    Style.classes.push(styleClass);\r\n    // Style.styleSheet.sheet.addRule('.' + styleClass.name, styleClass.style);\r\n    Style.styleSheet.sheet.insertRule(\r\n      `.${styleClass.name} {${styleClass.style}}`,\r\n      Style.styleSheet.sheet.cssRules.length\r\n    );\r\n    return styleClass;\r\n  }\r\n\r\n  /**\r\n   * Add arbitrary CSS rule\r\n   * @param styleRule - CSS rule to add.\r\n   */\r\n  public static addRule(styleRule: StyleRule): void {\r\n    if (Style.styleSheet === undefined) {\r\n      Style.addStyleSheet();\r\n    }\r\n    Style.rules.push(styleRule);\r\n    // Style.styleSheet.sheet.addRule(styleRule.selector, styleRule.style); // crashes in Edge\r\n    Style.styleSheet.sheet.insertRule(\r\n      `${styleRule.selector} {${styleRule.style}}`,\r\n      Style.styleSheet.sheet.cssRules.length\r\n    );\r\n  }\r\n\r\n  private static addStyleSheet() {\r\n    Style.styleSheet = document.createElement('style');\r\n    (Style.styleSheetRoot ?? document.head).appendChild(Style.styleSheet);\r\n\r\n    // add global rules\r\n    Style.addRule(\r\n      new StyleRule(`.${Style.CLASS_PREFIX} h3`, 'font-family: sans-serif')\r\n    );\r\n\r\n    Style.addRule(\r\n      new StyleRule(\r\n        `@keyframes ${Style.CLASS_PREFIX}_fade_in_animation_frames`,\r\n        `\r\n        from {\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          opacity: 1;\r\n        }\r\n    `\r\n      )\r\n    );\r\n    Style.addRule(\r\n      new StyleRule(\r\n        `@keyframes ${Style.CLASS_PREFIX}_fade_out_animation_frames`,\r\n        `\r\n        from {\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          opacity: 0;\r\n        }\r\n    `\r\n      )\r\n    );\r\n\r\n    Style.addClass(\r\n      new StyleClass(\r\n        'fade_in',\r\n        `\r\n      animation-duration: 0.3s;\r\n      animation-name: ${Style.CLASS_PREFIX}_fade_in_animation_frames;\r\n    `\r\n      )\r\n    );\r\n    Style.addClass(\r\n      new StyleClass(\r\n        'fade_out',\r\n        `\r\n      animation-duration: 0.3s;\r\n      animation-name: ${Style.CLASS_PREFIX}_fade_out_animation_frames;\r\n    `\r\n      )\r\n    );\r\n  }\r\n\r\n  public static removeStyleSheet(): void {\r\n    if (Style.styleSheet) {\r\n      (Style.styleSheetRoot ?? document.head).removeChild(Style.styleSheet);\r\n      Style.styleSheet = undefined;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Represents an arbitrary CSS rule.\r\n */\r\nexport class StyleRule {\r\n  /**\r\n   * CSS selector.\r\n   */\r\n  public selector: string;\r\n  /**\r\n   * Style declaration for the rule.\r\n   */\r\n  public style: string;\r\n  /**\r\n   * Creates an arbitrary CSS rule using the selector and style rules.\r\n   * @param selector - CSS selector\r\n   * @param style - styles to apply\r\n   */\r\n  constructor(selector: string, style: string) {\r\n    this.selector = selector;\r\n    this.style = style;\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a CSS class.\r\n */\r\nexport class StyleClass {\r\n  /**\r\n   * CSS style rules for the class.\r\n   */\r\n  public style: string;\r\n\r\n  private _localName: string;\r\n  /**\r\n   * Returns fully qualified CSS class name.\r\n   */\r\n  public get name(): string {\r\n    return `${Style.CLASS_PREFIX}${this._localName}`;\r\n  }\r\n\r\n  /**\r\n   * Creates a CSS class declaration based on supplied (local) name and style rules.\r\n   * @param name - local CSS class name (will be prefixed with the marker.js prefix).\r\n   * @param style - style declarations.\r\n   */\r\n  constructor(name: string, style: string) {\r\n    this._localName = name;\r\n    this.style = style;\r\n  }\r\n}\r\n","import { MarkerBase } from './../core/MarkerBase';\r\nimport { Style, StyleClass, StyleRule } from './../core/Style';\r\n\r\nimport CursorIcon from './toolbar-core-icons/cursor.svg';\r\nimport DeleteIcon from './toolbar-core-icons/delete.svg';\r\nimport ClearIcon from './toolbar-core-icons/clear.svg';\r\nimport CheckIcon from './toolbar-core-icons/check.svg';\r\nimport CloseIcon from './toolbar-core-icons/close.svg';\r\nimport OverflowIcon from './toolbar-core-icons/overflow.svg';\r\nimport UndoIcon from './toolbar-core-icons/undo.svg';\r\nimport RedoIcon from './toolbar-core-icons/redo.svg';\r\nimport NotesIcon from './toolbar-core-icons/notes.svg';\r\nimport ZoomIcon from './toolbar-core-icons/zoom.svg';\r\nimport ZoomOutIcon from './toolbar-core-icons/zoom-out.svg';\r\nimport { IStyleSettings } from '../core/IStyleSettings';\r\nimport { DisplayMode } from '../core/Settings';\r\n\r\n/**\r\n * Toolbar button type:\r\n * - `action` for non-marker buttons like select, delete, etc.\r\n * - `marker` for marker type buttons.\r\n */\r\nexport type ToolbarButtonType = 'action' | 'marker';\r\n\r\n/**\r\n * Click handler type for toolbar button click events.\r\n */\r\nexport type ToolbarButtonClickHandler = (\r\n  buttonType: ToolbarButtonType,\r\n  value?: typeof MarkerBase | string\r\n) => void;\r\n\r\n/**\r\n * Toolbar represents the main toolbar of the marker.js 2 interface.\r\n */\r\nexport class Toolbar {\r\n  private markerItems: typeof MarkerBase[];\r\n\r\n  private buttons: HTMLDivElement[] = [];\r\n  private markerButtons: HTMLDivElement[] = [];\r\n  private overflowButton: HTMLDivElement;\r\n\r\n  private markerjsContainer: HTMLDivElement;\r\n  private displayMode: DisplayMode;\r\n  private uiContainer: HTMLDivElement;\r\n\r\n  private toolbarStyleClass: StyleClass;\r\n  private toolbarStyleColorsClass: StyleClass;\r\n  private toolbarBlockStyleClass: StyleClass;\r\n  private toolbarOverflowBlockStyleClass: StyleClass;\r\n  private toolbarOverflowBlockStyleColorsClass: StyleClass;\r\n  private toolbarButtonStyleClass: StyleClass;\r\n  private toolbarButtonStyleColorsClass: StyleClass;\r\n  private toolbarActiveButtonStyleColorsClass: StyleClass;\r\n\r\n  private markerButtonBlock: HTMLDivElement;\r\n  private markerButtonOverflowBlock: HTMLDivElement;\r\n\r\n  private buttonClickListeners: ToolbarButtonClickHandler[] = [];\r\n\r\n  private uiStyleSettings: IStyleSettings;\r\n\r\n  private currentMarker?: MarkerBase;\r\n\r\n  /**\r\n   * Creates the main marker.js toolbar.\r\n   * @param markerjsContainer - container for the toolbar in the marker.js UI.\r\n   * @param displayMode - marker.js display mode (`inline` or `popup`).\r\n   * @param markerItems - available marker types.\r\n   * @param uiStyleSettings - settings for styling the tooblar ui.\r\n   */\r\n  constructor(\r\n    markerjsContainer: HTMLDivElement,\r\n    displayMode: DisplayMode,\r\n    markerItems: typeof MarkerBase[],\r\n    uiStyleSettings: IStyleSettings\r\n  ) {\r\n    this.markerjsContainer = markerjsContainer;\r\n    this.displayMode = displayMode;\r\n    this.markerItems = markerItems;\r\n    this.uiStyleSettings = uiStyleSettings;\r\n    this.addStyles();\r\n\r\n    this.adjustLayout = this.adjustLayout.bind(this);\r\n    this.overflowButtonClicked = this.overflowButtonClicked.bind(this);\r\n    this.setCurrentMarker = this.setCurrentMarker.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Creates and displays the toolbar UI.\r\n   */\r\n  public show(visiblity: string): void {\r\n    this.uiContainer = document.createElement('div');\r\n    this.uiContainer.style.visibility = visiblity;\r\n    this.uiContainer.className = `${this.toolbarStyleClass.name} ${\r\n      Style.fadeInAnimationClassName\r\n    } ${\r\n      this.uiStyleSettings.toolbarStyleColorsClassName\r\n        ? this.uiStyleSettings.toolbarStyleColorsClassName\r\n        : this.toolbarStyleColorsClass.name\r\n    }`;\r\n\r\n    const actionButtonBlock = document.createElement('div');\r\n    actionButtonBlock.className = this.toolbarBlockStyleClass.name;\r\n    actionButtonBlock.style.whiteSpace = 'nowrap';\r\n    this.uiContainer.appendChild(actionButtonBlock);\r\n\r\n    this.addActionButton(actionButtonBlock, CursorIcon, 'select');\r\n    this.addActionButton(actionButtonBlock, DeleteIcon, 'delete');\r\n    if (this.uiStyleSettings.clearButtonVisible) {\r\n      this.addActionButton(actionButtonBlock, ClearIcon, 'clear');\r\n    }\r\n    if (this.uiStyleSettings.undoButtonVisible) {\r\n      this.addActionButton(actionButtonBlock, UndoIcon, 'undo');\r\n    }\r\n    if (this.uiStyleSettings.redoButtonVisible) {\r\n      this.addActionButton(actionButtonBlock, RedoIcon, 'redo');\r\n    }\r\n    if (this.uiStyleSettings.zoomButtonVisible) {\r\n      this.addActionButton(actionButtonBlock, ZoomIcon, 'zoom');\r\n    }\r\n    if (this.uiStyleSettings.zoomButtonVisible && this.uiStyleSettings.zoomOutButtonVisible) {\r\n      this.addActionButton(actionButtonBlock, ZoomOutIcon, 'zoom-out');\r\n    }\r\n    if (this.uiStyleSettings.notesButtonVisible) {\r\n      this.addActionButton(actionButtonBlock, NotesIcon, 'notes');\r\n    }\r\n\r\n    this.markerButtonBlock = document.createElement('div');\r\n    this.markerButtonBlock.className = this.toolbarBlockStyleClass.name;\r\n    this.markerButtonBlock.style.flexGrow = '2';\r\n    this.markerButtonBlock.style.textAlign = 'center';\r\n    this.uiContainer.appendChild(this.markerButtonBlock);\r\n\r\n    this.markerButtonOverflowBlock = document.createElement('div');\r\n    this.markerButtonOverflowBlock.className = `${\r\n      this.toolbarOverflowBlockStyleClass.name\r\n    } ${\r\n      this.uiStyleSettings.toolbarOverflowBlockStyleColorsClassName\r\n        ? this.uiStyleSettings.toolbarOverflowBlockStyleColorsClassName\r\n        : this.toolbarOverflowBlockStyleColorsClass.name\r\n    }`;\r\n    this.markerButtonOverflowBlock.style.display = 'none';\r\n    this.uiContainer.appendChild(this.markerButtonOverflowBlock);\r\n\r\n    if (this.markerItems) {\r\n      this.markerItems.forEach((mi) => {\r\n        const buttonContainer = document.createElement('div');\r\n        buttonContainer.className = `${this.toolbarButtonStyleClass.name}`;\r\n        //  ${\r\n        //   this.uiStyleSettings.toolbarButtonStyleColorsClassName ?\r\n        //   this.uiStyleSettings.toolbarButtonStyleColorsClassName : this.toolbarButtonStyleColorsClass.name}`;\r\n        buttonContainer.innerHTML = mi.icon;\r\n        buttonContainer.addEventListener('click', () => {\r\n          this.markerToolbarButtonClicked(buttonContainer, mi);\r\n        });\r\n        //this.markerButtonBlock.appendChild(buttonContainer);\r\n        this.buttons.push(buttonContainer);\r\n        this.markerButtons.push(buttonContainer);\r\n      });\r\n      this.overflowButton = document.createElement('div');\r\n      this.overflowButton.className = `${this.toolbarButtonStyleClass.name} ${\r\n        this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n          ? this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n          : this.toolbarButtonStyleColorsClass.name\r\n      }`;\r\n      this.overflowButton.innerHTML = OverflowIcon;\r\n      this.overflowButton.addEventListener('click', this.overflowButtonClicked);\r\n      this.markerButtonBlock.appendChild(this.overflowButton);\r\n    }\r\n\r\n    const resultButtonBlock = document.createElement('div');\r\n    resultButtonBlock.className = this.toolbarBlockStyleClass.name;\r\n    resultButtonBlock.style.whiteSpace = 'nowrap';\r\n    this.uiContainer.appendChild(resultButtonBlock);\r\n\r\n    this.addActionButton(resultButtonBlock, CheckIcon, 'render');\r\n    this.addActionButton(resultButtonBlock, CloseIcon, 'close');\r\n\r\n    this.markerjsContainer.appendChild(this.uiContainer);\r\n    this.setSelectMode();\r\n\r\n    this.setCurrentMarker();\r\n\r\n    this.adjustLayout();\r\n    // setTimeout(this.adjustLayout, 10);\r\n  }\r\n\r\n  /**\r\n   * Add a listener to the toolbar button click event.\r\n   * @param listener\r\n   */\r\n  public addButtonClickListener(listener: ToolbarButtonClickHandler): void {\r\n    this.buttonClickListeners.push(listener);\r\n  }\r\n\r\n  /**\r\n   * Remove a listener for the toolbar button click event.\r\n   * @param listener\r\n   */\r\n  public removeButtonClickListener(listener: ToolbarButtonClickHandler): void {\r\n    if (this.buttonClickListeners.indexOf(listener) > -1) {\r\n      this.buttonClickListeners.splice(\r\n        this.buttonClickListeners.indexOf(listener),\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switch toolbar to the `select` mode.\r\n   */\r\n  public setSelectMode(): void {\r\n    this.resetButtonStyles();\r\n    this.setActiveButton(this.buttons[0]);\r\n  }\r\n\r\n  /**\r\n   * Adjusts toolbar layout.\r\n   */\r\n  public adjustLayout(): void {\r\n    if (this.markerButtons && this.markerButtons.length > 0) {\r\n      const numberToFit =\r\n        Math.floor(\r\n          this.markerButtonBlock.clientWidth /\r\n            this.uiStyleSettings.toolbarHeight\r\n        ) - 1;\r\n      this.markerButtonBlock.innerHTML = '';\r\n      this.markerButtonOverflowBlock.innerHTML = '';\r\n      for (\r\n        let buttonIndex = 0;\r\n        buttonIndex < this.markerButtons.length;\r\n        buttonIndex++\r\n      ) {\r\n        if (\r\n          buttonIndex < numberToFit ||\r\n          (buttonIndex === numberToFit &&\r\n            this.markerButtons.length - 1 === numberToFit)\r\n        ) {\r\n          this.markerButtonBlock.appendChild(this.markerButtons[buttonIndex]);\r\n        } else {\r\n          if (buttonIndex === numberToFit) {\r\n            this.markerButtonBlock.appendChild(this.overflowButton);\r\n          }\r\n          this.markerButtonOverflowBlock.appendChild(\r\n            this.markerButtons[buttonIndex]\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private overflowButtonClicked() {\r\n    if (this.markerButtonOverflowBlock.style.display !== 'none') {\r\n      this.markerButtonOverflowBlock.className = this.markerButtonOverflowBlock.className.replace(\r\n        Style.fadeInAnimationClassName,\r\n        ''\r\n      );\r\n      this.markerButtonOverflowBlock.style.display = 'none';\r\n    } else {\r\n      this.markerButtonOverflowBlock.className += ` ${Style.fadeInAnimationClassName}`;\r\n      this.markerButtonOverflowBlock.style.top = `${\r\n        this.uiContainer.offsetTop + this.overflowButton.offsetHeight\r\n      }px`;\r\n      this.markerButtonOverflowBlock.style.right = `${\r\n        this.uiContainer.offsetWidth -\r\n        this.overflowButton.offsetLeft -\r\n        this.overflowButton.offsetWidth +\r\n        this.uiContainer.offsetLeft * 2\r\n      }px`;\r\n      this.markerButtonOverflowBlock.style.display = 'inline-block';\r\n    }\r\n  }\r\n\r\n  private resetButtonStyles() {\r\n    this.buttons.forEach((button) => {\r\n      button.className = button.className\r\n        .replace(\r\n          this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n            ? this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n            : this.toolbarButtonStyleColorsClass.name,\r\n          ''\r\n        )\r\n        .trim();\r\n      button.className = button.className\r\n        .replace(\r\n          this.uiStyleSettings.toolbarActiveButtonStyleColorsClassName\r\n            ? this.uiStyleSettings.toolbarActiveButtonStyleColorsClassName\r\n            : this.toolbarActiveButtonStyleColorsClass.name,\r\n          ''\r\n        )\r\n        .trim();\r\n      button.className += ` ${\r\n        this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n          ? this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n          : this.toolbarButtonStyleColorsClass.name\r\n      }`;\r\n    });\r\n  }\r\n\r\n  private addActionButton(\r\n    container: HTMLDivElement,\r\n    icon: string,\r\n    value: string\r\n  ) {\r\n    const actionButton = document.createElement('div');\r\n    actionButton.className = `${this.toolbarButtonStyleClass.name}`;\r\n    //  ${\r\n    //   this.uiStyleSettings.toolbarButtonStyleColorsClassName ?\r\n    //   this.uiStyleSettings.toolbarButtonStyleColorsClassName : this.toolbarButtonStyleColorsClass.name}`;\r\n    actionButton.innerHTML = icon;\r\n    actionButton.setAttribute('data-action', value);\r\n    actionButton.addEventListener('click', () => {\r\n      this.actionToolbarButtonClicked(actionButton, value);\r\n    });\r\n    switch (value) {\r\n      case 'select':\r\n        actionButton.style.fill = this.uiStyleSettings.selectButtonColor;\r\n        break;\r\n      case 'delete':\r\n      case 'clear':\r\n        actionButton.style.fill = this.uiStyleSettings.deleteButtonColor;\r\n        break;\r\n      case 'undo':\r\n        actionButton.style.fill = this.uiStyleSettings.selectButtonColor;\r\n        break;\r\n      case 'redo':\r\n        actionButton.style.fill = this.uiStyleSettings.selectButtonColor;\r\n        break;\r\n      case 'render':\r\n        actionButton.style.fill = this.uiStyleSettings.okButtonColor;\r\n        break;\r\n      case 'close':\r\n        actionButton.style.fill = this.uiStyleSettings.closeButtonColor;\r\n        break;\r\n    }\r\n\r\n    container.appendChild(actionButton);\r\n    this.buttons.push(actionButton);\r\n  }\r\n\r\n  private addStyles() {\r\n    this.toolbarStyleClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar',\r\n        `\r\n      width: 100%;\r\n      flex-shrink: 0;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;      \r\n      height: ${this.uiStyleSettings.toolbarHeight}px;\r\n      box-sizing: content-box;\r\n      ${\r\n        this.displayMode === 'inline'\r\n          ? `border-top-left-radius: ${Math.round(\r\n              this.uiStyleSettings.toolbarHeight / 10\r\n            )}px;`\r\n          : ''\r\n      }\r\n      ${\r\n        this.displayMode === 'inline'\r\n          ? `border-top-right-radius: ${Math.round(\r\n              this.uiStyleSettings.toolbarHeight / 10\r\n            )}px;`\r\n          : ''\r\n      }\r\n      overflow: hidden;\r\n    `\r\n      )\r\n    );\r\n\r\n    this.toolbarStyleColorsClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar_colors',\r\n        `\r\n      background-color: ${this.uiStyleSettings.toolbarBackgroundColor};\r\n      box-shadow: 0px 3px rgba(33, 33, 33, 0.1);\r\n    `\r\n      )\r\n    );\r\n\r\n    this.toolbarBlockStyleClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar-block',\r\n        `\r\n        display: inline-block;\r\n        box-sizing: content-box;\r\n    `\r\n      )\r\n    );\r\n\r\n    this.toolbarOverflowBlockStyleClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar-overflow-block',\r\n        `\r\n        position: absolute;\r\n        top: ${this.uiStyleSettings.toolbarHeight}px;\r\n        max-width: ${this.uiStyleSettings.toolbarHeight * 2}px;\r\n        z-index: 10;\r\n        box-sizing: content-box;\r\n      `\r\n      )\r\n    );\r\n    this.toolbarOverflowBlockStyleColorsClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar-overflow-block_colors',\r\n        `\r\n        background-color: ${this.uiStyleSettings.toolbarBackgroundColor};\r\n      `\r\n      )\r\n    );\r\n\r\n    const buttonPadding = this.uiStyleSettings.toolbarHeight / 4;\r\n    this.toolbarButtonStyleClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar_button',\r\n        `\r\n      display: inline-block;\r\n      width: ${this.uiStyleSettings.toolbarHeight - buttonPadding * 2}px;\r\n      height: ${this.uiStyleSettings.toolbarHeight - buttonPadding * 2}px;\r\n      padding: ${buttonPadding}px;\r\n      box-sizing: content-box;\r\n    `\r\n      )\r\n    );\r\n    this.toolbarButtonStyleColorsClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar_button_colors',\r\n        `\r\n      fill: ${this.uiStyleSettings.toolbarColor};\r\n    `\r\n      )\r\n    );\r\n\r\n    this.toolbarActiveButtonStyleColorsClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbar_active_button',\r\n        `\r\n      fill: ${this.uiStyleSettings.toolbarColor};\r\n      background-color: ${this.uiStyleSettings.toolbarBackgroundHoverColor}\r\n    `\r\n      )\r\n    );\r\n\r\n    Style.addRule(\r\n      new StyleRule(\r\n        `.${this.toolbarButtonStyleClass.name} svg`,\r\n        `\r\n      height: ${this.uiStyleSettings.toolbarHeight / 2}px;\r\n    `\r\n      )\r\n    );\r\n\r\n    Style.addRule(\r\n      new StyleRule(\r\n        `.${this.toolbarButtonStyleColorsClass.name}:hover`,\r\n        `\r\n        background-color: ${this.uiStyleSettings.toolbarBackgroundHoverColor}\r\n    `\r\n      )\r\n    );\r\n  }\r\n\r\n  private markerToolbarButtonClicked(\r\n    button: HTMLDivElement,\r\n    markerType: typeof MarkerBase\r\n  ) {\r\n    this.setActiveButton(button);\r\n    if (this.buttonClickListeners && this.buttonClickListeners.length > 0) {\r\n      this.buttonClickListeners.forEach((listener) =>\r\n        listener('marker', markerType)\r\n      );\r\n    }\r\n    this.markerButtonOverflowBlock.style.display = 'none';\r\n  }\r\n\r\n  private actionToolbarButtonClicked(button: HTMLDivElement, action: string) {\r\n    if (this.buttonClickListeners && this.buttonClickListeners.length > 0) {\r\n      this.buttonClickListeners.forEach((listener) =>\r\n        listener('action', action)\r\n      );\r\n    }\r\n    this.markerButtonOverflowBlock.style.display = 'none';\r\n    this.setActiveButton(this.buttons[0]);\r\n  }\r\n\r\n  private setActiveButton(button: HTMLDivElement) {\r\n    this.resetButtonStyles();\r\n    button.className = button.className\r\n      .replace(\r\n        this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n          ? this.uiStyleSettings.toolbarButtonStyleColorsClassName\r\n          : this.toolbarButtonStyleColorsClass.name,\r\n        ''\r\n      )\r\n      .trim();\r\n    button.className += ` ${\r\n      this.uiStyleSettings.toolbarActiveButtonStyleColorsClassName\r\n        ? this.uiStyleSettings.toolbarActiveButtonStyleColorsClassName\r\n        : this.toolbarActiveButtonStyleColorsClass.name\r\n    }`;\r\n  }\r\n\r\n  /**\r\n   * Sets current marker and enables/disables action buttons accordingly.\r\n   * @param marker\r\n   */\r\n  public setCurrentMarker(marker?: MarkerBase): void {\r\n    this.currentMarker = marker;\r\n    const activeMarkerButtons = this.buttons.filter((btn) =>\r\n      /delete|notes/.test(btn.getAttribute('data-action'))\r\n    );\r\n    activeMarkerButtons.forEach(btn => {\r\n      if (this.currentMarker === undefined) {\r\n        btn.style.fillOpacity = '0.4';\r\n        btn.style.pointerEvents = 'none';\r\n      } else {\r\n        btn.style.fillOpacity = '1';\r\n        btn.style.pointerEvents = 'all';\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { ToolboxPanel } from './ToolboxPanel';\r\nimport { Style, StyleClass, StyleRule } from './../core/Style';\r\nimport { DisplayMode } from '../core/Settings';\r\nimport { IStyleSettings } from '../core/IStyleSettings';\r\n\r\n/**\r\n * Represents the contextual toolbox for the selected marker type.\r\n */\r\nexport class Toolbox {\r\n  private panels: ToolboxPanel[] = [];\r\n  private activePanel: ToolboxPanel;\r\n  private panelButtons: HTMLDivElement[] = [];\r\n\r\n  private markerjsContainer: HTMLDivElement;\r\n  private displayMode: DisplayMode;\r\n  private uiContainer: HTMLDivElement;\r\n  private buttonRow: HTMLDivElement;\r\n  private panelRow: HTMLDivElement;\r\n\r\n  private toolboxStyleClass: StyleClass;\r\n  private toolboxStyleColorsClass: StyleClass;\r\n  private toolboxButtonStyleClass: StyleClass;\r\n  private toolboxButtonStyleColorsClass: StyleClass;\r\n  private toolboxActiveButtonStyleColorsClass: StyleClass;\r\n  private toolboxButtonRowStyleClass: StyleClass;\r\n  private toolboxButtonRowStyleColorsClass: StyleClass;\r\n  private toolboxPanelRowStyleClass: StyleClass;\r\n  private toolboxPanelRowStyleColorsClass: StyleClass;\r\n\r\n  private uiStyleSettings: IStyleSettings;\r\n  \r\n  private addStyles() {\r\n    this.toolboxStyleClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbox',\r\n        `\r\n      width: 100%;\r\n      flex-shrink: 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      font-family: sans-serif;\r\n      ${this.displayMode === 'popup' ? 'height:' + this.uiStyleSettings.toolbarHeight * 2.5 + 'px;' : ''}\r\n      box-sizing: content-box;\r\n      ${this.displayMode === 'popup' ? `background-color: ${this.uiStyleSettings.canvasBackgroundColor};` : ''}\r\n      ${this.displayMode === 'inline' ? `border-bottom-left-radius: ${Math.round(this.uiStyleSettings.toolbarHeight/10)}px;` : ''}\r\n      ${this.displayMode === 'inline' ? `border-bottom-right-radius: ${Math.round(this.uiStyleSettings.toolbarHeight/10)}px;` : ''}\r\n      overflow: hidden;\r\n    `\r\n      )\r\n    );\r\n    this.toolboxStyleColorsClass = Style.addClass(\r\n      new StyleClass(\r\n        'toolbox_colors',\r\n        `\r\n      color: ${this.uiStyleSettings.toolboxColor};\r\n    `\r\n      )\r\n    );\r\n\r\n    const buttonPadding = this.uiStyleSettings.toolbarHeight / 4;\r\n    this.toolboxButtonRowStyleClass = Style.addClass(new StyleClass('toolbox-button-row', `\r\n      display: flex;\r\n      cursor: default;\r\n      box-sizing: content-box;\r\n    `));\r\n    this.toolboxButtonRowStyleColorsClass = Style.addClass(new StyleClass('toolbox-button-row_colors', `\r\n      background-color: ${this.uiStyleSettings.toolbarBackgroundColor};\r\n    `));\r\n\r\n    this.toolboxPanelRowStyleClass = Style.addClass(new StyleClass('toolbox-panel-row', `\r\n      display: flex;\r\n      ${this.displayMode === 'inline' ? 'position: absolute;' : '' }\r\n      ${this.displayMode === 'inline' ? 'bottom: ' + this.uiStyleSettings.toolbarHeight + 'px;' : '' }\r\n      cursor: default;\r\n      height: ${this.uiStyleSettings.toolbarHeight * 1.5}px;\r\n      ${this.displayMode === 'inline' ? 'width: 100%;' : ''}\r\n      box-sizing: content-box;\r\n    `));\r\n    this.toolboxPanelRowStyleColorsClass = Style.addClass(new StyleClass('toolbox-panel-row_colors', `\r\n      background-color: ${this.uiStyleSettings.toolbarBackgroundHoverColor};\r\n    `));\r\n\r\n    this.toolboxButtonStyleClass = Style.addClass(new StyleClass('toolbox_button', `\r\n      display: inline-block;\r\n      width: ${this.uiStyleSettings.toolbarHeight - buttonPadding * 2}px;\r\n      height: ${this.uiStyleSettings.toolbarHeight - buttonPadding * 2}px;\r\n      padding: ${buttonPadding}px;\r\n      box-sizing: content-box;\r\n    `));\r\n    this.toolboxButtonStyleColorsClass = Style.addClass(new StyleClass('toolbox-button_colors', `\r\n      fill: ${this.uiStyleSettings.toolbarColor};\r\n    `));\r\n\r\n    this.toolboxActiveButtonStyleColorsClass = Style.addClass(new StyleClass('toolbox-active-button_colors', `\r\n      background-color: ${this.uiStyleSettings.toolbarBackgroundHoverColor};\r\n      fill: ${this.uiStyleSettings.toolbarColor};\r\n    `));\r\n\r\n    Style.addRule(\r\n      new StyleRule(\r\n        `.${this.toolboxButtonStyleColorsClass.name}:hover`,\r\n        `\r\n        background-color: ${this.uiStyleSettings.toolbarBackgroundHoverColor}\r\n    `\r\n      )\r\n    );\r\n\r\n    Style.addRule(\r\n      new StyleRule(\r\n        `.${this.toolboxButtonStyleClass.name} svg`,\r\n        `\r\n      height: ${this.uiStyleSettings.toolbarHeight / 2}px;\r\n    `\r\n      )\r\n    );\r\n\r\n  }\r\n\r\n  /**\r\n   * Creates the toolbox object\r\n   * @param markerjsContainer - container for the toolbox in marker.js UI.\r\n   * @param displayMode - marker.js display mode (`inline` or `popup`).\r\n   * @param uiStyleSettings - settings for styling the toolbox elements.\r\n   */\r\n  constructor(markerjsContainer: HTMLDivElement, displayMode: DisplayMode, uiStyleSettings: IStyleSettings) {\r\n    this.markerjsContainer = markerjsContainer;\r\n    this.displayMode = displayMode;\r\n    this.uiStyleSettings = uiStyleSettings;\r\n\r\n    this.panelButtonClick = this.panelButtonClick.bind(this);\r\n\r\n    this.addStyles();\r\n  }\r\n\r\n  /**\r\n   * Creates and displays the main toolbox UI.\r\n   */\r\n  public show(visiblity: string): void {\r\n    this.uiContainer = document.createElement('div');\r\n    this.uiContainer.style.visibility = visiblity;\r\n    this.uiContainer.className = `${this.toolboxStyleClass.name} ${\r\n      this.uiStyleSettings.toolboxStyleColorsClassName ?? this.toolboxStyleColorsClass.name}`;\r\n\r\n    this.markerjsContainer.appendChild(this.uiContainer);\r\n  }\r\n\r\n  /**\r\n   * Creaes buttons for the top-level toolbox panel.\r\n   * @param panels - available panels.\r\n   */\r\n  public setPanelButtons(panels: ToolboxPanel[]): void {\r\n    this.panels = panels;\r\n    if (this.uiContainer !== undefined) {\r\n      this.uiContainer.innerHTML = '';\r\n\r\n      this.panelRow = document.createElement('div');\r\n      this.panelRow.className = `${this.toolboxPanelRowStyleClass.name} ${\r\n        this.uiStyleSettings.toolboxPanelRowStyleColorsClassName ?? this.toolboxPanelRowStyleColorsClass.name}`;\r\n      this.uiContainer.appendChild(this.panelRow);\r\n      this.buttonRow = document.createElement('div');\r\n      this.buttonRow.className = `${this.toolboxButtonRowStyleClass.name} ${\r\n        this.uiStyleSettings.toolboxButtonRowStyleColorsClassName ?? this.toolboxButtonRowStyleColorsClass.name} `;\r\n      this.uiContainer.appendChild(this.buttonRow);\r\n\r\n      this.panelButtons.splice(0);\r\n\r\n      this.panels.forEach(panel => {\r\n        const panelBtnDiv = document.createElement('div');\r\n        panelBtnDiv.className = `${this.toolboxButtonStyleClass.name} ${\r\n          this.uiStyleSettings.toolboxButtonStyleColorsClassName ?? this.toolboxButtonStyleColorsClass.name}`;\r\n        panelBtnDiv.innerHTML = panel.icon;\r\n        panelBtnDiv.title = panel.title;\r\n        panelBtnDiv.addEventListener('click', () => {\r\n          this.panelButtonClick(panel);\r\n        })\r\n        this.panelButtons.push(panelBtnDiv);\r\n        this.buttonRow.appendChild(panelBtnDiv);\r\n      });\r\n      if (this.displayMode === 'inline') {\r\n        this.panelRow.style.display = 'none';\r\n      } else {\r\n        this.panelRow.style.visibility = 'hidden';\r\n      }\r\n    }\r\n    // if (this.displayMode === 'popup' && this.panels.length > 0) {\r\n    //   // this.showPanel(this.activePanel ? this.activePanel : this.panels[0]);\r\n    //   this.panelButtonClick(this.panels[0]);\r\n    // }\r\n  }\r\n\r\n  private panelButtonClick(panel: ToolboxPanel) {\r\n    let panelIndex = -1; \r\n    if (panel !== this.activePanel) {\r\n      panelIndex = this.panels.indexOf(panel);\r\n      this.panelRow.innerHTML = '';\r\n      const panelUI = panel.getUi();\r\n      panelUI.style.margin = `${this.uiStyleSettings.toolbarHeight / 4}px`;\r\n      this.panelRow.appendChild(panelUI);\r\n      this.panelRow.style.display = 'flex';\r\n      this.panelRow.style.visibility = 'visible';\r\n      this.panelRow.className = this.panelRow.className.replace(Style.fadeOutAnimationClassName, '');\r\n      this.panelRow.className += ` ${Style.fadeInAnimationClassName}`;\r\n      this.activePanel = panel;\r\n    } else {\r\n      this.activePanel = undefined;\r\n      // hide panel\r\n      this.panelRow.className = this.panelRow.className.replace(Style.fadeInAnimationClassName, '');\r\n      this.panelRow.className += ` ${Style.fadeOutAnimationClassName}`;\r\n      setTimeout(() => {\r\n        if (this.displayMode === 'inline') {\r\n          this.panelRow.style.display = 'none';\r\n        } else {\r\n          this.panelRow.style.visibility = 'hidden';\r\n        }\r\n      }, 200);\r\n    }\r\n    this.panelButtons.forEach((pb, index) => {\r\n      pb.className = `${this.toolboxButtonStyleClass.name} ` +\r\n        (index === panelIndex\r\n          ? `${this.uiStyleSettings.toolboxActiveButtonStyleColorsClassName ?? this.toolboxActiveButtonStyleColorsClass.name}`\r\n          :  `${this.uiStyleSettings.toolboxButtonStyleColorsClassName ?? this.toolboxButtonStyleColorsClass.name}`);\r\n    });\r\n  }\r\n\r\n}\r\n","/**\r\n * Base class for all toolbox property panels.\r\n */\r\nexport abstract class ToolboxPanel {\r\n  /**\r\n   * Panel name/title.\r\n   */\r\n  public title: string;\r\n  /**\r\n   * Panel button icon as an SVG markup.\r\n   */\r\n  public icon: string;\r\n  /**\r\n   * Create panel with supplied title and icon.\r\n   * @param title - panel name (used for accessibility)\r\n   * @param icon - panel button icon (SVG image markup)\r\n   */\r\n  constructor(title: string, icon?: string) {\r\n    this.title = title;\r\n    this.icon = icon;\r\n  }\r\n  /**\r\n   * Returns toolbox panel UI.\r\n   */\r\n  public abstract getUi(): HTMLDivElement;\r\n}\r\n","import { Style } from '../../core/Style';\r\nimport { ToolboxPanel } from '../ToolboxPanel';\r\nimport Icon from './color-picker-panel-icon.svg';\r\n\r\n/**\r\n * Handler type for the color change event.\r\n */\r\nexport type ColorChangeHandler = (newColor: string) => void;\r\n\r\n/**\r\n * Color picker panel.\r\n */\r\nexport class ColorPickerPanel extends ToolboxPanel {\r\n  public colors: string[] = [];\r\n  private currentColor?: string;\r\n  private addTransparent = false;\r\n\r\n  private colorBoxes: HTMLDivElement[] = [];\r\n\r\n  /**\r\n   * Color change event handler.\r\n   */\r\n  public onColorChanged?: ColorChangeHandler;\r\n\r\n  /**\r\n   * Creates a color picker panel.\r\n   * @param title - panel title.\r\n   * @param colors - available colors.\r\n   * @param currentColor - currently selected color.\r\n   * @param icon - panel button icon (SVG imager markup).\r\n   */\r\n  constructor(title: string, colors: string[], currentColor?: string, icon?: string) {\r\n    super(title, icon ? icon : Icon);\r\n    this.colors = colors;\r\n    this.currentColor = currentColor;\r\n\r\n    this.setCurrentColor = this.setCurrentColor.bind(this);\r\n    this.getColorBox = this.getColorBox.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns panel UI.\r\n   */\r\n  public getUi(): HTMLDivElement {\r\n    const panelDiv = document.createElement('div');\r\n    panelDiv.style.overflow = 'hidden';\r\n    panelDiv.style.whiteSpace = 'nowrap';\r\n    this.colors.forEach((color) => {\r\n      const colorBoxContainer = this.getColorBox(color);\r\n      panelDiv.appendChild(colorBoxContainer);\r\n      this.colorBoxes.push(colorBoxContainer);\r\n    });\r\n    return panelDiv;\r\n  }\r\n\r\n  private getColorBox(color): HTMLDivElement {\r\n    const buttonPadding = Style.settings.toolbarHeight / 4;\r\n    const buttonHeight = Style.settings.toolbarHeight - buttonPadding;\r\n\r\n    const colorBoxContainer = document.createElement('div');\r\n    colorBoxContainer.style.display = 'inline-block';\r\n    colorBoxContainer.style.boxSizing = 'content-box';\r\n    colorBoxContainer.style.width = `${buttonHeight - 2}px`;\r\n    colorBoxContainer.style.height = `${buttonHeight - 2}px`;\r\n    colorBoxContainer.style.padding = '1px';\r\n    colorBoxContainer.style.marginRight = '2px';\r\n    colorBoxContainer.style.marginBottom = '2px';\r\n    colorBoxContainer.style.borderWidth = '2px';\r\n    colorBoxContainer.style.borderStyle = 'solid';\r\n    colorBoxContainer.style.borderRadius = `${(buttonHeight + 2)/2}px`\r\n    colorBoxContainer.style.borderColor =\r\n      color === this.currentColor ? Style.settings.toolboxAccentColor : 'transparent';\r\n\r\n    colorBoxContainer.addEventListener('click', () => {\r\n      this.setCurrentColor(color, colorBoxContainer);\r\n    })\r\n\r\n    const colorBox = document.createElement('div');\r\n    colorBox.style.display = 'inline-block';\r\n    colorBox.style.width = `${buttonHeight - 2}px`;\r\n    colorBox.style.height = `${buttonHeight - 2}px`;\r\n    colorBox.style.backgroundColor = color;\r\n    colorBox.style.borderRadius = `${buttonHeight/2}px`;\r\n    if (color === 'transparent') {\r\n      colorBox.style.fill = Style.settings.toolboxAccentColor;\r\n      colorBox.innerHTML = `<svg viewBox=\"0 0 24 24\">\r\n        <path d=\"M2,5.27L3.28,4L20,20.72L18.73,22L15.65,18.92C14.5,19.3 13.28,19.5 12,19.5C7,19.5 2.73,16.39 1,12C1.69,10.24 2.79,8.69 4.19,7.46L2,5.27M12,9A3,3 0 0,1 15,12C15,12.35 14.94,12.69 14.83,13L11,9.17C11.31,9.06 11.65,9 12,9M12,4.5C17,4.5 21.27,7.61 23,12C22.18,14.08 20.79,15.88 19,17.19L17.58,15.76C18.94,14.82 20.06,13.54 20.82,12C19.17,8.64 15.76,6.5 12,6.5C10.91,6.5 9.84,6.68 8.84,7L7.3,5.47C8.74,4.85 10.33,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C12.69,17.5 13.37,17.43 14,17.29L11.72,15C10.29,14.85 9.15,13.71 9,12.28L5.6,8.87C4.61,9.72 3.78,10.78 3.18,12Z\" />\r\n      </svg>`;\r\n    }\r\n\r\n    colorBoxContainer.appendChild(colorBox);\r\n\r\n    return colorBoxContainer;\r\n  }\r\n\r\n  private setCurrentColor(color: string, target: HTMLDivElement) {\r\n    this.currentColor = color;\r\n\r\n    this.colorBoxes.forEach(box => {\r\n      box.style.borderColor = box === target ? Style.settings.toolboxAccentColor : 'transparent';\r\n    });\r\n\r\n    if (this.onColorChanged) {\r\n      this.onColorChanged(color);\r\n    }\r\n  }\r\n}\r\n","import { IPoint } from './IPoint';\r\nimport { ToolboxPanel } from '../ui/ToolboxPanel';\r\nimport { MarkerBaseState, MarkerState } from './MarkerBaseState';\r\nimport { Settings } from './Settings';\r\n\r\n/**\r\n * Base class for all available and custom marker types.\r\n * \r\n * All markers used with marker.js 2 should be descendants of this class.\r\n */\r\nexport class MarkerBase {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'MarkerBase';\r\n\r\n  /**\r\n   * Instance property returning marker's type name.\r\n   * \r\n   * @since 2.16.0\r\n   */\r\n  public get typeName(): string {\r\n    return Object.getPrototypeOf(this).constructor.typeName;\r\n  }\r\n\r\n  protected _container: SVGGElement;\r\n  /**\r\n   * SVG container object holding the marker's visual.\r\n   */\r\n  public get container(): SVGGElement {\r\n    return this._container;\r\n  }\r\n  protected _overlayContainer: HTMLDivElement;\r\n  /**\r\n   * HTML container that can be used to render overlay objects while the marker is active.\r\n   * \r\n   * For example, this is used for the text editing layer while editing text in the {@see TextMarker}.\r\n   */\r\n  public get overlayContainer(): HTMLDivElement {\r\n    return this._overlayContainer;\r\n  }\r\n  protected _state: MarkerState = 'new';\r\n  /**\r\n   * Current marker state.\r\n   *\r\n   * Both MarkerArea and the marker itself can react differently to different events based on what state the marker is in.\r\n   */\r\n  public get state(): MarkerState {\r\n    return this._state;\r\n  }\r\n  protected globalSettings: Settings;\r\n\r\n  /**\r\n   * Additional information about the marker\r\n   */\r\n  public notes?: string;\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title: string;\r\n\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon: string;\r\n\r\n  /**\r\n   * Method called when marker creation is finished.\r\n   */\r\n  public onMarkerCreated: (marker: MarkerBase) => void;\r\n\r\n  /**\r\n   * Method to call when foreground color changes.\r\n   */\r\n  public onColorChanged?: (color: string) => void;\r\n  /**\r\n   * Method to call when background/fill color changes.\r\n   */\r\n  public onFillColorChanged?: (color: string) => void;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    this._container = container;\r\n    this._overlayContainer = overlayContainer;\r\n    this.globalSettings = settings;\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Is this marker selected?\r\n   * \r\n   * @since 2.16.0\r\n   */\r\n  protected _isSelected = false;\r\n\r\n  /**\r\n   * Returns true if the marker is currently selected\r\n   * \r\n   * @since 2.16.0\r\n   */\r\n  public get isSelected(): boolean {\r\n    return this._isSelected;\r\n  }\r\n\r\n  /**\r\n   * Selects this marker and displays appropriate selected marker UI.\r\n   */\r\n  public select(): void {\r\n    this.container.style.cursor = 'move';\r\n    this._isSelected = true;\r\n  }\r\n\r\n  /**\r\n   * Deselects this marker and hides selected marker UI.\r\n   */\r\n  public deselect(): void {\r\n    this.container.style.cursor = 'default';\r\n    this._isSelected = false;\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n  public pointerDown(point: IPoint, target?: EventTarget):void {}\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) double click event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n  public dblClick(point: IPoint, target?: EventTarget):void {}\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n  public manipulate(point: IPoint):void {}\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n  public pointerUp(point: IPoint):void {}\r\n\r\n  /**\r\n   * Disposes the marker and clean's up.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  public dispose(): void {}\r\n\r\n  protected addMarkerVisualToContainer(element: SVGElement): void {\r\n    if (this.container.childNodes.length > 0) {\r\n      this.container.insertBefore(element, this.container.childNodes[0]);\r\n    } else {\r\n      this.container.appendChild(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): MarkerBaseState {\r\n    return { \r\n      typeName: MarkerBase.typeName, \r\n      state: this.state,\r\n      notes: this.notes\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    this._state = state.state;\r\n    this.notes = state.notes;\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\r\n  public scale(scaleX: number, scaleY: number): void {}\r\n\r\n  /**\r\n   * Called by a marker when its foreground color changes.\r\n   * @param color \r\n   */\r\n  protected colorChanged(color: string): void {\r\n    if (this.onColorChanged) {\r\n      this.onColorChanged(color);\r\n    }\r\n  }\r\n  /**\r\n   * Called by a marker when its background/fill color changes.\r\n   * @param color \r\n   */\r\n  protected fillColorChanged(color: string): void {\r\n    if (this.onFillColorChanged) {\r\n      this.onFillColorChanged(color);\r\n    }\r\n  }\r\n}\r\n","import { ResizeGrip } from './ResizeGrip';\r\n\r\n/**\r\n * RectangularBoxMarkerGrips is a set of resize/rotation grips for a rectangular marker.\r\n */\r\nexport class RectangularBoxMarkerGrips {\r\n  /**\r\n   * Top-left grip.\r\n   */\r\n  public topLeft: ResizeGrip;\r\n  /**\r\n   * Top-center grip.\r\n   */\r\n  public topCenter: ResizeGrip;\r\n  /**\r\n   * Top-right grip.\r\n   */\r\n  public topRight: ResizeGrip;\r\n  /**\r\n   * Center-left grip.\r\n   */\r\n  public centerLeft: ResizeGrip;\r\n  /**\r\n   * Center-right grip.\r\n   */\r\n  public centerRight: ResizeGrip;\r\n  /**\r\n   * Bottom-left grip.\r\n   */\r\n  public bottomLeft: ResizeGrip;\r\n  /**\r\n   * Bottom-center grip.\r\n   */\r\n  public bottomCenter: ResizeGrip;\r\n  /**\r\n   * Bottom-right grip.\r\n   */\r\n  public bottomRight: ResizeGrip;\r\n\r\n  /**\r\n   * Creates a new marker grip set.\r\n   */\r\n  constructor() {\r\n    this.findGripByVisual = this.findGripByVisual.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns a marker grip owning the specified visual.\r\n   * @param gripVisual - visual for owner to be determined.\r\n   */\r\n  public findGripByVisual(\r\n    gripVisual: EventTarget\r\n  ): ResizeGrip | undefined {\r\n      if (this.topLeft.ownsTarget(gripVisual)) {\r\n        return this.topLeft;\r\n      } else if (this.topCenter.ownsTarget(gripVisual)) {\r\n        return this.topCenter;\r\n      } else if (this.topRight.ownsTarget(gripVisual)) {\r\n        return this.topRight;\r\n      } else if (this.centerLeft.ownsTarget(gripVisual)) {\r\n        return this.centerLeft;\r\n      } else if (this.centerRight.ownsTarget(gripVisual)) {\r\n        return this.centerRight;\r\n      } else if (this.bottomLeft.ownsTarget(gripVisual)) {\r\n        return this.bottomLeft;\r\n      } else if (this.bottomCenter.ownsTarget(gripVisual)) {\r\n        return this.bottomCenter;\r\n      } else if (this.bottomRight.ownsTarget(gripVisual)) {\r\n        return this.bottomRight;\r\n      } else {\r\n        return undefined;\r\n      }\r\n  }\r\n}\r\n","import { SvgHelper } from '../core/SvgHelper';\r\n\r\n/**\r\n * Represents a single resize-manipulation grip used in marker's manipulation controls.\r\n */\r\nexport class ResizeGrip {\r\n  /**\r\n   * Grip's visual element.\r\n   */\r\n  public visual: SVGGraphicsElement;\r\n\r\n  /**\r\n   * Grip's size (raduis).\r\n   */\r\n  public readonly GRIP_SIZE = 10;\r\n\r\n  /**\r\n   * Creates a new grip.\r\n   */\r\n  constructor() {\r\n    this.visual = SvgHelper.createGroup();\r\n    this.visual.appendChild(\r\n      SvgHelper.createCircle(this.GRIP_SIZE * 1.5, [['fill', 'transparent']])\r\n    );\r\n    this.visual.appendChild(\r\n      SvgHelper.createCircle(this.GRIP_SIZE, [\r\n        ['fill', '#cccccc'],\r\n        ['fill-opacity', '0.7'],\r\n        ['stroke', '#333333'],\r\n        ['stroke-width', '2'],\r\n        ['stroke-opacity', '0.7']\r\n      ])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the grip. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (\r\n      el === this.visual ||\r\n      el === this.visual.childNodes[0] ||\r\n      el === this.visual.childNodes[1]\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Represents a simplified version of the SVGMatrix.\r\n */\r\nexport interface ITransformMatrix {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n  e: number;\r\n  f: number;\r\n}\r\n\r\n/**\r\n * A utility class to transform between SVGMatrix and its simplified representation.\r\n */\r\nexport class TransformMatrix {\r\n  public static toITransformMatrix(matrix: SVGMatrix): ITransformMatrix {\r\n    return {\r\n      a: matrix.a,\r\n      b: matrix.b,\r\n      c: matrix.c,\r\n      d: matrix.d,\r\n      e: matrix.e,\r\n      f: matrix.f\r\n    }\r\n  }\r\n  public static toSVGMatrix(currentMatrix: SVGMatrix, newMatrix: ITransformMatrix): SVGMatrix {\r\n    currentMatrix.a = newMatrix.a;\r\n    currentMatrix.b = newMatrix.b;\r\n    currentMatrix.c = newMatrix.c;\r\n    currentMatrix.d = newMatrix.d;\r\n    currentMatrix.e = newMatrix.e;\r\n    currentMatrix.f = newMatrix.f;\r\n    return currentMatrix;\r\n  }\r\n}","import { MarkerBase } from '../core/MarkerBase';\r\n\r\nimport { IPoint } from '../core/IPoint';\r\nimport { SvgHelper } from '../core/SvgHelper';\r\n\r\nimport { RectangularBoxMarkerGrips } from './RectangularBoxMarkerGrips';\r\nimport { ResizeGrip } from './ResizeGrip';\r\nimport { Settings } from '../core/Settings';\r\nimport { RectangularBoxMarkerBaseState } from './RectangularBoxMarkerBaseState';\r\nimport { MarkerBaseState } from '../core/MarkerBaseState';\r\nimport { TransformMatrix } from '../core/TransformMatrix';\r\n\r\n/**\r\n * RectangularBoxMarkerBase is a base class for all marker's with rectangular controls such as all rectangle markers,\r\n * text and callout markers.\r\n * \r\n * It creates and manages the rectangular control box and related resize, move, and rotate manipulations.\r\n */\r\nexport class RectangularBoxMarkerBase extends MarkerBase {\r\n  /**\r\n   * x coordinate of the top-left corner.\r\n   */\r\n  protected left = 0;\r\n  /**\r\n   * y coordinate of the top-left corner.\r\n   */\r\n  protected top = 0;\r\n  /**\r\n   * Marker width.\r\n   */\r\n  protected width = 0;\r\n  /**\r\n   * Marker height.\r\n   */\r\n  protected height = 0;\r\n\r\n  /**\r\n   * The default marker size when the marker is created with a click (without dragging).\r\n   */\r\n  protected defaultSize: IPoint = {x: 50, y: 20};\r\n\r\n  /**\r\n   * x coordinate of the top-left corner at the start of manipulation.\r\n   */\r\n  protected manipulationStartLeft: number;\r\n  /**\r\n   * y coordinate of the top-left corner at the start of manipulation.\r\n   */\r\n  protected manipulationStartTop: number;\r\n  /**\r\n   * Width at the start of manipulation.\r\n   */\r\n  protected manipulationStartWidth: number;\r\n  /**\r\n   * Height at the start of manipulation.\r\n   */\r\n  protected manipulationStartHeight: number;\r\n\r\n  /**\r\n   * x coordinate of the pointer at the start of manipulation.\r\n   */\r\n  protected manipulationStartX: number;\r\n  /**\r\n   * y coordinate of the pointer at the start of manipulation.\r\n   */\r\n  protected manipulationStartY: number;\r\n\r\n  /**\r\n   * Pointer's horizontal distance from the top left corner.\r\n   */\r\n  protected offsetX = 0;\r\n  /**\r\n   * Pointer's vertical distance from the top left corner.\r\n   */\r\n  protected offsetY = 0;\r\n\r\n  /**\r\n   * Marker's rotation angle.\r\n   */\r\n  protected rotationAngle = 0;\r\n\r\n  /**\r\n   * x coordinate of the marker's center.\r\n   */\r\n  protected get centerX(): number {\r\n    return this.left + this.width / 2;\r\n  }\r\n  /**\r\n   * y coordinate of the marker's center.\r\n   */\r\n  protected get centerY(): number {\r\n    return this.top + this.height / 2;\r\n  }\r\n\r\n  private _visual: SVGGraphicsElement;\r\n  /**\r\n   * Container for the marker's visual.\r\n   */\r\n  protected get visual(): SVGGraphicsElement {\r\n    return this._visual;\r\n  }\r\n  protected set visual(value: SVGGraphicsElement) {\r\n    this._visual = value;\r\n    const translate = SvgHelper.createTransform();\r\n    this._visual.transform.baseVal.appendItem(translate);\r\n  }\r\n\r\n  /**\r\n   * Container for the marker's editing controls.\r\n   */\r\n  protected controlBox: SVGGElement;\r\n  private readonly CB_DISTANCE: number = 10;\r\n  private controlRect: SVGRectElement;\r\n  private rotatorGripLine: SVGLineElement;\r\n\r\n  private controlGrips: RectangularBoxMarkerGrips;\r\n  private rotatorGrip: ResizeGrip;\r\n  private activeGrip: ResizeGrip;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    // add rotation transform\r\n    this.container.transform.baseVal.appendItem(SvgHelper.createTransform());\r\n\r\n    this.setupControlBox();\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (super.ownsTarget(el)) {\r\n      return true;\r\n    } else if (\r\n      this.controlGrips.findGripByVisual(el) !== undefined ||\r\n      this.rotatorGrip.ownsTarget(el)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n\r\n    if (this.state === 'new') {\r\n      this.left = point.x;\r\n      this.top = point.y;\r\n    }\r\n\r\n    this.manipulationStartLeft = this.left;\r\n    this.manipulationStartTop = this.top;\r\n    this.manipulationStartWidth = this.width;\r\n    this.manipulationStartHeight = this.height;\r\n\r\n    const rotatedPoint = this.unrotatePoint(point);\r\n    this.manipulationStartX = rotatedPoint.x;\r\n    this.manipulationStartY = rotatedPoint.y;\r\n\r\n    this.offsetX = rotatedPoint.x - this.left;\r\n    this.offsetY = rotatedPoint.y - this.top;\r\n\r\n    if (this.state !== 'new') {\r\n      this.select();\r\n      this.activeGrip = this.controlGrips.findGripByVisual(target as SVGGraphicsElement);\r\n      if (this.activeGrip !== undefined) {\r\n        this._state = 'resize';\r\n      } else if (this.rotatorGrip.ownsTarget(target)) {\r\n        this.activeGrip = this.rotatorGrip;\r\n\r\n        const rotatedCenter = this.rotatePoint({x: this.centerX, y: this.centerY});\r\n        this.left = rotatedCenter.x - this.width / 2;\r\n        this.top = rotatedCenter.y - this.height / 2;\r\n        this.moveVisual({ x: this.left, y: this.top });\r\n\r\n        const rotate = this.container.transform.baseVal.getItem(0);\r\n        rotate.setRotate(this.rotationAngle, this.centerX, this.centerY);\r\n        this.container.transform.baseVal.replaceItem(rotate, 0);\r\n\r\n        this.adjustControlBox();\r\n\r\n        this._state = 'rotate';\r\n      } else {\r\n        this._state = 'move';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerUp(point: IPoint): void {\r\n    const inState = this.state;\r\n    super.pointerUp(point);\r\n    if (this.state === 'creating' && this.width < 10 && this.height < 10) {\r\n      this.width = this.defaultSize.x;\r\n      this.height = this.defaultSize.y;\r\n    } else {\r\n      this.manipulate(point);\r\n    }\r\n    this._state = 'select';\r\n    if (inState === 'creating' && this.onMarkerCreated) {\r\n      this.onMarkerCreated(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves visual to the specified coordinates.\r\n   * @param point - coordinates of the new top-left corner of the visual.\r\n   */\r\n  protected moveVisual(point: IPoint): void {\r\n    this.visual.style.transform = `translate(${point.x}px, ${point.y}px)`;\r\n    // const translate = this.visual.transform.baseVal.getItem(0);\r\n    // translate.setTranslate(point.x, point.y);\r\n    // this.visual.transform.baseVal.replaceItem(translate, 0);\r\n  }\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    const rotatedPoint = this.unrotatePoint(point);\r\n\r\n    if (this.state === 'creating') {\r\n      this.resize(point);\r\n    } else if (this.state === 'move') {\r\n      this.left =\r\n        this.manipulationStartLeft +\r\n        (rotatedPoint.x - this.manipulationStartLeft) -\r\n        this.offsetX;\r\n      this.top =\r\n        this.manipulationStartTop +\r\n        (rotatedPoint.y - this.manipulationStartTop) -\r\n        this.offsetY;\r\n      this.moveVisual({x: this.left, y: this.top});\r\n      this.adjustControlBox();\r\n    } else if (this.state === 'resize') {\r\n      this.resize(rotatedPoint);\r\n    } else if (this.state === 'rotate') {\r\n      this.rotate(point);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resizes the marker based on pointer coordinates and context.\r\n   * @param point - pointer coordinates.\r\n   */\r\n  protected resize(point: IPoint): void {\r\n    let newX = this.manipulationStartLeft;\r\n    let newWidth = this.manipulationStartWidth;\r\n    let newY = this.manipulationStartTop;\r\n    let newHeight = this.manipulationStartHeight;\r\n\r\n    switch(this.activeGrip) {\r\n      case this.controlGrips.bottomLeft:\r\n      case this.controlGrips.centerLeft:\r\n      case this.controlGrips.topLeft:\r\n        newX = this.manipulationStartLeft + point.x - this.manipulationStartX;\r\n        newWidth = this.manipulationStartWidth + this.manipulationStartLeft - newX;\r\n        break; \r\n      case this.controlGrips.bottomRight:\r\n      case this.controlGrips.centerRight:\r\n      case this.controlGrips.topRight:\r\n      case undefined:\r\n        newWidth = this.manipulationStartWidth + point.x - this.manipulationStartX;\r\n        break; \r\n    }\r\n\r\n    switch(this.activeGrip) {\r\n      case this.controlGrips.topCenter:\r\n      case this.controlGrips.topLeft:\r\n      case this.controlGrips.topRight:\r\n        newY = this.manipulationStartTop + point.y - this.manipulationStartY;\r\n        newHeight = this.manipulationStartHeight + this.manipulationStartTop - newY;\r\n        break; \r\n      case this.controlGrips.bottomCenter:\r\n      case this.controlGrips.bottomLeft:\r\n      case this.controlGrips.bottomRight:\r\n      case undefined:\r\n        newHeight = this.manipulationStartHeight + point.y - this.manipulationStartY;\r\n        break; \r\n    }\r\n\r\n    if (newWidth >= 0) {\r\n      this.left = newX;\r\n      this.width = newWidth;\r\n    } else {\r\n      this.left = newX + newWidth;\r\n      this.width = -newWidth;\r\n    }\r\n    if (newHeight >= 0) {\r\n      this.top = newY;\r\n      this.height = newHeight;\r\n    } else {\r\n      this.top = newY + newHeight;\r\n      this.height = -newHeight;\r\n    }\r\n\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Sets control box size and location.\r\n   */\r\n  protected setSize(): void {\r\n    this.moveVisual({x: this.left, y: this.top});\r\n    this.adjustControlBox();\r\n  }\r\n\r\n  private rotate(point: IPoint) {\r\n    // avoid glitch when crossing the 0 rotation point\r\n    if (Math.abs(point.x - this.centerX) > 0.1) {\r\n      const sign = Math.sign(point.x - this.centerX);\r\n      this.rotationAngle =\r\n        (Math.atan((point.y - this.centerY) / (point.x - this.centerX)) * 180) /\r\n          Math.PI +\r\n        90 * sign;\r\n      this.applyRotation();\r\n    }\r\n  }\r\n\r\n  private applyRotation() {\r\n    const rotate = this.container.transform.baseVal.getItem(0);\r\n    rotate.setRotate(this.rotationAngle, this.centerX, this.centerY);\r\n    this.container.transform.baseVal.replaceItem(rotate, 0);\r\n  }\r\n\r\n  /**\r\n   * Returns point coordinates based on the actual screen coordinates and marker's rotation.\r\n   * @param point - original pointer coordinates\r\n   */\r\n  protected rotatePoint(point: IPoint): IPoint {\r\n    if (this.rotationAngle === 0) {\r\n      return point;\r\n    }\r\n    \r\n    const matrix = this.container.getCTM();\r\n    let svgPoint = SvgHelper.createPoint(point.x, point.y);\r\n    svgPoint = svgPoint.matrixTransform(matrix);\r\n\r\n    const result = { x: svgPoint.x, y: svgPoint.y };\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Returns original point coordinates based on coordinates with rotation applied.\r\n   * @param point - rotated point coordinates.\r\n   */\r\n  protected unrotatePoint(point: IPoint): IPoint {\r\n    if (this.rotationAngle === 0) {\r\n      return point;\r\n    }\r\n    \r\n    let matrix = this.container.getCTM();\r\n    matrix = matrix.inverse();\r\n    let svgPoint = SvgHelper.createPoint(point.x, point.y);\r\n    svgPoint = svgPoint.matrixTransform(matrix);\r\n\r\n    const result = { x: svgPoint.x, y: svgPoint.y };\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Displays marker's controls.\r\n   */\r\n  public select(): void {\r\n    super.select();\r\n    this.adjustControlBox();\r\n    this.controlBox.style.display = '';\r\n  }\r\n\r\n  /**\r\n   * Hides marker's controls.\r\n   */\r\n  public deselect(): void {\r\n    super.deselect();\r\n    this.controlBox.style.display = 'none';\r\n  }\r\n\r\n  private setupControlBox() {\r\n    this.controlBox = SvgHelper.createGroup();\r\n    const translate = SvgHelper.createTransform();\r\n    translate.setTranslate(-this.CB_DISTANCE / 2, -this.CB_DISTANCE / 2);\r\n    this.controlBox.transform.baseVal.appendItem(translate);\r\n\r\n    this.container.appendChild(this.controlBox);\r\n\r\n    this.controlRect = SvgHelper.createRect(\r\n      this.width + this.CB_DISTANCE,\r\n      this.height + this.CB_DISTANCE,\r\n      [\r\n        ['stroke', 'black'],\r\n        ['stroke-width', '1'],\r\n        ['stroke-opacity', '0.5'],\r\n        ['stroke-dasharray', '3, 2'],\r\n        ['fill', 'transparent'],\r\n        ['pointer-events', 'none']\r\n      ]\r\n    );\r\n\r\n    this.controlBox.appendChild(this.controlRect);\r\n\r\n    this.rotatorGripLine = SvgHelper.createLine(\r\n      (this.width + this.CB_DISTANCE * 2) / 2,\r\n      this.top - this.CB_DISTANCE,\r\n      (this.width + this.CB_DISTANCE * 2) / 2,\r\n      this.top - this.CB_DISTANCE * 3,\r\n      [\r\n        ['stroke', 'black'],\r\n        ['stroke-width', '1'],\r\n        ['stroke-opacity', '0.5'],\r\n        ['stroke-dasharray', '3, 2'],\r\n      ]\r\n    );\r\n\r\n    this.controlBox.appendChild(this.rotatorGripLine);\r\n\r\n    this.controlGrips = new RectangularBoxMarkerGrips();\r\n    this.addControlGrips();\r\n\r\n    this.controlBox.style.display = 'none';\r\n  }\r\n\r\n  private adjustControlBox() {\r\n    const translate = this.controlBox.transform.baseVal.getItem(0);\r\n    translate.setTranslate(\r\n      this.left - this.CB_DISTANCE / 2,\r\n      this.top - this.CB_DISTANCE / 2\r\n    );\r\n    this.controlBox.transform.baseVal.replaceItem(translate, 0);\r\n    this.controlRect.setAttribute(\r\n      'width',\r\n      (this.width + this.CB_DISTANCE).toString()\r\n    );\r\n    this.controlRect.setAttribute(\r\n      'height',\r\n      (this.height + this.CB_DISTANCE).toString()\r\n    );\r\n    this.rotatorGripLine.setAttribute(\r\n      'x1',\r\n      ((this.width + this.CB_DISTANCE) / 2).toString()\r\n    );\r\n    this.rotatorGripLine.setAttribute('y1', (-this.CB_DISTANCE / 2).toString());\r\n    this.rotatorGripLine.setAttribute(\r\n      'x2',\r\n      ((this.width + this.CB_DISTANCE) / 2).toString()\r\n    );\r\n    this.rotatorGripLine.setAttribute('y2', (-this.CB_DISTANCE * 3).toString());\r\n    this.positionGrips();\r\n  }\r\n\r\n  private addControlGrips() {\r\n    this.controlGrips.topLeft = this.createGrip();\r\n    this.controlGrips.topCenter = this.createGrip();\r\n    this.controlGrips.topRight = this.createGrip();\r\n    this.controlGrips.centerLeft = this.createGrip();\r\n    this.controlGrips.centerRight = this.createGrip();\r\n    this.controlGrips.bottomLeft = this.createGrip();\r\n    this.controlGrips.bottomCenter = this.createGrip();\r\n    this.controlGrips.bottomRight = this.createGrip();\r\n\r\n    this.rotatorGrip = this.createGrip();\r\n\r\n    this.positionGrips();\r\n  }\r\n\r\n  private createGrip(): ResizeGrip {\r\n    const grip = new ResizeGrip();\r\n    grip.visual.transform.baseVal.appendItem(SvgHelper.createTransform());\r\n    this.controlBox.appendChild(grip.visual);\r\n\r\n    return grip;\r\n  }\r\n\r\n  private positionGrips() {\r\n    const gripSize = this.controlGrips.topLeft.GRIP_SIZE;\r\n\r\n    const left = -gripSize / 2;\r\n    const top = left;\r\n    const cx = (this.width + this.CB_DISTANCE) / 2 - gripSize / 2;\r\n    const cy = (this.height + this.CB_DISTANCE) / 2 - gripSize / 2;\r\n    const bottom = this.height + this.CB_DISTANCE - gripSize / 2;\r\n    const right = this.width + this.CB_DISTANCE - gripSize / 2;\r\n\r\n    this.positionGrip(this.controlGrips.topLeft.visual, left, top);\r\n    this.positionGrip(this.controlGrips.topCenter.visual, cx, top);\r\n    this.positionGrip(this.controlGrips.topRight.visual, right, top);\r\n    this.positionGrip(this.controlGrips.centerLeft.visual, left, cy);\r\n    this.positionGrip(this.controlGrips.centerRight.visual, right, cy);\r\n    this.positionGrip(this.controlGrips.bottomLeft.visual, left, bottom);\r\n    this.positionGrip(this.controlGrips.bottomCenter.visual, cx, bottom);\r\n    this.positionGrip(this.controlGrips.bottomRight.visual, right, bottom);\r\n\r\n    this.positionGrip(this.rotatorGrip.visual, cx, top - this.CB_DISTANCE * 3);\r\n  }\r\n\r\n  private positionGrip(grip: SVGGraphicsElement, x: number, y: number) {\r\n    const translate = grip.transform.baseVal.getItem(0);\r\n    translate.setTranslate(x, y);\r\n    grip.transform.baseVal.replaceItem(translate, 0);\r\n  }\r\n\r\n  /**\r\n   * Hides marker's editing controls.\r\n   */\r\n  protected hideControlBox(): void {\r\n    this.controlBox.style.display = 'none';\r\n  }\r\n  /**\r\n   * Shows marker's editing controls.\r\n   */\r\n  protected showControlBox(): void {\r\n    this.controlBox.style.display = '';\r\n  }\r\n\r\n  /**\r\n   * Returns marker's state.\r\n   */\r\n  public getState(): RectangularBoxMarkerBaseState {\r\n    const result: RectangularBoxMarkerBaseState = Object.assign({\r\n      left: this.left,\r\n      top: this.top,\r\n      width: this.width,\r\n      height: this.height,\r\n      rotationAngle: this.rotationAngle,\r\n      visualTransformMatrix: TransformMatrix.toITransformMatrix(this.visual.transform.baseVal.getItem(0).matrix),\r\n      containerTransformMatrix: TransformMatrix.toITransformMatrix(this.container.transform.baseVal.getItem(0).matrix)\r\n    },\r\n    super.getState());\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores marker's state to the previously saved one.\r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    super.restoreState(state);\r\n    const rbmState = state as RectangularBoxMarkerBaseState;\r\n    this.left = rbmState.left;\r\n    this.top = rbmState.top;\r\n    this.width = rbmState.width;\r\n    this.height = rbmState.height;\r\n    this.rotationAngle = rbmState.rotationAngle;\r\n    this.visual.transform.baseVal.getItem(0).setMatrix(\r\n      TransformMatrix.toSVGMatrix(this.visual.transform.baseVal.getItem(0).matrix, rbmState.visualTransformMatrix)\r\n    );\r\n    this.container.transform.baseVal.getItem(0).setMatrix(\r\n      TransformMatrix.toSVGMatrix(this.container.transform.baseVal.getItem(0).matrix, rbmState.containerTransformMatrix)\r\n    );\r\n    // this.moveVisual({x: this.left, y: this.top});\r\n    // this.applyRotation();\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    super.scale(scaleX, scaleY);\r\n\r\n    const rPoint = this.rotatePoint({x: this.left, y: this.top});\r\n    const point = this.unrotatePoint({x: rPoint.x * scaleX, y: rPoint.y * scaleY});\r\n\r\n    this.left = point.x;\r\n    this.top = point.y;\r\n    this.width = this.width * scaleX;\r\n    this.height = this.height * scaleY;\r\n\r\n    this.adjustControlBox();\r\n  }\r\n\r\n}\r\n","import { IPoint } from '../core/IPoint';\r\nimport { SvgHelper } from '../core/SvgHelper';\r\nimport { RectangularBoxMarkerBase } from './RectangularBoxMarkerBase';\r\nimport { Settings } from '../core/Settings';\r\nimport { RectangleMarkerState } from './RectangleMarkerState';\r\nimport { MarkerBaseState } from '../core/MarkerBaseState';\r\n\r\n/**\r\n * RecatngleMarker is a base class for all rectangular markers (Frame, Cover, Highlight, etc.)\r\n */\r\nexport abstract class RectangleMarker extends RectangularBoxMarkerBase {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static title = 'Rectangle marker';\r\n\r\n  /**\r\n   * Recangle fill color.\r\n   */\r\n  protected fillColor = 'transparent';\r\n  /**\r\n   * Rectangle stroke color.\r\n   */\r\n  protected strokeColor = 'transparent';\r\n  /**\r\n   * Rectangle border stroke width.\r\n   */\r\n  protected strokeWidth = 0;\r\n  /**\r\n   * Rectangle border stroke dash array.\r\n   */\r\n  protected strokeDasharray = '';\r\n  /**\r\n   * Rectangle opacity (alpha). 0 to 1.\r\n   */\r\n  protected opacity = 1;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.setStrokeColor = this.setStrokeColor.bind(this);\r\n    this.setFillColor = this.setFillColor.bind(this);\r\n    this.setStrokeWidth = this.setStrokeWidth.bind(this);\r\n    this.setStrokeDasharray = this.setStrokeDasharray.bind(this);\r\n    this.createVisual = this.createVisual.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (super.ownsTarget(el) || el === this.visual) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the marker's rectangle visual.\r\n   */\r\n  protected createVisual(): void {\r\n    this.visual = SvgHelper.createRect(1, 1, [\r\n      ['fill', this.fillColor],\r\n      ['stroke', this.strokeColor],\r\n      ['stroke-width', this.strokeWidth.toString()],\r\n      ['stroke-dasharray', this.strokeDasharray],\r\n      ['opacity', this.opacity.toString()]\r\n    ]);\r\n    this.addMarkerVisualToContainer(this.visual);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n    if (this.state === 'new') {\r\n      this.createVisual();\r\n\r\n      this.moveVisual(point);\r\n\r\n      this._state = 'creating';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    super.manipulate(point);\r\n  }\r\n\r\n  /**\r\n   * Resizes the marker based on the pointer coordinates.\r\n   * @param point - current pointer coordinates.\r\n   */\r\n  protected resize(point: IPoint): void {\r\n    super.resize(point);\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Sets visual's width and height attributes based on marker's width and height.\r\n   */\r\n  protected setSize(): void {\r\n    super.setSize();\r\n    SvgHelper.setAttributes(this.visual, [\r\n      ['width', this.width.toString()],\r\n      ['height', this.height.toString()],\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerUp(point: IPoint): void {\r\n    super.pointerUp(point);\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Sets rectangle's border stroke color.\r\n   * @param color - color as string\r\n   */\r\n  protected setStrokeColor(color: string): void {\r\n    this.strokeColor = color;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['stroke', this.strokeColor]]);\r\n    }\r\n    this.colorChanged(color);\r\n  }\r\n  /**\r\n   * Sets rectangle's fill color.\r\n   * @param color - color as string\r\n   */\r\n  protected setFillColor(color: string): void {\r\n    this.fillColor = color;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['fill', this.fillColor]]);\r\n    }\r\n  }\r\n  /**\r\n   * Sets rectangle's border stroke (line) width.\r\n   * @param color - color as string\r\n   */\r\n  protected setStrokeWidth(width: number): void {\r\n    this.strokeWidth = width;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['stroke-width', this.strokeWidth.toString()]]);\r\n    }\r\n  }\r\n  /**\r\n   * Sets rectangle's border stroke dash array.\r\n   * @param color - color as string\r\n   */\r\n  protected setStrokeDasharray(dashes: string): void {\r\n    this.strokeDasharray = dashes;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['stroke-dasharray', this.strokeDasharray]]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): RectangleMarkerState {\r\n    const result: RectangleMarkerState = Object.assign({\r\n      fillColor: this.fillColor,\r\n      strokeColor: this.strokeColor,\r\n      strokeWidth: this.strokeWidth,\r\n      strokeDasharray: this.strokeDasharray,\r\n      opacity: this.opacity\r\n    }, super.getState());\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    const rectState = state as RectangleMarkerState;\r\n    this.fillColor = rectState.fillColor;\r\n    this.strokeColor = rectState.strokeColor;\r\n    this.strokeWidth = rectState.strokeWidth;\r\n    this.strokeDasharray = rectState.strokeDasharray;\r\n    this.opacity = rectState.opacity;\r\n\r\n    this.createVisual();\r\n    super.restoreState(state);\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    super.scale(scaleX, scaleY);\r\n\r\n    this.setSize();\r\n  }\r\n\r\n}\r\n","import { Style } from '../../core/Style';\r\nimport { ToolboxPanel } from '../ToolboxPanel';\r\nimport Icon from './line-width-panel-icon.svg';\r\n\r\n/**\r\n * Line width change event handler type.\r\n */\r\nexport type WidthChangeHandler = (newWidth: number) => void;\r\n\r\n/**\r\n * Line width toolbox panel.\r\n */\r\nexport class LineWidthPanel extends ToolboxPanel {\r\n  private widths: number[] = [];\r\n  private currentWidth?: number;\r\n\r\n  private widthBoxes: HTMLDivElement[] = [];\r\n\r\n  /**\r\n   * Line width change event handler.\r\n   */\r\n  public onWidthChanged?: WidthChangeHandler;\r\n\r\n  /**\r\n   * Creates a line width toolbox panel.\r\n   * @param title - panel title.\r\n   * @param widths - available widths.\r\n   * @param currentWidth - currently set width.\r\n   * @param icon - toolbox panel icon (SVG image markup).\r\n   */\r\n  constructor(title: string, widths: number[], currentWidth?: number, icon?: string) {\r\n    super(title, icon ? icon : Icon);\r\n    this.widths = widths;\r\n    this.currentWidth = currentWidth;\r\n\r\n    this.setCurrentWidth = this.setCurrentWidth.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns panel UI.\r\n   */\r\n  public getUi(): HTMLDivElement {\r\n    const panelDiv = document.createElement('div');\r\n    panelDiv.style.display = 'flex';\r\n    panelDiv.style.overflow = 'hidden';\r\n    panelDiv.style.flexGrow = '2';\r\n    this.widths.forEach((lineWidth) => {\r\n      const widthBoxContainer = document.createElement('div');\r\n      widthBoxContainer.style.display = 'flex';\r\n      widthBoxContainer.style.flexGrow = '2';\r\n      widthBoxContainer.style.alignItems = 'center';\r\n      widthBoxContainer.style.justifyContent = 'space-between';\r\n      widthBoxContainer.style.padding = '5px';\r\n      widthBoxContainer.style.borderWidth = '2px';\r\n      widthBoxContainer.style.borderStyle = 'solid';\r\n      widthBoxContainer.style.borderColor =\r\n        lineWidth === this.currentWidth ? Style.settings.toolboxAccentColor : 'transparent';\r\n\r\n      widthBoxContainer.addEventListener('click', () => {\r\n        this.setCurrentWidth(lineWidth, widthBoxContainer);\r\n      })\r\n      panelDiv.appendChild(widthBoxContainer);\r\n\r\n      const label = document.createElement('div');\r\n      label.innerText = lineWidth.toString();\r\n      label.style.marginRight = '5px';\r\n      widthBoxContainer.appendChild(label);\r\n\r\n      const widthBox = document.createElement('div');\r\n      widthBox.style.minHeight = '20px';\r\n      widthBox.style.flexGrow = '2';\r\n      widthBox.style.display = 'flex';\r\n      widthBox.style.alignItems = 'center';\r\n\r\n      const hr = document.createElement('hr');\r\n      hr.style.minWidth = '20px';\r\n      hr.style.border = '0px';\r\n      hr.style.borderTop = `${lineWidth}px solid ${Style.settings.toolboxColor}`;\r\n      hr.style.flexGrow = '2';\r\n      widthBox.appendChild(hr);\r\n\r\n      // widthBox.innerHTML = `<svg viewBox=\"0 0 140 20\" width=\"140\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      //   <line x1=\"0\" y1=\"10\" x2=\"140\" y2=\"10\" stroke=\"${Style.settings.toolboxColor}\" stroke-width=\"${lineWidth}\" />\r\n      // </svg>`;\r\n\r\n      widthBoxContainer.appendChild(widthBox);\r\n\r\n      this.widthBoxes.push(widthBoxContainer);\r\n    });\r\n    return panelDiv;\r\n  }\r\n\r\n  private setCurrentWidth(newWidth: number, target: HTMLDivElement) {\r\n    this.currentWidth = newWidth;\r\n\r\n    this.widthBoxes.forEach(box => {\r\n      box.style.borderColor = box === target ? Style.settings.toolboxAccentColor : 'transparent';\r\n    });\r\n\r\n    if (this.onWidthChanged) {\r\n      this.onWidthChanged(this.currentWidth);\r\n    }\r\n  }\r\n}\r\n","import { Style } from '../../core/Style';\r\nimport { ToolboxPanel } from '../ToolboxPanel';\r\nimport Icon from './line-style-panel-icon.svg';\r\n\r\n/**\r\n * Line style change event handler type.\r\n */\r\nexport type StyleChangeHandler = (newStyle: string) => void;\r\n\r\n/**\r\n * Line style (solid, dashed, etc.) toolbox panel.\r\n */\r\nexport class LineStylePanel extends ToolboxPanel {\r\n  private styles: string[] = [];\r\n  private currentStyle?: string;\r\n\r\n  private styleBoxes: HTMLDivElement[] = [];\r\n\r\n  /**\r\n   * Handler for the style change event.\r\n   */\r\n  public onStyleChanged?: StyleChangeHandler;\r\n\r\n  /**\r\n   * Creates a line style toolbox panel.\r\n   * @param title - panel title\r\n   * @param styles - available line styles (dash array).\r\n   * @param currentStyle - currently selected style.\r\n   * @param icon - panel button icon (SVG image markup).\r\n   */\r\n  constructor(title: string, styles: string[], currentStyle?: string, icon?: string) {\r\n    super(title, icon ? icon : Icon);\r\n    this.styles = styles;\r\n    this.currentStyle = currentStyle;\r\n\r\n    this.setCurrentStyle = this.setCurrentStyle.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns panel UI.\r\n   */\r\n  public getUi(): HTMLDivElement {\r\n    const panelDiv = document.createElement('div');\r\n    panelDiv.style.display = 'flex';\r\n    panelDiv.style.overflow = 'hidden';\r\n    panelDiv.style.flexGrow = '2';\r\n    this.styles.forEach((lineStyle) => {\r\n      const styleBoxContainer = document.createElement('div');\r\n      styleBoxContainer.style.display = 'flex'; //'inline-block';\r\n      styleBoxContainer.style.alignItems = 'center';\r\n      styleBoxContainer.style.justifyContent = 'space-between';\r\n      styleBoxContainer.style.padding = '5px';\r\n      styleBoxContainer.style.borderWidth = '2px';\r\n      styleBoxContainer.style.borderStyle = 'solid';\r\n      styleBoxContainer.style.overflow = 'hidden';\r\n      styleBoxContainer.style.maxWidth = `${100 / this.styles.length - 5}%`;\r\n      styleBoxContainer.style.borderColor =\r\n        lineStyle === this.currentStyle ? Style.settings.toolboxAccentColor : 'transparent';\r\n\r\n      styleBoxContainer.addEventListener('click', () => {\r\n        this.setCurrentStyle(lineStyle, styleBoxContainer);\r\n      })\r\n      panelDiv.appendChild(styleBoxContainer);\r\n\r\n      const styleBox = document.createElement('div');\r\n      styleBox.style.minHeight = '20px';\r\n      styleBox.style.flexGrow = '2';\r\n      styleBox.style.overflow = 'hidden';\r\n\r\n      const styleSample = `<svg width=\"100\" height=\"20\">\r\n      <line x1=\"0\" y1=\"10\" x2=\"100\" y2=\"10\" stroke=\"${\r\n        Style.settings.toolboxColor}\" stroke-width=\"3\" ${\r\n          lineStyle !== '' ? 'stroke-dasharray=\"' + lineStyle + '\"' : ''} />\r\n  </svg>`;\r\n\r\n      styleBox.innerHTML = styleSample;\r\n\r\n      styleBoxContainer.appendChild(styleBox);\r\n\r\n      this.styleBoxes.push(styleBoxContainer);\r\n    });\r\n    return panelDiv;\r\n  }\r\n\r\n  private setCurrentStyle(newStyle: string, target: HTMLDivElement) {\r\n    this.currentStyle = newStyle;\r\n\r\n    this.styleBoxes.forEach(box => {\r\n      box.style.borderColor = box === target ? Style.settings.toolboxAccentColor : 'transparent';\r\n    });\r\n\r\n    if (this.onStyleChanged) {\r\n      this.onStyleChanged(this.currentStyle);\r\n    }\r\n  }\r\n}\r\n","import Icon from './frame-marker-icon.svg';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { Settings } from '../../core/Settings';\r\nimport { RectangleMarker } from '../RectangleMarker';\r\nimport { LineWidthPanel } from '../../ui/toolbox-panels/LineWidthPanel';\r\nimport { LineStylePanel } from '../../ui/toolbox-panels/LineStylePanel';\r\nimport { RectangleMarkerState } from '../RectangleMarkerState';\r\n\r\nexport class FrameMarker extends RectangleMarker {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'FrameMarker';\r\n  \r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Frame marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  private strokePanel: ColorPickerPanel;\r\n  private strokeWidthPanel: LineWidthPanel;\r\n  private strokeStylePanel: LineStylePanel;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.strokeColor = settings.defaultColor;\r\n    this.strokeWidth = settings.defaultStrokeWidth;\r\n    this.strokeDasharray = settings.defaultStrokeDasharray;\r\n\r\n    this.strokePanel = new ColorPickerPanel(\r\n      'Line color',\r\n      settings.defaultColorSet,\r\n      settings.defaultColor\r\n    );\r\n    this.strokePanel.onColorChanged = this.setStrokeColor;\r\n\r\n    this.strokeWidthPanel = new LineWidthPanel(\r\n      'Line width',\r\n      settings.defaultStrokeWidths,\r\n      settings.defaultStrokeWidth\r\n    );\r\n    this.strokeWidthPanel.onWidthChanged = this.setStrokeWidth;\r\n\r\n    this.strokeStylePanel = new LineStylePanel(\r\n      'Line style',\r\n      settings.defaultStrokeDasharrays,\r\n      settings.defaultStrokeDasharray\r\n    );\r\n    this.strokeStylePanel.onStyleChanged = this.setStrokeDasharray;\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.strokePanel, this.strokeWidthPanel, this.strokeStylePanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): RectangleMarkerState {\r\n    const result = super.getState();\r\n    result.typeName = FrameMarker.typeName;\r\n    return result;\r\n  }\r\n}\r\n","/**\r\n * Represents a list of colors.\r\n */\r\nexport type ColorSet = string[];\r\n\r\n/**\r\n * marker.js 2 display mode - `inline` or `popup`.\r\n */\r\nexport type DisplayMode = 'inline' | 'popup';\r\n\r\n/**\r\n * Default settings for marker.js 2 markers.\r\n */\r\nexport class Settings {\r\n  /**\r\n   * List of colors used in color pickers.\r\n   */\r\n  public defaultColorSet: ColorSet = [\r\n    '#EF4444', // red\r\n    '#10B981', // green\r\n    '#2563EB', // blue\r\n    '#FFFF00', // yellow\r\n    '#7C3AED', // purple\r\n    '#F472B6', // pink\r\n    '#000000', // black\r\n    '#FFFFFF' //white\r\n  ];\r\n\r\n  /**\r\n   * Default foreground color.\r\n   */\r\n  public defaultColor = this.defaultColorSet[0];\r\n  /**\r\n   * Default fill color.\r\n   */\r\n  public defaultFillColor = this.defaultColorSet[0];\r\n  /**\r\n   * Default stroke color for markers with background (eg. {@link CalloutMarker}).\r\n   */\r\n  public defaultStrokeColor = this.defaultColorSet[7];\r\n  /**\r\n   * Default highlighter color.\r\n   */\r\n  public defaultHighlightColor = this.defaultColorSet[3];\r\n  /**\r\n   * Default stroke (line) width.\r\n   */\r\n  public defaultStrokeWidth = 3;\r\n  /**\r\n   * Default line dash array\r\n   */\r\n  public defaultStrokeDasharray = '';\r\n  /**\r\n   * Default opacity (alpha) of the {@link HighlightMarker} (and other highlighters).\r\n   */\r\n  public defaultHighlightOpacity = 0.5;\r\n  /**\r\n   * Default font family for text-based markers (eg. {@link TextMarker} and {@link CalloutMarker}).\r\n   *\r\n   */\r\n  public defaultFontFamily = 'Helvetica, Arial, sans-serif';\r\n\r\n  /**\r\n   * Stroke (line) width options.\r\n   */\r\n  public defaultStrokeWidths = [1, 2, 3, 5, 10];\r\n  \r\n  /**\r\n   * Stroke dash array options.\r\n   */\r\n  public defaultStrokeDasharrays = ['', '3', '12 3', '9 6 3 6'];\r\n\r\n  /**\r\n   * Opacity options.\r\n   */\r\n  public defaultOpacitySteps = [0.1, 0.25, 0.5, 0.75, 1];\r\n\r\n  /**\r\n   * Default display mode.\r\n   */\r\n  public displayMode: DisplayMode = 'inline';\r\n\r\n  /**\r\n   * Font family options.\r\n   */\r\n  public defaultFontFamilies = [\r\n    'Times, \"Times New Roman\", serif',\r\n    'Helvetica, Arial, sans-serif',\r\n    'Courier, \"Courier New\", monospace',\r\n    'cursive',\r\n    'fantasy'\r\n  ];\r\n\r\n  /**\r\n   * Margin in pixels between marker.js popup UI and window borders.\r\n   */\r\n  public popupMargin = 30;\r\n\r\n  /**\r\n   * Create a new Freehand marker for every stroke.\r\n   */\r\n  public newFreehandMarkerOnPointerUp = false;\r\n\r\n  /**\r\n   * If set to true, when colors on a marker are changed \r\n   * it changes the default color for other markers as well.\r\n   * \r\n   * @since 2.7.0\r\n   */\r\n  public defaultColorsFollowCurrentColors = false;\r\n}\r\n","import { MarkerBase } from '../core/MarkerBase';\r\n\r\nimport { IPoint } from '../core/IPoint';\r\nimport { SvgHelper } from '../core/SvgHelper';\r\n\r\nimport { ResizeGrip } from './ResizeGrip';\r\nimport { Settings } from '../core/Settings';\r\nimport { LinearMarkerBaseState } from './LinearMarkerBaseState';\r\nimport { MarkerBaseState } from '../core/MarkerBaseState';\r\n\r\n/**\r\n * LinearMarkerBase is a base class for all line-type markers (Line, Arrow, Measurement Tool, etc.).\r\n */\r\nexport class LinearMarkerBase extends MarkerBase {\r\n  /**\r\n   * x coordinate of the first end-point\r\n   */\r\n  protected x1 = 0;\r\n  /**\r\n   * y coordinate of the first end-point\r\n   */\r\n  protected y1 = 0;\r\n  /**\r\n   * x coordinate of the second end-point\r\n   */\r\n  protected x2 = 0;\r\n  /**\r\n   * y coordinate of the second end-point\r\n   */\r\n  protected y2 = 0;\r\n\r\n  /**\r\n   * Default line length when marker is created with a simple click (without dragging).\r\n   */\r\n  protected defaultLength = 50;\r\n\r\n  /**\r\n   * Pointer coordinates at the satart of move or resize.\r\n   */\r\n  protected manipulationStartX = 0;\r\n  protected manipulationStartY = 0;\r\n\r\n  private manipulationStartX1 = 0;\r\n  private manipulationStartY1 = 0;\r\n  private manipulationStartX2 = 0;\r\n  private manipulationStartY2 = 0;\r\n\r\n  /**\r\n   * Marker's main visual.\r\n   */\r\n  protected visual: SVGGraphicsElement;\r\n\r\n  /**\r\n   * Container for control elements.\r\n   */\r\n  protected controlBox: SVGGElement;\r\n\r\n  /**\r\n   * First manipulation grip\r\n   */\r\n  protected grip1: ResizeGrip;\r\n  /**\r\n   * Second manipulation grip.\r\n   */\r\n  protected grip2: ResizeGrip;\r\n  /**\r\n   * Active manipulation grip.\r\n   */\r\n  protected activeGrip: ResizeGrip;\r\n\r\n  /**\r\n   * Creates a LineMarkerBase object.\r\n   * \r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.setupControlBox();\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (super.ownsTarget(el)) {\r\n      return true;\r\n    } else if (\r\n      this.grip1.ownsTarget(el) || this.grip2.ownsTarget(el)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  \r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n\r\n    this.manipulationStartX = point.x;\r\n    this.manipulationStartY = point.y;\r\n\r\n    if (this.state === 'new') {\r\n      this.x1 = point.x;\r\n      this.y1 = point.y;\r\n      this.x2 = point.x;\r\n      this.y2 = point.y;\r\n    }\r\n\r\n    this.manipulationStartX1 = this.x1;\r\n    this.manipulationStartY1 = this.y1;\r\n    this.manipulationStartX2 = this.x2;\r\n    this.manipulationStartY2 = this.y2;\r\n\r\n    if (this.state !== 'new') {\r\n      this.select();\r\n      if (this.grip1.ownsTarget(target)) {\r\n        this.activeGrip = this.grip1;\r\n      } else if (this.grip2.ownsTarget(target)) {\r\n        this.activeGrip = this.grip2;\r\n      } else {\r\n        this.activeGrip = undefined;\r\n      }\r\n\r\n      if (this.activeGrip) {\r\n        this._state = 'resize';\r\n      } else {\r\n        this._state = 'move';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerUp(point: IPoint): void {\r\n    const inState = this.state;\r\n    super.pointerUp(point);\r\n    if (this.state === 'creating' && Math.abs(this.x1 - this.x2) < 10 && Math.abs(this.y1 - this.y2) < 10) {\r\n      this.x2 = this.x1 + this.defaultLength;\r\n      this.adjustVisual();\r\n      this.adjustControlBox()\r\n    } else {\r\n      this.manipulate(point);\r\n    }\r\n    this._state = 'select';\r\n    if (inState === 'creating' && this.onMarkerCreated) {\r\n      this.onMarkerCreated(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When implemented adjusts marker visual after manipulation when needed.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  protected adjustVisual(): void {}\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    if (this.state === 'creating') {\r\n      this.resize(point);\r\n    } else if (this.state === 'move') {\r\n      this.x1 = this.manipulationStartX1 + point.x - this.manipulationStartX;\r\n      this.y1 = this.manipulationStartY1 + point.y - this.manipulationStartY;\r\n      this.x2 = this.manipulationStartX2 + point.x - this.manipulationStartX;\r\n      this.y2 = this.manipulationStartY2 + point.y - this.manipulationStartY;\r\n      this.adjustVisual();\r\n      this.adjustControlBox();\r\n    } else if (this.state === 'resize') {\r\n      this.resize(point);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resizes the line marker.\r\n   * @param point - current manipulation coordinates.\r\n   */\r\n  protected resize(point: IPoint): void {\r\n    switch(this.activeGrip) {\r\n      case this.grip1:\r\n        this.x1 = point.x;\r\n        this.y1 = point.y;\r\n        break; \r\n      case this.grip2:\r\n      case undefined:\r\n        this.x2 = point.x;\r\n        this.y2 = point.y;\r\n        break; \r\n    }\r\n    this.adjustVisual();\r\n    this.adjustControlBox();\r\n  }\r\n\r\n  /**\r\n   * Displays marker's controls.\r\n   */\r\n  public select(): void {\r\n    super.select();\r\n    this.adjustControlBox();\r\n    this.controlBox.style.display = '';\r\n  }\r\n\r\n  /**\r\n   * Hides marker's controls.\r\n   */\r\n  public deselect(): void {\r\n    super.deselect();\r\n    this.controlBox.style.display = 'none';\r\n  }\r\n\r\n  /**\r\n   * Creates control box for manipulation controls.\r\n   */\r\n  protected setupControlBox(): void {\r\n    this.controlBox = SvgHelper.createGroup();\r\n    this.container.appendChild(this.controlBox);\r\n\r\n    this.addControlGrips();\r\n\r\n    this.controlBox.style.display = 'none';\r\n  }\r\n\r\n  private adjustControlBox() {\r\n    this.positionGrips();\r\n  }\r\n\r\n  /**\r\n   * Adds control grips to control box.\r\n   */\r\n  protected addControlGrips(): void {\r\n    this.grip1 = this.createGrip();\r\n    this.grip2 = this.createGrip();\r\n\r\n    this.positionGrips();\r\n  }\r\n\r\n  /**\r\n   * Creates manipulation grip.\r\n   * @returns - manipulation grip.\r\n   */\r\n  protected createGrip(): ResizeGrip {\r\n    const grip = new ResizeGrip();\r\n    grip.visual.transform.baseVal.appendItem(SvgHelper.createTransform());\r\n    this.controlBox.appendChild(grip.visual);\r\n\r\n    return grip;\r\n  }\r\n\r\n  /**\r\n   * Updates manipulation grip layout.\r\n   */\r\n  protected positionGrips(): void {\r\n    const gripSize = this.grip1.GRIP_SIZE;\r\n\r\n    this.positionGrip(this.grip1.visual, this.x1 - gripSize / 2, this.y1 - gripSize / 2);\r\n    this.positionGrip(this.grip2.visual, this.x2 - gripSize / 2, this.y2 - gripSize / 2);\r\n  }\r\n\r\n  /**\r\n   * Positions manipulation grip.\r\n   * @param grip - grip to position\r\n   * @param x - new X coordinate\r\n   * @param y - new Y coordinate\r\n   */\r\n  protected positionGrip(grip: SVGGraphicsElement, x: number, y: number): void {\r\n    const translate = grip.transform.baseVal.getItem(0);\r\n    translate.setTranslate(x, y);\r\n    grip.transform.baseVal.replaceItem(translate, 0);\r\n  }\r\n\r\n  /**\r\n   * Returns marker's state.\r\n   */\r\n  public getState(): LinearMarkerBaseState {\r\n    const result: LinearMarkerBaseState = Object.assign({\r\n      x1: this.x1,\r\n      y1: this.y1,\r\n      x2: this.x2,\r\n      y2: this.y2\r\n    }, super.getState());\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores marker's state to the previously saved one.\r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    super.restoreState(state);\r\n    const lmbState = state as LinearMarkerBaseState;\r\n    this.x1 = lmbState.x1;\r\n    this.y1 = lmbState.y1;\r\n    this.x2 = lmbState.x2;\r\n    this.y2 = lmbState.y2;\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    super.scale(scaleX, scaleY);\r\n\r\n    this.x1 = this.x1 * scaleX;\r\n    this.y1 = this.y1 * scaleY;\r\n    this.x2 = this.x2 * scaleX;\r\n    this.y2 = this.y2 * scaleY;\r\n\r\n    this.adjustVisual();\r\n    this.adjustControlBox();\r\n  }\r\n}\r\n","import { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { Settings } from '../../core/Settings';\r\nimport { LinearMarkerBase } from '../LinearMarkerBase';\r\nimport Icon from './line-marker-icon.svg';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { LineWidthPanel } from '../../ui/toolbox-panels/LineWidthPanel';\r\nimport { LineStylePanel } from '../../ui/toolbox-panels/LineStylePanel';\r\nimport { LineMarkerState } from './LineMarkerState';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\n\r\nexport class LineMarker extends LinearMarkerBase {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'LineMarker';\r\n  \r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Line marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  /**\r\n   * Invisible wider line to make selection easier/possible.\r\n   */\r\n  protected selectorLine: SVGLineElement;\r\n  /**\r\n   * Visible marker line.\r\n   */\r\n  protected visibleLine: SVGLineElement;\r\n\r\n  /**\r\n   * Line color.\r\n   */\r\n  protected strokeColor = 'transparent';\r\n  /**\r\n   * Line width.\r\n   */\r\n  protected strokeWidth = 0;\r\n  /**\r\n   * Line dash array.\r\n   */\r\n  protected strokeDasharray = '';\r\n\r\n  /**\r\n   * Color pickar panel for line color.\r\n   */\r\n  protected strokePanel: ColorPickerPanel;\r\n  /**\r\n   * Line width toolbox panel.\r\n   */\r\n  protected strokeWidthPanel: LineWidthPanel;\r\n  /**\r\n   * Line dash array toolbox panel.\r\n   */\r\n  protected strokeStylePanel: LineStylePanel;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.setStrokeColor = this.setStrokeColor.bind(this);\r\n    this.setStrokeWidth = this.setStrokeWidth.bind(this);\r\n    this.setStrokeDasharray = this.setStrokeDasharray.bind(this);\r\n\r\n    this.strokeColor = settings.defaultColor;\r\n    this.strokeWidth = settings.defaultStrokeWidth;\r\n    this.strokeDasharray = settings.defaultStrokeDasharray;\r\n\r\n    this.strokePanel = new ColorPickerPanel(\r\n      'Line color',\r\n      settings.defaultColorSet,\r\n      settings.defaultColor\r\n    );\r\n    this.strokePanel.onColorChanged = this.setStrokeColor;\r\n\r\n    this.strokeWidthPanel = new LineWidthPanel(\r\n      'Line width',\r\n      settings.defaultStrokeWidths,\r\n      settings.defaultStrokeWidth\r\n    );\r\n    this.strokeWidthPanel.onWidthChanged = this.setStrokeWidth;\r\n\r\n    this.strokeStylePanel = new LineStylePanel(\r\n      'Line style',\r\n      settings.defaultStrokeDasharrays,\r\n      settings.defaultStrokeDasharray\r\n    );\r\n    this.strokeStylePanel.onStyleChanged = this.setStrokeDasharray;\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (\r\n      super.ownsTarget(el) ||\r\n      el === this.visual ||\r\n      el === this.selectorLine ||\r\n      el === this.visibleLine\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private createVisual() {\r\n    this.visual = SvgHelper.createGroup();\r\n    this.selectorLine = SvgHelper.createLine(\r\n      this.x1,\r\n      this.y1,\r\n      this.x2,\r\n      this.y2,\r\n      [\r\n        ['stroke', 'transparent'],\r\n        ['stroke-width', (this.strokeWidth + 10).toString()],\r\n      ]\r\n    );\r\n    this.visibleLine = SvgHelper.createLine(\r\n      this.x1,\r\n      this.y1,\r\n      this.x2,\r\n      this.y2,\r\n      [\r\n        ['stroke', this.strokeColor],\r\n        ['stroke-width', this.strokeWidth.toString()],\r\n      ]\r\n    );\r\n    this.visual.appendChild(this.selectorLine);\r\n    this.visual.appendChild(this.visibleLine);\r\n\r\n    this.addMarkerVisualToContainer(this.visual);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n    if (this.state === 'new') {\r\n      this.createVisual();\r\n      this.adjustVisual();\r\n\r\n      this._state = 'creating';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjusts visual after manipulation.\r\n   */\r\n  protected adjustVisual(): void {\r\n    if (this.selectorLine && this.visibleLine) {\r\n      this.selectorLine.setAttribute('x1', this.x1.toString());\r\n      this.selectorLine.setAttribute('y1', this.y1.toString());\r\n      this.selectorLine.setAttribute('x2', this.x2.toString());\r\n      this.selectorLine.setAttribute('y2', this.y2.toString());\r\n\r\n      this.visibleLine.setAttribute('x1', this.x1.toString());\r\n      this.visibleLine.setAttribute('y1', this.y1.toString());\r\n      this.visibleLine.setAttribute('x2', this.x2.toString());\r\n      this.visibleLine.setAttribute('y2', this.y2.toString());\r\n\r\n      SvgHelper.setAttributes(this.visibleLine, [['stroke', this.strokeColor]]);\r\n      SvgHelper.setAttributes(this.visibleLine, [['stroke-width', this.strokeWidth.toString()]]);\r\n      SvgHelper.setAttributes(this.visibleLine, [['stroke-dasharray', this.strokeDasharray.toString()]]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets line color.\r\n   * @param color - new color.\r\n   */\r\n  protected setStrokeColor(color: string): void {\r\n    this.strokeColor = color;\r\n    this.adjustVisual();\r\n    this.colorChanged(color);\r\n  }\r\n  /**\r\n   * Sets line width.\r\n   * @param width - new width.\r\n   */\r\n  protected setStrokeWidth(width: number): void {\r\n    this.strokeWidth = width\r\n    this.adjustVisual();\r\n  }\r\n\r\n  /**\r\n   * Sets line dash array.\r\n   * @param dashes - new dash array.\r\n   */\r\n  protected setStrokeDasharray(dashes: string): void {\r\n    this.strokeDasharray = dashes;\r\n    this.adjustVisual();\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.strokePanel, this.strokeWidthPanel, this.strokeStylePanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): LineMarkerState {\r\n    const result: LineMarkerState = Object.assign({\r\n      strokeColor: this.strokeColor,\r\n      strokeWidth: this.strokeWidth,\r\n      strokeDasharray: this.strokeDasharray\r\n    }, super.getState());\r\n    result.typeName = LineMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    super.restoreState(state);\r\n\r\n    const lmState = state as LineMarkerState;\r\n    this.strokeColor = lmState.strokeColor;\r\n    this.strokeWidth = lmState.strokeWidth;\r\n    this.strokeDasharray = lmState.strokeDasharray;\r\n\r\n    this.createVisual();\r\n    this.adjustVisual();\r\n  }\r\n}\r\n","import { Style } from '../../core/Style';\r\nimport { ToolboxPanel } from '../ToolboxPanel';\r\nimport Icon from './font-family-panel-icon.svg';\r\n\r\n/**\r\n * Font change event handler type.\r\n */\r\nexport type FontChangeHandler = (newFont: string) => void;\r\n\r\n/**\r\n * Font family selection toolbox panel.\r\n */\r\nexport class FontFamilyPanel extends ToolboxPanel {\r\n  private fonts: string[] = [];\r\n  private currentFont?: string;\r\n\r\n  private fontBoxes: HTMLDivElement[] = [];\r\n\r\n  /**\r\n   * Handler for the font family change event.\r\n   */\r\n  public onFontChanged?: FontChangeHandler;\r\n\r\n  /**\r\n   * Creates a font family toolbox panel.\r\n   * @param title - panel title.\r\n   * @param fonts - available font families.\r\n   * @param currentFont - currently selected font family.\r\n   * @param icon - panel button icon (SVG image markup).\r\n   */\r\n  constructor(title: string, fonts: string[], currentFont?: string, icon?: string) {\r\n    super(title, icon ? icon : Icon);\r\n    this.fonts = fonts;\r\n    this.currentFont = currentFont;\r\n\r\n    this.setCurrentFont = this.setCurrentFont.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns panel UI.\r\n   */\r\n  public getUi(): HTMLDivElement {\r\n    const panelDiv = document.createElement('div');\r\n    // panelDiv.style.display = 'flex';\r\n    panelDiv.style.overflow = 'hidden';\r\n    panelDiv.style.flexGrow = '2';\r\n    this.fonts.forEach((font) => {\r\n      const fontBoxContainer = document.createElement('div');\r\n      fontBoxContainer.style.display = 'inline-block';\r\n      // fontBoxContainer.style.flexGrow = '2';\r\n      fontBoxContainer.style.alignItems = 'center';\r\n      fontBoxContainer.style.justifyContent = 'space-between';\r\n      fontBoxContainer.style.padding = '5px';\r\n      fontBoxContainer.style.borderWidth = '2px';\r\n      fontBoxContainer.style.borderStyle = 'solid';\r\n      fontBoxContainer.style.overflow = 'hidden';\r\n      fontBoxContainer.style.maxWidth = `${100 / this.fonts.length - 5}%`;\r\n      fontBoxContainer.style.borderColor =\r\n        font === this.currentFont ? Style.settings.toolboxAccentColor : 'transparent';\r\n\r\n      fontBoxContainer.addEventListener('click', () => {\r\n        this.setCurrentFont(font, fontBoxContainer);\r\n      })\r\n      panelDiv.appendChild(fontBoxContainer);\r\n\r\n      const fontBox = document.createElement('div');\r\n      fontBox.style.display = 'flex';\r\n      fontBox.style.minHeight = '20px';\r\n      fontBox.style.flexGrow = '2';\r\n      fontBox.style.fontFamily = font;\r\n      fontBox.style.overflow = 'hidden';\r\n\r\n      const fontLabel = document.createElement('div');\r\n      fontLabel.style.whiteSpace = 'nowrap';\r\n      fontLabel.style.overflow = 'hidden';\r\n      fontLabel.style.textOverflow = 'ellipsis';\r\n      fontLabel.innerHTML = 'The quick brown fox jumps over the lazy dog';\r\n\r\n      fontBox.appendChild(fontLabel);\r\n\r\n      fontBoxContainer.appendChild(fontBox);\r\n\r\n      this.fontBoxes.push(fontBoxContainer);\r\n    });\r\n    return panelDiv;\r\n  }\r\n\r\n  private setCurrentFont(newFont: string, target: HTMLDivElement) {\r\n    this.currentFont = newFont;\r\n\r\n    this.fontBoxes.forEach(box => {\r\n      box.style.borderColor = box === target ? Style.settings.toolboxAccentColor : 'transparent';\r\n    });\r\n\r\n    if (this.onFontChanged) {\r\n      this.onFontChanged(this.currentFont);\r\n    }\r\n  }\r\n}\r\n","import { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { RectangularBoxMarkerBase } from '../RectangularBoxMarkerBase';\r\nimport { Settings } from '../../core/Settings';\r\nimport Icon from './text-marker-icon.svg';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { FontFamilyPanel } from '../../ui/toolbox-panels/FontFamilyPanel';\r\nimport { TextMarkerState } from './TextMarkerState';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\n\r\nexport class TextMarker extends RectangularBoxMarkerBase {\r\n  /**\r\n   * String type name of the marker type.\r\n   *\r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'TextMarker';\r\n\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Text marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  /**\r\n   * Text color.\r\n   */\r\n  protected color = 'transparent';\r\n  /**\r\n   * Text's font family.\r\n   */\r\n  protected fontFamily: string;\r\n  /**\r\n   * Padding inside of the marker's bounding box in percents.\r\n   */\r\n  protected padding = 5;\r\n\r\n  /**\r\n   * Text color picker toolbox panel.\r\n   */\r\n  protected colorPanel: ColorPickerPanel;\r\n  /**\r\n   * Text font family toolbox panel.\r\n   */\r\n  protected fontFamilyPanel: FontFamilyPanel;\r\n\r\n  private readonly DEFAULT_TEXT = 'your text here';\r\n  private text: string = this.DEFAULT_TEXT;\r\n  /**\r\n   * Visual text element.\r\n   */\r\n  protected textElement: SVGTextElement;\r\n  /**\r\n   * Text background rectangle.\r\n   */\r\n  protected bgRectangle: SVGRectElement;\r\n  /**\r\n   * Div element for the text editor container.\r\n   */\r\n  protected textEditDiv: HTMLDivElement;\r\n  /**\r\n   * Editable text element.\r\n   */\r\n  protected textEditor: HTMLDivElement;\r\n\r\n  private isMoved = false;\r\n  private pointerDownPoint: IPoint;\r\n  private pointerDownTimestamp: number;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(\r\n    container: SVGGElement,\r\n    overlayContainer: HTMLDivElement,\r\n    settings: Settings\r\n  ) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.color = settings.defaultColor;\r\n    this.fontFamily = settings.defaultFontFamily;\r\n\r\n    this.defaultSize = { x: 100, y: 30 };\r\n\r\n    this.setColor = this.setColor.bind(this);\r\n    this.setFont = this.setFont.bind(this);\r\n    this.renderText = this.renderText.bind(this);\r\n    this.sizeText = this.sizeText.bind(this);\r\n    this.textEditDivClicked = this.textEditDivClicked.bind(this);\r\n    this.showTextEditor = this.showTextEditor.bind(this);\r\n    this.setSize = this.setSize.bind(this);\r\n    this.positionTextEditor = this.positionTextEditor.bind(this);\r\n\r\n    this.colorPanel = new ColorPickerPanel(\r\n      'Color',\r\n      settings.defaultColorSet,\r\n      settings.defaultColor\r\n    );\r\n    this.colorPanel.onColorChanged = this.setColor;\r\n\r\n    this.fontFamilyPanel = new FontFamilyPanel(\r\n      'Font',\r\n      settings.defaultFontFamilies,\r\n      settings.defaultFontFamily\r\n    );\r\n    this.fontFamilyPanel.onFontChanged = this.setFont;\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   *\r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (\r\n      super.ownsTarget(el) ||\r\n      el === this.visual ||\r\n      el === this.textElement ||\r\n      el === this.bgRectangle\r\n    ) {\r\n      return true;\r\n    } else {\r\n      let found = false;\r\n      this.textElement.childNodes.forEach((span) => {\r\n        if (span === el) {\r\n          found = true;\r\n        }\r\n      });\r\n      return found;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates text marker visual.\r\n   */\r\n  protected createVisual(): void {\r\n    this.visual = SvgHelper.createGroup();\r\n\r\n    this.bgRectangle = SvgHelper.createRect(1, 1, [['fill', 'transparent']]);\r\n    this.visual.appendChild(this.bgRectangle);\r\n\r\n    this.textElement = SvgHelper.createText([\r\n      ['fill', this.color],\r\n      ['font-family', this.fontFamily],\r\n      ['font-size', '16px'],\r\n      ['x', '0'],\r\n      ['y', '0'],\r\n    ]);\r\n    this.textElement.transform.baseVal.appendItem(SvgHelper.createTransform()); // translate transorm\r\n    this.textElement.transform.baseVal.appendItem(SvgHelper.createTransform()); // scale transorm\r\n\r\n    this.visual.appendChild(this.textElement);\r\n\r\n    this.addMarkerVisualToContainer(this.visual);\r\n    this.renderText();\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   *\r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n\r\n    this.isMoved = false;\r\n    this.pointerDownPoint = point;\r\n    this.pointerDownTimestamp = Date.now();\r\n\r\n    if (this.state === 'new') {\r\n      this.createVisual();\r\n      this.moveVisual(point);\r\n      this._state = 'creating';\r\n    }\r\n  }\r\n\r\n  private renderText() {\r\n    const LINE_SIZE = '1.2em';\r\n\r\n    if (this.textElement) {\r\n      while (this.textElement.lastChild) {\r\n        this.textElement.removeChild(this.textElement.lastChild);\r\n      }\r\n\r\n      const lines = this.text.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/);\r\n      lines.forEach((line) => {\r\n        this.textElement.appendChild(\r\n          SvgHelper.createTSpan(\r\n            // workaround for swallowed empty lines\r\n            line.trim() === '' ? ' ' : line.trim(), [\r\n            ['x', '0'],\r\n            ['dy', LINE_SIZE],\r\n          ])\r\n        );\r\n      });\r\n\r\n      setTimeout(this.sizeText, 10);\r\n    }\r\n  }\r\n\r\n  private getTextScale(): number {\r\n    const textSize = this.textElement.getBBox();\r\n    let scale = 1.0;\r\n    if (textSize.width > 0 && textSize.height > 0) {\r\n      const xScale =\r\n        (this.width * 1.0 - (this.width * this.padding * 2) / 100) /\r\n        textSize.width;\r\n      const yScale =\r\n        (this.height * 1.0 - (this.height * this.padding * 2) / 100) /\r\n        textSize.height;\r\n      scale = Math.min(xScale, yScale);\r\n    }\r\n    return scale;\r\n  }\r\n\r\n  private getTextPosition(scale: number): IPoint {\r\n    const textSize = this.textElement.getBBox();\r\n    let x = 0;\r\n    let y = 0;\r\n    if (textSize.width > 0 && textSize.height > 0) {\r\n      x = (this.width - textSize.width * scale) / 2;\r\n      y = this.height / 2 - (textSize.height * scale) / 2;\r\n    }\r\n    return { x: x, y: y };\r\n  }\r\n\r\n  private sizeText() {\r\n    const textBBox = this.textElement.getBBox();\r\n    const scale = this.getTextScale();\r\n    const position = this.getTextPosition(scale);\r\n    position.y -= textBBox.y * scale; // workaround adjustment for text not being placed at y=0\r\n\r\n    if (navigator.userAgent.indexOf('Edge/') > -1) {\r\n      // workaround for legacy Edge as transforms don't work otherwise but this way it doesn't work in Safari\r\n      this.textElement.style.transform = `translate(${position.x}px, ${position.y}px) scale(${scale}, ${scale})`;\r\n    } else {\r\n      this.textElement.transform.baseVal\r\n        .getItem(0)\r\n        .setTranslate(position.x, position.y);\r\n      this.textElement.transform.baseVal.getItem(1).setScale(scale, scale);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   *\r\n   * @param point - event coordinates.\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    super.manipulate(point);\r\n    if (this.pointerDownPoint !== undefined) {\r\n      this.isMoved =\r\n        Math.abs(point.x - this.pointerDownPoint.x) > 5 ||\r\n        Math.abs(point.y - this.pointerDownPoint.y) > 5;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resize marker based on current pointer coordinates and context.\r\n   * @param point\r\n   */\r\n  protected resize(point: IPoint): void {\r\n    super.resize(point);\r\n    this.isMoved = true;\r\n    this.setSize();\r\n    this.sizeText();\r\n  }\r\n\r\n  /**\r\n   * Sets size of marker elements after manipulation.\r\n   */\r\n  protected setSize(): void {\r\n    super.setSize();\r\n    if (this.visual && this.bgRectangle) {\r\n      SvgHelper.setAttributes(this.visual, [\r\n        ['width', this.width.toString()],\r\n        ['height', this.height.toString()],\r\n      ]);\r\n      SvgHelper.setAttributes(this.bgRectangle, [\r\n        ['width', this.width.toString()],\r\n        ['height', this.height.toString()],\r\n      ]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   *\r\n   * @param point - event coordinates.\r\n   */\r\n  public pointerUp(point: IPoint): void {\r\n    const inState = this.state;\r\n    super.pointerUp(point);\r\n    this.setSize();\r\n    if (\r\n      inState === 'creating' ||\r\n      (!this.isMoved && Date.now() - this.pointerDownTimestamp > 500)\r\n    ) {\r\n      this.showTextEditor();\r\n    }\r\n    this.pointerDownPoint = undefined;\r\n  }\r\n\r\n  private showTextEditor() {\r\n    this._state = 'edit';\r\n    this.overlayContainer.innerHTML = '';\r\n\r\n    this.textEditDiv = document.createElement('div');\r\n    // textEditDiv.style.display = 'flex';\r\n    this.textEditDiv.style.flexGrow = '2';\r\n    //textEditDiv.style.backgroundColor = 'rgb(0,0,0,0.7)';\r\n    this.textEditDiv.style.alignItems = 'center';\r\n    this.textEditDiv.style.justifyContent = 'center';\r\n    this.textEditDiv.style.pointerEvents = 'auto';\r\n    this.textEditDiv.style.overflow = 'hidden';\r\n\r\n    this.textEditor = document.createElement('div');\r\n    this.textEditor.style.position = 'absolute';\r\n    this.textEditor.style.fontFamily = this.fontFamily;\r\n    this.textEditor.style.lineHeight = '1em';\r\n    this.textEditor.innerText = this.text;\r\n    this.textEditor.contentEditable = 'true';\r\n    this.textEditor.style.color = this.color;\r\n    this.positionTextEditor();\r\n    this.textEditor.addEventListener('pointerup', (ev) => {\r\n      ev.stopPropagation();\r\n    });\r\n    this.textEditor.addEventListener('input', () => {\r\n      let fontSize = Number.parseFloat(this.textEditor.style.fontSize);\r\n      while (\r\n        this.textEditor.clientWidth >=\r\n          Number.parseInt(this.textEditor.style.maxWidth) &&\r\n        fontSize > 0.9\r\n      ) {\r\n        fontSize -= 0.1;\r\n        this.textEditor.style.fontSize = `${Math.max(fontSize, 0.9)}em`;\r\n      }\r\n    });\r\n    this.textEditor.addEventListener('keyup', (ev) => {\r\n      ev.cancelBubble = true;\r\n    });\r\n\r\n    this.textEditDiv.addEventListener('pointerup', () => {\r\n      this.textEditDivClicked(this.textEditor.innerText);\r\n    });\r\n    this.textEditDiv.appendChild(this.textEditor);\r\n    this.overlayContainer.appendChild(this.textEditDiv);\r\n\r\n    this.hideVisual();\r\n\r\n    this.textEditor.focus();\r\n    document.execCommand('selectAll');\r\n  }\r\n\r\n  private positionTextEditor() {\r\n    if (this.state === 'edit') {\r\n      if (this.textEditor === undefined) {\r\n        this.showTextEditor();\r\n      } else {\r\n        this.textElement.style.display = '';\r\n        const textScale = this.getTextScale();\r\n        // const textPosition = this.getTextPosition(textScale);\r\n        const rPosition = this.rotatePoint({\r\n          x: this.left + this.width / 2,\r\n          y: this.top + this.height / 2,\r\n        });\r\n        const textSize = this.textElement.getBBox();\r\n        const rWH = {\r\n          x: textSize.width * textScale,\r\n          y: textSize.height * textScale,\r\n        };\r\n        rPosition.x -= rWH.x / 2;\r\n        rPosition.y -= rWH.y / 2;\r\n\r\n        this.textEditor.style.top = `${rPosition.y}px`;\r\n        this.textEditor.style.left = `${rPosition.x}px`;\r\n        this.textEditor.style.maxWidth = `${\r\n          this.overlayContainer.offsetWidth - rPosition.x\r\n        }px`;\r\n        this.textEditor.style.fontSize = `${Math.max(16 * textScale, 12)}px`;\r\n        this.textElement.style.display = 'none';\r\n      }\r\n    }\r\n  }\r\n\r\n  private textEditDivClicked(text: string) {\r\n    this.text = text.trim();\r\n    this.overlayContainer.innerHTML = '';\r\n    this.renderText();\r\n    this.showVisual();\r\n  }\r\n\r\n  /**\r\n   * Deselects this marker, renders text (if necessary), and hides selected marker UI.\r\n   */\r\n  public deselect(): void {\r\n    if (this.state === 'edit') {\r\n      this.textEditDivClicked(this.textEditor.innerText);\r\n    }\r\n    super.deselect();\r\n  }\r\n\r\n  /**\r\n   * Opens text editor on double-click.\r\n   * @param point\r\n   * @param target\r\n   */\r\n  public dblClick(point: IPoint, target?: EventTarget): void {\r\n    super.dblClick(point, target);\r\n\r\n    this.showTextEditor();\r\n  }\r\n\r\n  /**\r\n   * Sets text color.\r\n   * @param color - new text color.\r\n   */\r\n  protected setColor(color: string): void {\r\n    if (this.textElement) {\r\n      SvgHelper.setAttributes(this.textElement, [['fill', color]]);\r\n    }\r\n    this.color = color;\r\n    if (this.textEditor) {\r\n      this.textEditor.style.color = this.color;\r\n    }\r\n    this.colorChanged(color);\r\n  }\r\n\r\n  /**\r\n   * Sets font family.\r\n   * @param font - new font family.\r\n   */\r\n  protected setFont(font: string): void {\r\n    if (this.textElement) {\r\n      SvgHelper.setAttributes(this.textElement, [['font-family', font]]);\r\n    }\r\n    this.fontFamily = font;\r\n    if (this.textEditor) {\r\n      this.textEditor.style.fontFamily = this.fontFamily;\r\n    }\r\n    this.renderText();\r\n  }\r\n\r\n  /**\r\n   * Hides marker visual.\r\n   */\r\n  protected hideVisual(): void {\r\n    this.textElement.style.display = 'none';\r\n    this.hideControlBox();\r\n  }\r\n  /**\r\n   * Shows marker visual.\r\n   */\r\n  protected showVisual(): void {\r\n    if (this.state === 'edit') {\r\n      this._state = 'select';\r\n    }\r\n    this.textElement.style.display = '';\r\n    this.showControlBox();\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.colorPanel, this.fontFamilyPanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): TextMarkerState {\r\n    const result: TextMarkerState = Object.assign(\r\n      {\r\n        color: this.color,\r\n        fontFamily: this.fontFamily,\r\n        padding: this.padding,\r\n        text: this.text,\r\n      },\r\n      super.getState()\r\n    );\r\n    result.typeName = TextMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   *\r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    const textState = state as TextMarkerState;\r\n    this.color = textState.color;\r\n    this.fontFamily = textState.fontFamily;\r\n    this.padding = textState.padding;\r\n    this.text = textState.text;\r\n\r\n    this.createVisual();\r\n    super.restoreState(state);\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   *\r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    super.scale(scaleX, scaleY);\r\n\r\n    this.setSize();\r\n    this.sizeText();\r\n    this.positionTextEditor();\r\n  }\r\n}\r\n","import { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { RectangularBoxMarkerBase } from '../RectangularBoxMarkerBase';\r\nimport { Settings } from '../../core/Settings';\r\nimport Icon from './freehand-marker-icon.svg';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { FreehandMarkerState } from './FreehandMarkerState';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\nimport { LineWidthPanel } from '../../ui/toolbox-panels/LineWidthPanel';\r\n\r\n\r\nexport class FreehandMarker extends RectangularBoxMarkerBase {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'FreehandMarker';\r\n\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Freehand marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  /**\r\n   * Marker color.\r\n   */\r\n  protected color = 'transparent';\r\n  /**\r\n   * Marker's stroke width.\r\n   */\r\n  protected lineWidth = 3;\r\n\r\n  private colorPanel: ColorPickerPanel;\r\n  private lineWidthPanel: LineWidthPanel;\r\n\r\n\r\n  private canvasElement: HTMLCanvasElement;\r\n  private canvasContext: CanvasRenderingContext2D;\r\n\r\n  private drawingImage: SVGImageElement;\r\n  private drawingImgUrl: string;\r\n\r\n  private drawing = false;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(\r\n    container: SVGGElement,\r\n    overlayContainer: HTMLDivElement,\r\n    settings: Settings\r\n  ) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.color = settings.defaultColor;\r\n    this.lineWidth = settings.defaultStrokeWidth;\r\n\r\n    this.setColor = this.setColor.bind(this);\r\n    this.addCanvas = this.addCanvas.bind(this);\r\n    this.finishCreation = this.finishCreation.bind(this);\r\n    this.setLineWidth = this.setLineWidth.bind(this);\r\n\r\n    this.colorPanel = new ColorPickerPanel(\r\n      'Color',\r\n      settings.defaultColorSet,\r\n      settings.defaultColor\r\n    );\r\n    this.colorPanel.onColorChanged = this.setColor;\r\n\r\n    this.lineWidthPanel = new LineWidthPanel(\r\n      'Line width',\r\n      settings.defaultStrokeWidths,\r\n      settings.defaultStrokeWidth\r\n    );\r\n    this.lineWidthPanel.onWidthChanged = this.setLineWidth;\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (\r\n      super.ownsTarget(el) ||\r\n      el === this.visual ||\r\n      el === this.drawingImage\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private createVisual() {\r\n    this.visual = SvgHelper.createGroup();\r\n    this.drawingImage = SvgHelper.createImage();\r\n    this.visual.appendChild(this.drawingImage);\r\n\r\n    const translate = SvgHelper.createTransform();\r\n    this.visual.transform.baseVal.appendItem(translate);\r\n    this.addMarkerVisualToContainer(this.visual);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    if (this.state === 'new') {\r\n      this.addCanvas();\r\n\r\n      this.createVisual();\r\n\r\n      this._state = 'creating';\r\n    }\r\n\r\n    if (this.state === 'creating') {\r\n      this.canvasContext.strokeStyle = this.color;\r\n      this.canvasContext.lineWidth = this.lineWidth;\r\n      this.canvasContext.beginPath();\r\n      this.canvasContext.moveTo(point.x, point.y);\r\n      this.drawing = true;\r\n    } else {\r\n      super.pointerDown(point, target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    if (this.state === 'creating') {\r\n      if (this.drawing) {\r\n        this.canvasContext.lineTo(point.x, point.y);\r\n        this.canvasContext.stroke();\r\n      }\r\n    } else {\r\n      super.manipulate(point);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resize marker based on current pointer coordinates and context.\r\n   * @param point \r\n   */\r\n  protected resize(point: IPoint): void {\r\n    super.resize(point);\r\n    SvgHelper.setAttributes(this.visual, [\r\n      ['width', this.width.toString()],\r\n      ['height', this.height.toString()],\r\n    ]);\r\n    SvgHelper.setAttributes(this.drawingImage, [\r\n      ['width', this.width.toString()],\r\n      ['height', this.height.toString()],\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public pointerUp(point: IPoint): void {\r\n    if (this._state === 'creating') {\r\n      if (this.drawing) {\r\n        this.canvasContext.closePath();\r\n        this.drawing = false;\r\n        if (this.globalSettings.newFreehandMarkerOnPointerUp) {\r\n          this.finishCreation();\r\n        }\r\n      }\r\n    } else {\r\n      super.pointerUp(point);\r\n    }\r\n  }\r\n\r\n  private addCanvas() {\r\n    this.overlayContainer.innerHTML = '';\r\n\r\n    this.canvasElement = document.createElement('canvas');\r\n    this.canvasElement.width = this.overlayContainer.clientWidth;\r\n    this.canvasElement.height = this.overlayContainer.clientHeight;\r\n    this.canvasContext = this.canvasElement.getContext('2d');\r\n    this.overlayContainer.appendChild(this.canvasElement);\r\n  }\r\n\r\n  /**\r\n   * Selects this marker and displays appropriate selected marker UI.\r\n   */\r\n  public select(): void {\r\n    if (this.state === 'creating') {\r\n      this.finishCreation();\r\n    }\r\n    super.select();\r\n  }\r\n\r\n  /**\r\n   * Deselects this marker and hides selected marker UI.\r\n   */\r\n  public deselect(): void {\r\n    if (this.state === 'creating') {\r\n      this.finishCreation();\r\n    }\r\n    super.deselect();\r\n  }\r\n\r\n  private finishCreation() {\r\n    const imgData = this.canvasContext.getImageData(\r\n      0,\r\n      0,\r\n      this.canvasElement.width,\r\n      this.canvasElement.height\r\n    );\r\n\r\n    let [startX, startY, endX, endY] = [\r\n      this.canvasElement.width + 1,\r\n      this.canvasElement.height + 1,\r\n      -1,\r\n      -1,\r\n    ];\r\n    let containsData = false;\r\n    for (let row = 0; row < this.canvasElement.height; row++) {\r\n      for (let col = 0; col < this.canvasElement.width; col++) {\r\n        const pixAlpha =\r\n          imgData.data[row * this.canvasElement.width * 4 + col * 4 + 3];\r\n        if (pixAlpha > 0) {\r\n          containsData = true;\r\n          if (row < startY) {\r\n            startY = row;\r\n          }\r\n          if (col < startX) {\r\n            startX = col;\r\n          }\r\n          if (row > endY) {\r\n            endY = row;\r\n          }\r\n          if (col > endX) {\r\n            endX = col;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (containsData) {\r\n      this.left = startX;\r\n      this.top = startY;\r\n      this.width = endX - startX;\r\n      this.height = endY - startY;\r\n\r\n      const tmpCanvas = document.createElement('canvas');\r\n      tmpCanvas.width = this.width;\r\n      tmpCanvas.height = this.height;\r\n      const tmpCtx = tmpCanvas.getContext('2d');\r\n      tmpCtx.putImageData(\r\n        this.canvasContext.getImageData(\r\n          startX,\r\n          startY,\r\n          endX - startX,\r\n          endY - startY\r\n        ),\r\n        0,\r\n        0\r\n      );\r\n\r\n      this.drawingImgUrl = tmpCanvas.toDataURL('image/png');\r\n      this.setDrawingImage();\r\n\r\n      this._state = 'select';\r\n      if (this.onMarkerCreated) {\r\n        this.onMarkerCreated(this);\r\n      }\r\n    }\r\n    this.overlayContainer.innerHTML = '';\r\n  }\r\n\r\n  private setDrawingImage() {\r\n    SvgHelper.setAttributes(this.drawingImage, [\r\n      ['width', this.width.toString()],\r\n      ['height', this.height.toString()],\r\n    ]);\r\n    SvgHelper.setAttributes(this.drawingImage, [['href', this.drawingImgUrl]]);\r\n    this.moveVisual({ x: this.left, y: this.top });\r\n  }\r\n\r\n  /**\r\n   * Sets marker drawing color.\r\n   * @param color - new color.\r\n   */\r\n  protected setColor(color: string): void {\r\n    this.color = color;\r\n    this.colorChanged(color);\r\n  }\r\n\r\n  /**\r\n   * Sets line width.\r\n   * @param width - new line width\r\n   */\r\n   protected setLineWidth(width: number): void {\r\n    this.lineWidth = width;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    if (this.state === 'new' || this.state === 'creating') {\r\n      return [this.colorPanel, this.lineWidthPanel];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): FreehandMarkerState {\r\n    const result: FreehandMarkerState = Object.assign({\r\n      drawingImgUrl: this.drawingImgUrl\r\n    }, super.getState());\r\n    result.typeName = FreehandMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    this.createVisual();\r\n    super.restoreState(state);\r\n    this.drawingImgUrl = (state as FreehandMarkerState).drawingImgUrl;\r\n    this.setDrawingImage();\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    super.scale(scaleX, scaleY);\r\n\r\n    this.setDrawingImage();\r\n  }\r\n\r\n}\r\n","import { Style } from '../../core/Style';\r\nimport { ToolboxPanel } from '../ToolboxPanel';\r\nimport Icon from './arrow-type-panel-icon.svg';\r\n\r\n/**\r\n * Represents available arrow types.\r\n * \r\n * - `both` - arrow tips on both sides.\r\n * - `start` - arrow tip on the starting point of line.\r\n * - `end` - arrow tip on the ending point of line.\r\n * - `none` - no arrow tips.\r\n */\r\nexport type ArrowType = 'both' | 'start' | 'end' | 'none';\r\n/**\r\n * Handler for arrow type change event.\r\n */\r\nexport type ArrowTypeChangeHandler = (newType: ArrowType) => void;\r\n\r\n/**\r\n * Arrow type selection panel.\r\n */\r\nexport class ArrowTypePanel extends ToolboxPanel {\r\n  private currentType?: ArrowType;\r\n\r\n  private typeBoxes: HTMLDivElement[] = [];\r\n\r\n  /**\r\n   * Event handler for the arrow type change event.\r\n   */\r\n  public onArrowTypeChanged?: ArrowTypeChangeHandler;\r\n\r\n  /**\r\n   * Creates an ArrowTypePanel.\r\n   * @param title - panel title.\r\n   * @param currentType - currently set arrow type.\r\n   * @param icon - panel button icon (SVG image markup).\r\n   */\r\n  constructor(title: string, currentType?: ArrowType, icon?: string) {\r\n    super(title, icon ? icon : Icon);\r\n    this.currentType = currentType;\r\n\r\n    this.setCurrentType = this.setCurrentType.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns panel UI.\r\n   */\r\n  public getUi(): HTMLDivElement {\r\n    const panelDiv = document.createElement('div');\r\n    panelDiv.style.display = 'flex';\r\n    panelDiv.style.overflow = 'hidden';\r\n    panelDiv.style.flexGrow = '2';\r\n    for (let ti = 0; ti < 4; ti++) {\r\n      let arrowType: ArrowType = 'both';\r\n      switch(ti) {\r\n        case 0:\r\n          arrowType = 'both';\r\n          break;\r\n        case 1:\r\n          arrowType = 'start';\r\n          break;\r\n        case 2:\r\n          arrowType = 'end';\r\n          break;\r\n        case 3:\r\n          arrowType = 'none';\r\n          break;\r\n      }\r\n      const typeBoxContainer = document.createElement('div');\r\n      typeBoxContainer.style.display = 'flex';\r\n      typeBoxContainer.style.flexGrow = '2';\r\n      typeBoxContainer.style.alignItems = 'center';\r\n      typeBoxContainer.style.justifyContent = 'space-between';\r\n      typeBoxContainer.style.padding = '5px';\r\n      typeBoxContainer.style.borderWidth = '2px';\r\n      typeBoxContainer.style.borderStyle = 'solid';\r\n      typeBoxContainer.style.borderColor =\r\n        arrowType === this.currentType ? Style.settings.toolboxAccentColor : 'transparent';\r\n\r\n      typeBoxContainer.addEventListener('click', () => {\r\n        this.setCurrentType(arrowType, typeBoxContainer);\r\n      })\r\n      panelDiv.appendChild(typeBoxContainer);\r\n\r\n      if (arrowType === 'both' || arrowType === 'start') {\r\n        const leftTip = document.createElement('div');\r\n        leftTip.style.display = 'flex';\r\n        leftTip.style.alignItems = 'center';\r\n        leftTip.style.minHeight = '20px';\r\n        leftTip.innerHTML = `<svg viewBox=\"0 0 10 10\" width=\"10\" height=\"10\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <polygon points=\"0,5 10,0 10,10\" fill=\"${Style.settings.toolboxColor}\" />\r\n        </svg>`;\r\n        leftTip.style.marginLeft = '5px';\r\n        typeBoxContainer.appendChild(leftTip);\r\n      }\r\n\r\n      const lineBox = document.createElement('div');\r\n      lineBox.style.display = 'flex';\r\n      lineBox.style.alignItems = 'center';\r\n      lineBox.style.minHeight = '20px';\r\n      lineBox.style.flexGrow = '2';\r\n\r\n      const hr = document.createElement('hr');\r\n      hr.style.minWidth = '20px';\r\n      hr.style.border = '0px';\r\n      hr.style.borderTop = `3px solid ${Style.settings.toolboxColor}`;\r\n      hr.style.flexGrow = '2';\r\n      lineBox.appendChild(hr);\r\n\r\n      typeBoxContainer.appendChild(lineBox);\r\n\r\n      if (arrowType === 'both' || arrowType === 'end') {\r\n        const rightTip = document.createElement('div');\r\n        rightTip.style.display = 'flex';\r\n        rightTip.style.alignItems = 'center';\r\n        rightTip.style.minHeight = '20px';\r\n        rightTip.innerHTML = `<svg viewBox=\"0 0 10 10\" width=\"10\" height=\"10\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <polygon points=\"0,0 10,5 0,10\" fill=\"${Style.settings.toolboxColor}\" />\r\n        </svg>`;\r\n        rightTip.style.marginRight = '5px';\r\n        typeBoxContainer.appendChild(rightTip);\r\n      }\r\n\r\n      this.typeBoxes.push(typeBoxContainer);\r\n    }\r\n    return panelDiv;\r\n  }\r\n\r\n  private setCurrentType(newType: ArrowType, target: HTMLDivElement) {\r\n    this.currentType = newType;\r\n\r\n    this.typeBoxes.forEach(box => {\r\n      box.style.borderColor = box === target ? Style.settings.toolboxAccentColor : 'transparent';\r\n    });\r\n\r\n    if (this.onArrowTypeChanged) {\r\n      this.onArrowTypeChanged(this.currentType);\r\n    }\r\n  }\r\n}\r\n","import { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { Settings } from '../../core/Settings';\r\nimport Icon from './arrow-marker-icon.svg';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { LineMarker } from '../line-marker/LineMarker';\r\nimport { ArrowType, ArrowTypePanel } from '../../ui/toolbox-panels/ArrowTypePanel';\r\nimport { ArrowMarkerState } from './ArrowMarkerState';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\n\r\n/**\r\n * Represents an arrow marker.\r\n */\r\nexport class ArrowMarker extends LineMarker {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'ArrowMarker';\r\n\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Arrow marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  private arrow1: SVGPolygonElement;\r\n  private arrow2: SVGPolygonElement;\r\n\r\n  private arrowType: ArrowType = 'end';\r\n\r\n  private arrowBaseHeight = 10;\r\n  private arrowBaseWidth = 10;\r\n\r\n  /**\r\n   * Toolbox panel for arrow type selection.\r\n   */\r\n  protected arrowTypePanel: ArrowTypePanel;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.getArrowPoints = this.getArrowPoints.bind(this);\r\n    this.setArrowType = this.setArrowType.bind(this);\r\n\r\n    this.arrowTypePanel = new ArrowTypePanel('Arrow type', 'end');\r\n    this.arrowTypePanel.onArrowTypeChanged = this.setArrowType;\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (\r\n      super.ownsTarget(el) ||\r\n      el === this.arrow1 || el === this.arrow2\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private getArrowPoints(offsetX: number, offsetY: number): string {\r\n    const width = this.arrowBaseWidth + this.strokeWidth * 2;\r\n    const height = this.arrowBaseHeight + this.strokeWidth * 2;\r\n    return `${offsetX - width / 2},${\r\n      offsetY + height / 2\r\n    } ${offsetX},${offsetY - height / 2} ${\r\n      offsetX + width / 2},${offsetY + height / 2}`;\r\n  }\r\n\r\n  private createTips() {\r\n    this.arrow1 = SvgHelper.createPolygon(this.getArrowPoints(this.x1, this.y1), [['fill', this.strokeColor]]);\r\n    this.arrow1.transform.baseVal.appendItem(SvgHelper.createTransform());\r\n    this.visual.appendChild(this.arrow1);\r\n\r\n    this.arrow2 = SvgHelper.createPolygon(this.getArrowPoints(this.x2, this.y2), [['fill', this.strokeColor]]);\r\n    this.arrow2.transform.baseVal.appendItem(SvgHelper.createTransform());\r\n    this.visual.appendChild(this.arrow2);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n    if (this.state === 'creating') {\r\n      this.createTips();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjusts marker visual after manipulation.\r\n   */\r\n  protected adjustVisual(): void {\r\n    super.adjustVisual();\r\n\r\n    if (this.arrow1 && this.arrow2) {\r\n      this.arrow1.style.display = (this.arrowType === 'both' || this.arrowType === 'start') ? '' : 'none';\r\n      this.arrow2.style.display = (this.arrowType === 'both' || this.arrowType === 'end') ? '' : 'none';\r\n\r\n      SvgHelper.setAttributes(this.arrow1, [\r\n        ['points', this.getArrowPoints(this.x1, this.y1)],\r\n        ['fill', this.strokeColor]\r\n      ]);\r\n      SvgHelper.setAttributes(this.arrow2, [\r\n        ['points', this.getArrowPoints(this.x2, this.y2)],\r\n        ['fill', this.strokeColor]\r\n      ]);\r\n\r\n      if (Math.abs(this.x1 - this.x2) > 0.1) {\r\n        const lineAngle1 =\r\n          (Math.atan((this.y2 - this.y1) / (this.x2 - this.x1)) * 180) / Math.PI + 90 * Math.sign(this.x1 - this.x2);\r\n\r\n        const a1transform = this.arrow1.transform.baseVal.getItem(0);\r\n        a1transform.setRotate(lineAngle1, this.x1, this.y1);\r\n        this.arrow1.transform.baseVal.replaceItem(a1transform, 0);\r\n\r\n        const a2transform = this.arrow2.transform.baseVal.getItem(0);\r\n        a2transform.setRotate(lineAngle1 + 180, this.x2, this.y2);\r\n        this.arrow2.transform.baseVal.replaceItem(a2transform, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setArrowType(arrowType: ArrowType) {\r\n    this.arrowType = arrowType;\r\n    this.adjustVisual();\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.strokePanel, this.strokeWidthPanel, this.strokeStylePanel, this.arrowTypePanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): ArrowMarkerState {\r\n    const result: ArrowMarkerState = Object.assign({\r\n      arrowType: this.arrowType\r\n    }, super.getState());\r\n    result.typeName = ArrowMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    super.restoreState(state);\r\n\r\n    const amState = state as ArrowMarkerState;\r\n    this.arrowType = amState.arrowType;\r\n\r\n    this.createTips();\r\n    this.adjustVisual();\r\n  }\r\n\r\n}\r\n","import Icon from './cover-marker-icon.svg';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { Settings } from '../../core/Settings';\r\nimport { RectangleMarker } from '../RectangleMarker';\r\nimport { RectangleMarkerState } from '../RectangleMarkerState';\r\n\r\nexport class CoverMarker extends RectangleMarker {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'CoverMarker';\r\n\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Cover marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  /**\r\n   * Color picker panel for the background color.\r\n   */\r\n  protected fillPanel: ColorPickerPanel;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.fillColor = settings.defaultFillColor;\r\n    this.strokeWidth = 0;\r\n\r\n    this.fillPanel = new ColorPickerPanel(\r\n      'Color',\r\n      settings.defaultColorSet,\r\n      settings.defaultFillColor\r\n    );\r\n    this.fillPanel.onColorChanged = this.setFillColor;\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.fillPanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): RectangleMarkerState {\r\n    const result = super.getState();\r\n    result.typeName = CoverMarker.typeName;\r\n    return result;\r\n  }\r\n}\r\n","import { Style } from '../../core/Style';\r\nimport { ToolboxPanel } from '../ToolboxPanel';\r\nimport Icon from './opacity-panel-icon.svg';\r\n\r\n/**\r\n * Opacity chage event handler type.\r\n */\r\nexport type OpacityChangeHandler = (newOpacity: number) => void;\r\n\r\n/**\r\n * Opacity panel.\r\n */\r\nexport class OpacityPanel extends ToolboxPanel {\r\n  private opacities: number[] = [];\r\n  private currentOpacity?: number;\r\n\r\n  private opacityBoxes: HTMLDivElement[] = [];\r\n\r\n  /**\r\n   * Opacity change event handler.\r\n   */\r\n  public onOpacityChanged?: OpacityChangeHandler;\r\n\r\n  /**\r\n   * Creates an opacity panel.\r\n   * @param title - panel title.\r\n   * @param opacities - available opacities.\r\n   * @param currentOpacity - current opacity.\r\n   * @param icon - toolbox panel button (SVG image markup).\r\n   */\r\n  constructor(title: string, opacities: number[], currentOpacity?: number, icon?: string) {\r\n    super(title, icon ? icon : Icon);\r\n    this.opacities = opacities;\r\n    this.currentOpacity = currentOpacity;\r\n\r\n    this.setCurrentOpacity = this.setCurrentOpacity.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Returns panel UI.\r\n   */\r\n  public getUi(): HTMLDivElement {\r\n    const panelDiv = document.createElement('div');\r\n    panelDiv.style.display = 'flex';\r\n    panelDiv.style.overflow = 'hidden';\r\n    panelDiv.style.flexGrow = '2';\r\n    panelDiv.style.justifyContent = 'space-between';\r\n    this.opacities.forEach((opacity) => {\r\n      const opacityBoxContainer = document.createElement('div');\r\n      opacityBoxContainer.style.display = 'flex';\r\n      //opacityBoxContainer.style.flexGrow = '2';\r\n      opacityBoxContainer.style.alignItems = 'center';\r\n      opacityBoxContainer.style.justifyContent = 'center';\r\n      opacityBoxContainer.style.padding = '5px';\r\n      opacityBoxContainer.style.borderWidth = '2px';\r\n      opacityBoxContainer.style.borderStyle = 'solid';\r\n      opacityBoxContainer.style.borderColor =\r\n        opacity === this.currentOpacity ? Style.settings.toolboxAccentColor : 'transparent';\r\n\r\n      opacityBoxContainer.addEventListener('click', () => {\r\n        this.setCurrentOpacity(opacity, opacityBoxContainer);\r\n      })\r\n      panelDiv.appendChild(opacityBoxContainer);\r\n\r\n      const label = document.createElement('div');\r\n      label.innerText = `${(opacity * 100)}%`;\r\n      opacityBoxContainer.appendChild(label);\r\n\r\n      this.opacityBoxes.push(opacityBoxContainer);\r\n    });\r\n    return panelDiv;\r\n  }\r\n\r\n  private setCurrentOpacity(newWidth: number, target: HTMLDivElement) {\r\n    this.currentOpacity = newWidth;\r\n\r\n    this.opacityBoxes.forEach(box => {\r\n      box.style.borderColor = box === target ? Style.settings.toolboxAccentColor : 'transparent';\r\n    });\r\n\r\n    if (this.onOpacityChanged) {\r\n      this.onOpacityChanged(this.currentOpacity);\r\n    }\r\n  }\r\n}\r\n","import Icon from './highlight-marker-icon.svg';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { Settings } from '../../core/Settings';\r\nimport { CoverMarker } from '../cover-marker/CoverMarker';\r\nimport { OpacityPanel } from '../../ui/toolbox-panels/OpacityPanel';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { RectangleMarkerState } from '../RectangleMarkerState';\r\n\r\nexport class HighlightMarker extends CoverMarker {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'HighlightMarker';\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Highlight marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  protected opacityPanel: OpacityPanel;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.setOpacity = this.setOpacity.bind(this);\r\n\r\n    this.fillColor = settings.defaultHighlightColor;\r\n    this.strokeWidth = 0;\r\n    this.opacity = settings.defaultHighlightOpacity;\r\n\r\n    this.fillPanel = new ColorPickerPanel(\r\n      'Color',\r\n      settings.defaultColorSet,\r\n      this.fillColor\r\n    );\r\n    this.fillPanel.onColorChanged = this.setFillColor;\r\n\r\n    this.opacityPanel = new OpacityPanel(\r\n      'Opacity',\r\n      settings.defaultOpacitySteps,\r\n      this.opacity\r\n    );\r\n    this.opacityPanel.onOpacityChanged = this.setOpacity;\r\n  }\r\n\r\n  /**\r\n   * Sets marker's opacity (0..1).\r\n   * @param opacity - new opacity value.\r\n   */\r\n  protected setOpacity(opacity: number): void {\r\n    this.opacity = opacity;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['opacity', this.opacity.toString()]]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.fillPanel, this.opacityPanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): RectangleMarkerState {\r\n    const result = super.getState();\r\n    result.typeName = HighlightMarker.typeName;\r\n    return result;\r\n  }\r\n}\r\n","import { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { Settings } from '../../core/Settings';\r\nimport Icon from './callout-marker-icon.svg';\r\nimport TextColorIcon from '../../ui/toolbox-panels/text-color-icon.svg';\r\nimport FillColorIcon from '../../ui/toolbox-panels/fill-color-icon.svg';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { FontFamilyPanel } from '../../ui/toolbox-panels/FontFamilyPanel';\r\nimport { TextMarker } from '../text-marker/TextMarker';\r\nimport { ResizeGrip } from '../ResizeGrip';\r\nimport { CalloutMarkerState } from './CalloutMarkerState';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\n\r\nexport class CalloutMarker extends TextMarker {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'CalloutMarker';\r\n\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Callout marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  private bgColor = 'transparent';\r\n  /**\r\n   * Color picker toolbox panel for the background (fill) color.\r\n   */\r\n  protected bgColorPanel: ColorPickerPanel;\r\n\r\n  private tipPosition: IPoint = { x: 0, y: 0 };\r\n  private tipBase1Position: IPoint = { x: 0, y: 0 };\r\n  private tipBase2Position: IPoint = { x: 0, y: 0 };\r\n  private tip: SVGPolygonElement;\r\n  private tipGrip: ResizeGrip;\r\n  private tipMoving = false;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(\r\n    container: SVGGElement,\r\n    overlayContainer: HTMLDivElement,\r\n    settings: Settings\r\n  ) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.color = settings.defaultStrokeColor;\r\n    this.bgColor = settings.defaultFillColor;\r\n    this.fontFamily = settings.defaultFontFamily;\r\n\r\n    this.defaultSize = { x: 100, y: 30 };\r\n\r\n    this.setBgColor = this.setBgColor.bind(this);\r\n    this.getTipPoints = this.getTipPoints.bind(this);\r\n    this.positionTip = this.positionTip.bind(this);\r\n    this.setTipPoints = this.setTipPoints.bind(this);\r\n\r\n    this.colorPanel = new ColorPickerPanel(\r\n      'Text color',\r\n      settings.defaultColorSet,\r\n      this.color,\r\n      TextColorIcon\r\n    );\r\n    this.colorPanel.onColorChanged = this.setColor;\r\n\r\n    this.bgColorPanel = new ColorPickerPanel(\r\n      'Fill color',\r\n      settings.defaultColorSet,\r\n      this.bgColor,\r\n      FillColorIcon\r\n    );\r\n    this.bgColorPanel.onColorChanged = this.setBgColor;\r\n\r\n    this.fontFamilyPanel = new FontFamilyPanel(\r\n      'Font',\r\n      settings.defaultFontFamilies,\r\n      settings.defaultFontFamily\r\n    );\r\n    this.fontFamilyPanel.onFontChanged = this.setFont;\r\n\r\n    this.tipGrip = new ResizeGrip();\r\n    this.tipGrip.visual.transform.baseVal.appendItem(\r\n      SvgHelper.createTransform()\r\n    );\r\n    this.controlBox.appendChild(this.tipGrip.visual);\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    return (\r\n      super.ownsTarget(el) || this.tipGrip.ownsTarget(el) || this.tip === el\r\n    );\r\n  }\r\n\r\n  private createTip() {\r\n    SvgHelper.setAttributes(this.bgRectangle, [\r\n      ['fill', this.bgColor],\r\n      ['rx', '10px'],\r\n    ]);\r\n\r\n    this.tip = SvgHelper.createPolygon(this.getTipPoints(), [\r\n      ['fill', this.bgColor],\r\n    ]);\r\n    this.visual.appendChild(this.tip);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    if (this.state === 'new') {\r\n      super.pointerDown(point, target);\r\n    }\r\n\r\n    if (this.state === 'creating') {\r\n      this.createTip();\r\n    } else if (this.tipGrip.ownsTarget(target)) {\r\n      this.manipulationStartLeft = this.left;\r\n      this.manipulationStartTop = this.top;\r\n      this.tipMoving = true;\r\n    } else {\r\n      super.pointerDown(point, target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public pointerUp(point: IPoint): void {\r\n    if (this.tipMoving) {\r\n      this.tipMoving = false;\r\n    } else {\r\n      const isCreating = this.state === 'creating';\r\n      super.pointerUp(point);\r\n      this.setTipPoints(isCreating);\r\n      this.positionTip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    if (this.tipMoving) {\r\n      const rotatedPoint = this.unrotatePoint(point);\r\n      this.tipPosition = {\r\n        x: rotatedPoint.x - this.manipulationStartLeft,\r\n        y: rotatedPoint.y - this.manipulationStartTop,\r\n      };\r\n      this.positionTip();\r\n    } else {\r\n      super.manipulate(point);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets marker's background/fill color.\r\n   * @param color - new background color.\r\n   */\r\n  protected setBgColor(color: string): void {\r\n    if (this.bgRectangle && this.tip) {\r\n      SvgHelper.setAttributes(this.bgRectangle, [['fill', color]]);\r\n      SvgHelper.setAttributes(this.tip, [['fill', color]]);\r\n    }\r\n    this.bgColor = color;\r\n    this.fillColorChanged(color);\r\n  }\r\n\r\n  private getTipPoints(): string {\r\n    this.setTipPoints(this.state === 'creating');\r\n    return `${this.tipBase1Position.x},${this.tipBase1Position.y\r\n      } ${this.tipBase2Position.x},${this.tipBase2Position.y\r\n      } ${this.tipPosition.x},${this.tipPosition.y}`;\r\n  }\r\n\r\n  private setTipPoints(isCreating = false) {\r\n    let offset = Math.min(this.height / 2, 15);\r\n    let baseWidth = this.height / 5;\r\n    if (isCreating) {\r\n      this.tipPosition = { x: offset + baseWidth / 2, y: this.height + 20 };\r\n    }\r\n\r\n    const cornerAngle = Math.atan((this.height / 2) / (this.width / 2));\r\n    if (this.tipPosition.x < this.width / 2 && this.tipPosition.y < this.height / 2) {\r\n      // top left\r\n      const tipAngle = Math.atan((this.height / 2 - this.tipPosition.y) / (this.width / 2 - this.tipPosition.x));\r\n      if (cornerAngle < tipAngle) {\r\n        baseWidth = this.width / 5;\r\n        offset = Math.min(this.width / 2, 15);\r\n        this.tipBase1Position = { x: offset, y: 0 };\r\n        this.tipBase2Position = { x: offset + baseWidth, y: 0 };\r\n      } else {\r\n        this.tipBase1Position = { x: 0, y: offset };\r\n        this.tipBase2Position = { x: 0, y: offset + baseWidth };\r\n      }\r\n    } else if (this.tipPosition.x >= this.width / 2 && this.tipPosition.y < this.height / 2) {\r\n      // top right\r\n      const tipAngle = Math.atan((this.height / 2 - this.tipPosition.y) / (this.tipPosition.x - this.width / 2));\r\n      if (cornerAngle < tipAngle) {\r\n        baseWidth = this.width / 5;\r\n        offset = Math.min(this.width / 2, 15);\r\n        this.tipBase1Position = { x: this.width - offset - baseWidth, y: 0 };\r\n        this.tipBase2Position = { x: this.width - offset, y: 0 };\r\n      } else {\r\n        this.tipBase1Position = { x: this.width, y: offset };\r\n        this.tipBase2Position = { x: this.width, y: offset + baseWidth };\r\n      }\r\n    } else if (this.tipPosition.x >= this.width / 2 && this.tipPosition.y >= this.height / 2) {\r\n      // bottom right\r\n      const tipAngle = Math.atan((this.tipPosition.y - this.height / 2) / (this.tipPosition.x - this.width / 2));\r\n      if (cornerAngle < tipAngle) {\r\n        baseWidth = this.width / 5;\r\n        offset = Math.min(this.width / 2, 15);\r\n        this.tipBase1Position = { x: this.width - offset - baseWidth, y: this.height };\r\n        this.tipBase2Position = { x: this.width - offset, y: this.height };\r\n      } else {\r\n        this.tipBase1Position = { x: this.width, y: this.height - offset - baseWidth };\r\n        this.tipBase2Position = { x: this.width, y: this.height - offset };\r\n      }\r\n    } else {\r\n      // bottom left\r\n      const tipAngle = Math.atan((this.tipPosition.y - this.height / 2) / (this.width / 2 - this.tipPosition.x));\r\n      if (cornerAngle < tipAngle) {\r\n        baseWidth = this.width / 5;\r\n        offset = Math.min(this.width / 2, 15);\r\n        this.tipBase1Position = { x: offset, y: this.height };\r\n        this.tipBase2Position = { x: offset + baseWidth, y: this.height };\r\n      } else {\r\n        this.tipBase1Position = { x: 0, y: this.height - offset };\r\n        this.tipBase2Position = { x: 0, y: this.height - offset - baseWidth };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resize marker based on current pointer coordinates and context.\r\n   * @param point \r\n   */\r\n  protected resize(point: IPoint): void {\r\n    super.resize(point);\r\n    this.positionTip();\r\n  }\r\n\r\n  private positionTip() {\r\n    SvgHelper.setAttributes(this.tip, [['points', this.getTipPoints()]]);\r\n    const translate = this.tipGrip.visual.transform.baseVal.getItem(0);\r\n    translate.setTranslate(this.tipPosition.x, this.tipPosition.y);\r\n    this.tipGrip.visual.transform.baseVal.replaceItem(translate, 0);\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.colorPanel, this.bgColorPanel, this.fontFamilyPanel];\r\n  }\r\n\r\n  /**\r\n   * Selects this marker and displays appropriate selected marker UI.\r\n   */\r\n  public select(): void {\r\n    this.positionTip();\r\n    super.select();\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): CalloutMarkerState {\r\n    const result: CalloutMarkerState = Object.assign({\r\n      bgColor: this.bgColor,\r\n      tipPosition: this.tipPosition\r\n    }, super.getState());\r\n    result.typeName = CalloutMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    const calloutState = state as CalloutMarkerState;\r\n    this.bgColor = calloutState.bgColor;\r\n    this.tipPosition = calloutState.tipPosition;\r\n\r\n    super.restoreState(state);\r\n    this.createTip();\r\n    this.setTipPoints();\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    super.scale(scaleX, scaleY);\r\n\r\n    this.tipPosition = {x: this.tipPosition.x * scaleX, y: this.tipPosition.y * scaleY};\r\n\r\n    this.positionTip();\r\n  }\r\n}\r\n","import Icon from './ellipse-marker-icon.svg';\r\nimport { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { RectangularBoxMarkerBase } from '../RectangularBoxMarkerBase';\r\nimport { Settings } from '../../core/Settings';\r\nimport { RectangleMarkerState } from '../RectangleMarkerState';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { LineWidthPanel } from '../../ui/toolbox-panels/LineWidthPanel';\r\nimport { LineStylePanel } from '../../ui/toolbox-panels/LineStylePanel';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport FillColorIcon from '../../ui/toolbox-panels/fill-color-icon.svg';\r\nimport { OpacityPanel } from '../../ui/toolbox-panels/OpacityPanel';\r\n\r\nexport class EllipseMarker extends RectangularBoxMarkerBase {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'EllipseMarker';\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Ellipse marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  /**\r\n   * Ellipse fill color.\r\n   */\r\n  protected fillColor = 'transparent';\r\n  /**\r\n   * Ellipse border color.\r\n   */\r\n  protected strokeColor = 'transparent';\r\n  /**\r\n   * Ellipse border line width.\r\n   */\r\n  protected strokeWidth = 0;\r\n  /**\r\n   * Ellipse border dash array.\r\n   */\r\n  protected strokeDasharray = '';\r\n  /**\r\n   * Ellipse opacity (0..1).\r\n   */\r\n  protected opacity = 1;\r\n\r\n  protected strokePanel: ColorPickerPanel;\r\n  protected fillPanel: ColorPickerPanel;\r\n  protected strokeWidthPanel: LineWidthPanel;\r\n  protected strokeStylePanel: LineStylePanel;\r\n  protected opacityPanel: OpacityPanel;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.strokeColor = settings.defaultColor;\r\n    this.strokeWidth = settings.defaultStrokeWidth;\r\n    this.strokeDasharray = settings.defaultStrokeDasharray;\r\n    this.fillColor = settings.defaultFillColor;\r\n\r\n    this.setStrokeColor = this.setStrokeColor.bind(this);\r\n    this.setFillColor = this.setFillColor.bind(this);\r\n    this.setStrokeWidth = this.setStrokeWidth.bind(this);\r\n    this.setStrokeDasharray = this.setStrokeDasharray.bind(this);\r\n    this.setOpacity = this.setOpacity.bind(this);\r\n    this.createVisual = this.createVisual.bind(this);\r\n\r\n    this.strokePanel = new ColorPickerPanel(\r\n      'Line color',\r\n      [...settings.defaultColorSet, 'transparent'],\r\n      settings.defaultColor\r\n    );\r\n    this.strokePanel.onColorChanged = this.setStrokeColor;\r\n\r\n    this.fillPanel = new ColorPickerPanel(\r\n      'Fill color',\r\n      [...settings.defaultColorSet, 'transparent'],\r\n      this.fillColor,\r\n      FillColorIcon\r\n    );\r\n    this.fillPanel.onColorChanged = this.setFillColor;\r\n\r\n    this.strokeWidthPanel = new LineWidthPanel(\r\n      'Line width',\r\n      settings.defaultStrokeWidths,\r\n      settings.defaultStrokeWidth\r\n    );\r\n    this.strokeWidthPanel.onWidthChanged = this.setStrokeWidth;\r\n\r\n    this.strokeStylePanel = new LineStylePanel(\r\n      'Line style',\r\n      settings.defaultStrokeDasharrays,\r\n      settings.defaultStrokeDasharray\r\n    );\r\n    this.strokeStylePanel.onStyleChanged = this.setStrokeDasharray;\r\n\r\n    this.opacityPanel = new OpacityPanel(\r\n      'Opacity',\r\n      settings.defaultOpacitySteps,\r\n      this.opacity\r\n    );\r\n    this.opacityPanel.onOpacityChanged = this.setOpacity;\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (super.ownsTarget(el) || el === this.visual) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates marker visual.\r\n   */\r\n  protected createVisual(): void {\r\n    this.visual = SvgHelper.createEllipse(this.width / 2, this.height / 2, [\r\n      ['fill', this.fillColor],\r\n      ['stroke', this.strokeColor],\r\n      ['stroke-width', this.strokeWidth.toString()],\r\n      ['stroke-dasharray', this.strokeDasharray],\r\n      ['opacity', this.opacity.toString()]\r\n    ]);\r\n    this.addMarkerVisualToContainer(this.visual);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n    if (this.state === 'new') {\r\n      this.createVisual();\r\n\r\n      this.moveVisual(point);\r\n\r\n      this._state = 'creating';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles marker manipulation (move, resize, rotate, etc.).\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    super.manipulate(point);\r\n  }\r\n\r\n  /**\r\n   * Resize marker based on current pointer coordinates and context.\r\n   * @param point \r\n   */\r\n  protected resize(point: IPoint): void {\r\n    super.resize(point);\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Sets marker's visual size after manipulation.\r\n   */\r\n  protected setSize(): void {\r\n    super.setSize();\r\n    SvgHelper.setAttributes(this.visual, [\r\n      ['cx', (this.width / 2).toString()],\r\n      ['cy', (this.height / 2).toString()],\r\n      ['rx', (this.width / 2).toString()],\r\n      ['ry', (this.height / 2).toString()],\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) up event.\r\n   * \r\n   * @param point - event coordinates.\r\n   */\r\n  public pointerUp(point: IPoint): void {\r\n    super.pointerUp(point);\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Sets marker's line color.\r\n   * @param color - new line color.\r\n   */\r\n  protected setStrokeColor(color: string): void {\r\n    this.strokeColor = color;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['stroke', this.strokeColor]]);\r\n    }\r\n    this.colorChanged(color);\r\n  }\r\n  /**\r\n   * Sets marker's fill (background) color.\r\n   * @param color - new fill color.\r\n   */\r\n  protected setFillColor(color: string): void {\r\n    this.fillColor = color;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['fill', this.fillColor]]);\r\n    }\r\n    this.fillColorChanged(color);\r\n  }\r\n  /**\r\n   * Sets marker's line width.\r\n   * @param width - new line width\r\n   */\r\n  protected setStrokeWidth(width: number): void {\r\n    this.strokeWidth = width;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['stroke-width', this.strokeWidth.toString()]]);\r\n    }\r\n  }\r\n  /**\r\n   * Sets marker's border dash array.\r\n   * @param dashes - new dash array.\r\n   */\r\n  protected setStrokeDasharray(dashes: string): void {\r\n    this.strokeDasharray = dashes;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['stroke-dasharray', this.strokeDasharray]]);\r\n    }\r\n  }\r\n  /**\r\n   * Sets marker's opacity.\r\n   * @param opacity - new opacity value (0..1).\r\n   */\r\n  protected setOpacity(opacity: number): void {\r\n    this.opacity = opacity;\r\n    if (this.visual) {\r\n      SvgHelper.setAttributes(this.visual, [['opacity', this.opacity.toString()]]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.strokePanel, this.fillPanel, this.strokeWidthPanel, this.strokeStylePanel, this.opacityPanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): RectangleMarkerState {\r\n    const result: RectangleMarkerState = Object.assign({\r\n      fillColor: this.fillColor,\r\n      strokeColor: this.strokeColor,\r\n      strokeWidth: this.strokeWidth,\r\n      strokeDasharray: this.strokeDasharray,\r\n      opacity: this.opacity\r\n    }, super.getState());\r\n    result.typeName = EllipseMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    const rectState = state as RectangleMarkerState;\r\n    this.fillColor = rectState.fillColor;\r\n    this.strokeColor = rectState.strokeColor;\r\n    this.strokeWidth = rectState.strokeWidth;\r\n    this.strokeDasharray = rectState.strokeDasharray;\r\n    this.opacity = rectState.opacity;\r\n\r\n    this.createVisual();\r\n    super.restoreState(state);\r\n    this.setSize();\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    super.scale(scaleX, scaleY);\r\n\r\n    this.setSize();\r\n  }\r\n}\r\n","import { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { Settings } from '../../core/Settings';\r\nimport Icon from './measurement-marker-icon.svg';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { LineMarker } from '../line-marker/LineMarker';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\nimport { LineMarkerState } from '../line-marker/LineMarkerState';\r\n\r\nexport class MeasurementMarker extends LineMarker {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'MeasurementMarker';\r\n\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Measurement marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  private tip1: SVGLineElement;\r\n  private tip2: SVGLineElement;\r\n\r\n  private get tipLength(): number {\r\n    return 10 + this.strokeWidth * 3;\r\n  }\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (\r\n      super.ownsTarget(el) ||\r\n      el === this.tip1 || el === this.tip2\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private createTips() {\r\n    this.tip1 = SvgHelper.createLine(\r\n      this.x1 - this.tipLength / 2, \r\n      this.y1, \r\n      this.x1 + this.tipLength / 2, \r\n      this.y1, \r\n      [\r\n        ['stroke', this.strokeColor],\r\n        ['stroke-width', this.strokeWidth.toString()]\r\n      ]);\r\n    this.tip1.transform.baseVal.appendItem(SvgHelper.createTransform());\r\n    this.visual.appendChild(this.tip1);\r\n\r\n    this.tip2 = SvgHelper.createLine(\r\n      this.x2 - this.tipLength / 2, \r\n      this.y2, \r\n      this.x2 + this.tipLength / 2, \r\n      this.y2, \r\n      [\r\n        ['stroke', this.strokeColor],\r\n        ['stroke-width', this.strokeWidth.toString()]\r\n      ]);\r\n    this.tip2.transform.baseVal.appendItem(SvgHelper.createTransform());\r\n    this.visual.appendChild(this.tip2);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n    if (this.state === 'creating') {\r\n      this.createTips();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjusts marker visual after manipulation.\r\n   */\r\n  protected adjustVisual(): void {\r\n    super.adjustVisual();\r\n\r\n    if (this.tip1 && this.tip2) {\r\n\r\n      SvgHelper.setAttributes(this.tip1,[\r\n        ['x1', (this.x1 - this.tipLength / 2).toString()], \r\n        ['y1', this.y1.toString()], \r\n        ['x2', (this.x1 + this.tipLength / 2).toString()], \r\n        ['y2', this.y1.toString()], \r\n        ['stroke', this.strokeColor],\r\n        ['stroke-width', this.strokeWidth.toString()]\r\n      ]);\r\n      SvgHelper.setAttributes(this.tip2,[\r\n        ['x1', (this.x2 - this.tipLength / 2).toString()], \r\n        ['y1', this.y2.toString()], \r\n        ['x2', (this.x2 + this.tipLength / 2).toString()], \r\n        ['y2', this.y2.toString()], \r\n        ['stroke', this.strokeColor],\r\n        ['stroke-width', this.strokeWidth.toString()]\r\n      ]);\r\n\r\n      if (Math.abs(this.x1 - this.x2) > 0.1) {\r\n        const lineAngle1 =\r\n          (Math.atan((this.y2 - this.y1) / (this.x2 - this.x1)) * 180) / Math.PI + 90 * Math.sign(this.x1 - this.x2);\r\n\r\n        const a1transform = this.tip1.transform.baseVal.getItem(0);\r\n        a1transform.setRotate(lineAngle1, this.x1, this.y1);\r\n        this.tip1.transform.baseVal.replaceItem(a1transform, 0);\r\n\r\n        const a2transform = this.tip2.transform.baseVal.getItem(0);\r\n        a2transform.setRotate(lineAngle1 + 180, this.x2, this.y2);\r\n        this.tip2.transform.baseVal.replaceItem(a2transform, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.strokePanel, this.strokeWidthPanel, this.strokeStylePanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): LineMarkerState {\r\n    const result =super.getState();\r\n    result.typeName = MeasurementMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    super.restoreState(state);\r\n\r\n    this.createTips();\r\n    this.adjustVisual();\r\n  }\r\n}\r\n","import Icon from './ellipse-frame-marker-icon.svg';\r\nimport { Settings } from '../../core/Settings';\r\nimport { RectangleMarkerState } from '../RectangleMarkerState';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { EllipseMarker } from '../ellipse-marker/EllipseMarker';\r\n\r\nexport class EllipseFrameMarker extends EllipseMarker {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'EllipseFrameMarker';\r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Ellipse frame marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    // reset colors so 'transparent' is excluded\r\n    this.strokePanel.colors= settings.defaultColorSet;\r\n\r\n    this.fillColor = 'transparent';\r\n  }\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.strokePanel, this.strokeWidthPanel, this.strokeStylePanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): RectangleMarkerState {\r\n    const result = super.getState();\r\n    result.typeName = EllipseFrameMarker.typeName;\r\n    return result;\r\n  }\r\n}\r\n","/**\r\n * Manages undo and redo stacks.\r\n */\r\nexport class UndoRedoManager<T> {\r\n  private undoStack: T[] = [];\r\n  private redoStack: T[] = [];\r\n\r\n  private lastRedoStep: T;\r\n\r\n  /**\r\n   * Returns true if there are items in the undo stack.\r\n   */\r\n  public get isUndoPossible(): boolean {\r\n    return this.undoStack.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Returns true if there are items in the redo stack.\r\n   */\r\n  public get isRedoPossible(): boolean {\r\n    return this.redoStack.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Adds a step to the undo stack.\r\n   * @param stepData data representing a state.\r\n   */\r\n  public addUndoStep(stepData: T): void {\r\n    if (\r\n      this.undoStack.length === 0 ||\r\n      JSON.stringify(this.undoStack[this.undoStack.length - 1]) !==\r\n        JSON.stringify(stepData)\r\n    ) {\r\n        this.undoStack.push(stepData);\r\n        if (JSON.stringify(this.lastRedoStep) !== JSON.stringify(stepData)) {\r\n          this.redoStack.splice(0, this.redoStack.length);\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns data for the previous step in the undo stack and adds last step to the redo stack.\r\n   * @returns \r\n   */\r\n  public undo(): T | undefined {\r\n    if (this.undoStack.length > 1) {\r\n      const lastStep = this.undoStack.pop();\r\n      if (lastStep !== undefined) {\r\n        this.redoStack.push(lastStep);\r\n      }\r\n      return this.undoStack.length > 0 ? this.undoStack[this.undoStack.length - 1] : undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns most recent item in the redo stack.\r\n   * @returns \r\n   */\r\n  public redo(): T | undefined {\r\n    this.lastRedoStep = this.redoStack.pop();\r\n    return this.lastRedoStep;\r\n  }\r\n}\r\n","import { IPoint } from '../../core/IPoint';\r\nimport { SvgHelper } from '../../core/SvgHelper';\r\nimport { Settings } from '../../core/Settings';\r\nimport { LinearMarkerBase } from '../LinearMarkerBase';\r\nimport Icon from './curve-marker-icon.svg';\r\nimport { ColorPickerPanel } from '../../ui/toolbox-panels/ColorPickerPanel';\r\nimport { ToolboxPanel } from '../../ui/ToolboxPanel';\r\nimport { LineWidthPanel } from '../../ui/toolbox-panels/LineWidthPanel';\r\nimport { LineStylePanel } from '../../ui/toolbox-panels/LineStylePanel';\r\nimport { CurveMarkerState } from './CurveMarkerState';\r\nimport { MarkerBaseState } from '../../core/MarkerBaseState';\r\nimport { ResizeGrip } from '../ResizeGrip';\r\n\r\nexport class CurveMarker extends LinearMarkerBase {\r\n  /**\r\n   * String type name of the marker type. \r\n   * \r\n   * Used when adding {@link MarkerArea.availableMarkerTypes} via a string and to save and restore state.\r\n   */\r\n  public static typeName = 'CurveMarker';\r\n  \r\n  /**\r\n   * Marker type title (display name) used for accessibility and other attributes.\r\n   */\r\n  public static title = 'Curve marker';\r\n  /**\r\n   * SVG icon markup displayed on toolbar buttons.\r\n   */\r\n  public static icon = Icon;\r\n\r\n  /**\r\n   * Invisible wider curve to make selection easier/possible.\r\n   */\r\n  protected selectorCurve: SVGPathElement;\r\n  /**\r\n   * Visible marker curve.\r\n   */\r\n  protected visibleCurve: SVGPathElement;\r\n\r\n  /**\r\n   * Line color.\r\n   */\r\n  protected strokeColor = 'transparent';\r\n  /**\r\n   * Line width.\r\n   */\r\n  protected strokeWidth = 0;\r\n  /**\r\n   * Line dash array.\r\n   */\r\n  protected strokeDasharray = '';\r\n\r\n  /**\r\n   * Color picker panel for line color.\r\n   */\r\n  protected strokePanel: ColorPickerPanel;\r\n  /**\r\n   * Line width toolbox panel.\r\n   */\r\n  protected strokeWidthPanel: LineWidthPanel;\r\n  /**\r\n   * Line dash array toolbox panel.\r\n   */\r\n  protected strokeStylePanel: LineStylePanel;\r\n\r\n  private curveGrip: ResizeGrip;\r\n  private curveX = 0;\r\n  private curveY = 0;\r\n\r\n  private manipulationStartCurveX = 0;\r\n  private manipulationStartCurveY = 0;\r\n\r\n  private curveControlLine1: SVGLineElement;\r\n  private curveControlLine2: SVGLineElement;\r\n\r\n  /**\r\n   * Creates a new marker.\r\n   *\r\n   * @param container - SVG container to hold marker's visual.\r\n   * @param overlayContainer - overlay HTML container to hold additional overlay elements while editing.\r\n   * @param settings - settings object containing default markers settings.\r\n   */\r\n  constructor(container: SVGGElement, overlayContainer: HTMLDivElement, settings: Settings) {\r\n    super(container, overlayContainer, settings);\r\n\r\n    this.setStrokeColor = this.setStrokeColor.bind(this);\r\n    this.setStrokeWidth = this.setStrokeWidth.bind(this);\r\n    this.setStrokeDasharray = this.setStrokeDasharray.bind(this);\r\n    this.positionGrips = this.positionGrips.bind(this);\r\n    this.addControlGrips = this.addControlGrips.bind(this);\r\n    this.adjustVisual = this.adjustVisual.bind(this);\r\n    this.setupControlBox = this.setupControlBox.bind(this);\r\n    this.resize = this.resize.bind(this);\r\n\r\n    this.strokeColor = settings.defaultColor;\r\n    this.strokeWidth = settings.defaultStrokeWidth;\r\n    this.strokeDasharray = settings.defaultStrokeDasharray;\r\n\r\n    this.strokePanel = new ColorPickerPanel(\r\n      'Line color',\r\n      settings.defaultColorSet,\r\n      settings.defaultColor\r\n    );\r\n    this.strokePanel.onColorChanged = this.setStrokeColor;\r\n\r\n    this.strokeWidthPanel = new LineWidthPanel(\r\n      'Line width',\r\n      settings.defaultStrokeWidths,\r\n      settings.defaultStrokeWidth\r\n    );\r\n    this.strokeWidthPanel.onWidthChanged = this.setStrokeWidth;\r\n\r\n    this.strokeStylePanel = new LineStylePanel(\r\n      'Line style',\r\n      settings.defaultStrokeDasharrays,\r\n      settings.defaultStrokeDasharray\r\n    );\r\n    this.strokeStylePanel.onStyleChanged = this.setStrokeDasharray;\r\n  }\r\n\r\n  /**\r\n   * Returns true if passed SVG element belongs to the marker. False otherwise.\r\n   * \r\n   * @param el - target element.\r\n   */\r\n  public ownsTarget(el: EventTarget): boolean {\r\n    if (\r\n      super.ownsTarget(el) ||\r\n      el === this.visual ||\r\n      el === this.selectorCurve ||\r\n      el === this.visibleCurve ||\r\n      this.curveGrip.ownsTarget(el)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private getPathD(): string {\r\n    const result = `M ${this.x1} ${this.y1} Q ${this.curveX} ${this.curveY}, ${this.x2} ${this.y2}`;\r\n    return result;\r\n  }\r\n\r\n  private createVisual() {\r\n    this.visual = SvgHelper.createGroup();\r\n    this.selectorCurve = SvgHelper.createPath(\r\n      this.getPathD(),\r\n      [\r\n        ['stroke', 'transparent'],\r\n        ['stroke-width', (this.strokeWidth + 10).toString()],\r\n        ['fill', 'transparent'],\r\n      ]\r\n    );\r\n    this.visibleCurve = SvgHelper.createPath(\r\n      this.getPathD(),\r\n      [\r\n        ['stroke', this.strokeColor],\r\n        ['stroke-width', this.strokeWidth.toString()],\r\n        ['fill', 'transparent'],\r\n      ]\r\n    );\r\n    this.visual.appendChild(this.selectorCurve);\r\n    this.visual.appendChild(this.visibleCurve);\r\n\r\n    this.addMarkerVisualToContainer(this.visual);\r\n  }\r\n\r\n  /**\r\n   * Handles pointer (mouse, touch, stylus, etc.) down event.\r\n   * \r\n   * @param point - event coordinates.\r\n   * @param target - direct event target element.\r\n   */\r\n  public pointerDown(point: IPoint, target?: EventTarget): void {\r\n    super.pointerDown(point, target);\r\n\r\n    this.manipulationStartCurveX = this.curveX;\r\n    this.manipulationStartCurveY = this.curveY;\r\n    if (this.state === 'new') {\r\n      this.curveX = point.x;\r\n      this.curveY = point.y;\r\n    }\r\n\r\n    if (this.state === 'new') {\r\n      this.createVisual();\r\n      this.adjustVisual();\r\n\r\n      this._state = 'creating';\r\n    } else if (this.curveGrip.ownsTarget(target)) {\r\n      this.activeGrip = this.curveGrip;\r\n      this._state = 'resize';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjusts visual after manipulation.\r\n   */\r\n  protected adjustVisual(): void {\r\n    if (this.selectorCurve && this.visibleCurve) {\r\n      this.selectorCurve.setAttribute('d', this.getPathD());\r\n\r\n      this.visibleCurve.setAttribute('d', this.getPathD());\r\n\r\n      SvgHelper.setAttributes(this.visibleCurve, [['stroke', this.strokeColor]]);\r\n      SvgHelper.setAttributes(this.visibleCurve, [['stroke-width', this.strokeWidth.toString()]]);\r\n      SvgHelper.setAttributes(this.visibleCurve, [['stroke-dasharray', this.strokeDasharray.toString()]]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets manipulation grips up.\r\n   */\r\n  protected setupControlBox(): void {\r\n    super.setupControlBox();\r\n    this.curveControlLine1 = SvgHelper.createLine(\r\n      this.x1,\r\n      this.y1,\r\n      this.curveX,\r\n      this.curveY,\r\n      [\r\n        ['stroke', 'black'],\r\n        ['stroke-width', '1'],\r\n        ['stroke-opacity', '0.5'],\r\n        ['stroke-dasharray', '3, 2'],\r\n      ]\r\n    );\r\n    this.curveControlLine2 = SvgHelper.createLine(\r\n      this.x2,\r\n      this.y2,\r\n      this.curveX,\r\n      this.curveY,\r\n      [\r\n        ['stroke', 'black'],\r\n        ['stroke-width', '1'],\r\n        ['stroke-opacity', '0.5'],\r\n        ['stroke-dasharray', '3, 2'],\r\n      ]\r\n    );\r\n\r\n    this.controlBox.insertBefore(this.curveControlLine1, this.controlBox.firstChild);\r\n    this.controlBox.insertBefore(this.curveControlLine2, this.controlBox.firstChild);\r\n  }\r\n\r\n  /**\r\n   * Add manipulation grips to the control box.\r\n   */\r\n  protected addControlGrips(): void {\r\n    this.curveGrip = this.createGrip();\r\n    this.curveX = 0;\r\n    this.curveY = 0;\r\n    super.addControlGrips();\r\n  }\r\n\r\n  /**\r\n   * Positions manipulation grips.\r\n   */\r\n  protected positionGrips(): void {\r\n    super.positionGrips();\r\n    const gripSize = this.curveGrip.GRIP_SIZE;\r\n    this.positionGrip(this.curveGrip.visual, this.curveX - gripSize / 2, this.curveY - gripSize / 2);\r\n\r\n    if (this.curveControlLine1 && this.curveControlLine2) {\r\n      this.curveControlLine1.setAttribute('x1', this.x1.toString());\r\n      this.curveControlLine1.setAttribute('y1', this.y1.toString());\r\n      this.curveControlLine1.setAttribute('x2', this.curveX.toString());\r\n      this.curveControlLine1.setAttribute('y2', this.curveY.toString());\r\n\r\n      this.curveControlLine2.setAttribute('x1', this.x2.toString());\r\n      this.curveControlLine2.setAttribute('y1', this.y2.toString());\r\n      this.curveControlLine2.setAttribute('x2', this.curveX.toString());\r\n      this.curveControlLine2.setAttribute('y2', this.curveY.toString());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves or resizes the marker.\r\n   * @param point event coordinates\r\n   */\r\n  public manipulate(point: IPoint): void {\r\n    if (this.state === 'move') {\r\n      this.curveX = this.manipulationStartCurveX + point.x - this.manipulationStartX;\r\n      this.curveY = this.manipulationStartCurveY + point.y - this.manipulationStartY;\r\n    }\r\n    super.manipulate(point);\r\n  }\r\n\r\n  /**\r\n   * Resizes the marker.\r\n   * @param point event coordinates.\r\n   */\r\n  protected resize(point: IPoint): void {\r\n    if (this.activeGrip === this.curveGrip) {\r\n      this.curveX = point.x;\r\n      this.curveY = point.y;\r\n    }\r\n    super.resize(point);\r\n    if (this.state === 'creating') {\r\n      this.curveX = this.x1 + (this.x2 - this.x1) / 2;\r\n      this.curveY = this.y1 + (this.y2 - this.y1) / 2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets line color.\r\n   * @param color - new color.\r\n   */\r\n  protected setStrokeColor(color: string): void {\r\n    this.strokeColor = color;\r\n    this.adjustVisual();\r\n    this.colorChanged(color);\r\n  }\r\n  /**\r\n   * Sets line width.\r\n   * @param width - new width.\r\n   */\r\n  protected setStrokeWidth(width: number): void {\r\n    this.strokeWidth = width\r\n    this.adjustVisual();\r\n  }\r\n\r\n  /**\r\n   * Sets line dash array.\r\n   * @param dashes - new dash array.\r\n   */\r\n  protected setStrokeDasharray(dashes: string): void {\r\n    this.strokeDasharray = dashes;\r\n    this.adjustVisual();\r\n  }\r\n\r\n  /**\r\n   * Scales marker. Used after the image resize.\r\n   * \r\n   * @param scaleX - horizontal scale\r\n   * @param scaleY - vertical scale\r\n   */\r\n  public scale(scaleX: number, scaleY: number): void {\r\n    this.curveX = this.curveX * scaleX;\r\n    this.curveY = this.curveY * scaleY;\r\n    super.scale(scaleX, scaleY);\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the list of toolbox panels for this marker type.\r\n   */\r\n  public get toolboxPanels(): ToolboxPanel[] {\r\n    return [this.strokePanel, this.strokeWidthPanel, this.strokeStylePanel];\r\n  }\r\n\r\n  /**\r\n   * Returns current marker state that can be restored in the future.\r\n   */\r\n  public getState(): CurveMarkerState {\r\n    const result: CurveMarkerState = Object.assign({\r\n      strokeColor: this.strokeColor,\r\n      strokeWidth: this.strokeWidth,\r\n      strokeDasharray: this.strokeDasharray,\r\n      curveX: this.curveX,\r\n      curveY: this.curveY\r\n    }, super.getState());\r\n    result.typeName = CurveMarker.typeName;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores previously saved marker state.\r\n   * \r\n   * @param state - previously saved state.\r\n   */\r\n  public restoreState(state: MarkerBaseState): void {\r\n    super.restoreState(state);\r\n\r\n    const lmState = state as CurveMarkerState;\r\n    this.strokeColor = lmState.strokeColor;\r\n    this.strokeWidth = lmState.strokeWidth;\r\n    this.strokeDasharray = lmState.strokeDasharray;\r\n    this.curveX = lmState.curveX;\r\n    this.curveY = lmState.curveY;\r\n\r\n    this.createVisual();\r\n    this.adjustVisual();\r\n  }\r\n}\r\n","import { MarkerArea } from '../MarkerArea';\r\nimport { MarkerAreaState } from '../MarkerAreaState';\r\nimport { MarkerBase } from './MarkerBase';\r\n\r\nexport class MarkerAreaEvent {\r\n  public markerArea: MarkerArea;\r\n  public cancelable = false;\r\n\r\n  private _defaultPrevented = false;\r\n  public get defaultPrevented(): boolean {\r\n    return this._defaultPrevented;\r\n  }\r\n\r\n  public preventDefault(): void {\r\n    this._defaultPrevented = true;\r\n  }\r\n\r\n  constructor(markerArea: MarkerArea, cancelable = false) {\r\n    this.markerArea = markerArea;\r\n    this.cancelable = cancelable;\r\n  }\r\n}\r\n\r\nexport class MarkerAreaRenderEvent extends MarkerAreaEvent {\r\n  public dataUrl: string;\r\n  public state: MarkerAreaState;\r\n\r\n  constructor(markerArea: MarkerArea, dataUrl: string, state: MarkerAreaState) {\r\n    super(markerArea, false);\r\n    this.dataUrl = dataUrl;\r\n    this.state = state;\r\n  }\r\n}\r\n\r\n\r\nexport class MarkerEvent extends MarkerAreaEvent {\r\n  public marker?: MarkerBase;\r\n\r\n  constructor(markerArea: MarkerArea, marker?: MarkerBase, cancelable = false) {\r\n    super(markerArea, cancelable);\r\n    this.marker = marker;\r\n  }\r\n}\r\n\r\n/**\r\n * General MarkerArea event handler type.\r\n */\r\nexport type MarkerAreaEventHandler = (event: MarkerAreaEvent) => void;\r\n\r\n/**\r\n * MarkerArea render event handler type.\r\n */\r\nexport type MarkerAreaRenderEventHandler = (event: MarkerAreaRenderEvent) => void;\r\n\r\n/**\r\n * Marker event handler type.\r\n */\r\nexport type MarkerEventHandler = (event: MarkerEvent) => void;\r\n\r\n/**\r\n * Describes a repository of MarkerArea event handlers.\r\n */\r\nexport interface IEventListenerRepository {\r\n  /**\r\n   * Event handlers for the `render` event.\r\n   */\r\n  render: MarkerAreaRenderEventHandler[];\r\n  /**\r\n   * Event handlers for the `beforeclose` event.\r\n   */\r\n  beforeclose: MarkerAreaEventHandler[];\r\n  /**\r\n   * Event handlers for the `close` event.\r\n   */\r\n  close: MarkerAreaEventHandler[];\r\n  /**\r\n   * Event handlers for the `show` event.\r\n   */\r\n  show: MarkerAreaEventHandler[];\r\n  /**\r\n   * Event handlers for the `restorestate` event.\r\n   */\r\n  restorestate: MarkerAreaEventHandler[];\r\n  /**\r\n   * Event handlers for the `markerselect` event.\r\n   */\r\n  markerselect: MarkerEventHandler[];\r\n  /**\r\n   * Event handlers for the `markerdeselect` event.\r\n   */\r\n  markerdeselect: MarkerEventHandler[];\r\n  /**\r\n   * Event handlers for the `markercreating` event.\r\n   */\r\n  markercreating: MarkerEventHandler[];\r\n  /**\r\n   * Event handlers for the `markercreated` event.\r\n   */\r\n  markercreate: MarkerEventHandler[];\r\n  /**\r\n   * Event handlers for the `markerbeforedelete` event.\r\n   */\r\n  markerbeforedelete: MarkerEventHandler[];\r\n  /**\r\n   * Event handlers for the `markerdelete` event.\r\n   */\r\n  markerdelete: MarkerEventHandler[];\r\n}\r\n\r\n/**\r\n * Event handler type for a specific event type.\r\n */\r\nexport type EventHandler<\r\n  T extends keyof IEventListenerRepository\r\n> = T extends 'markerselect'\r\n  ? MarkerEventHandler\r\n  : T extends 'markerdeselect'\r\n  ? MarkerEventHandler\r\n  : T extends 'markercreating'\r\n  ? MarkerEventHandler\r\n  : T extends 'markercreate'\r\n  ? MarkerEventHandler\r\n  : T extends 'markerbeforedelete'\r\n  ? MarkerEventHandler\r\n  : T extends 'markerdelete'\r\n  ? MarkerEventHandler\r\n  : T extends 'render'\r\n  ? MarkerAreaRenderEventHandler\r\n  : MarkerAreaEventHandler;\r\n\r\n/**\r\n * Event handler repository.\r\n */\r\nexport class EventListenerRepository implements IEventListenerRepository {\r\n  /**\r\n   * Event handlers for the `render` event.\r\n   */\r\n  render: MarkerAreaRenderEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `beforeclose` event.\r\n   */\r\n  beforeclose: MarkerAreaEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `close` event.\r\n   */\r\n  close: MarkerAreaEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `show` event.\r\n   */\r\n  show: MarkerAreaEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `restorestate` event.\r\n   */\r\n  restorestate: MarkerAreaEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `markerselect` event.\r\n   */\r\n  markerselect: MarkerEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `markerdeselect` event.\r\n   */\r\n  markerdeselect: MarkerEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `markercreating` event.\r\n   */\r\n  markercreating: MarkerEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `markercreate` event.\r\n   */\r\n  markercreate: MarkerEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `markerbeforedelete` event.\r\n   */\r\n  markerbeforedelete: MarkerEventHandler[] = [];\r\n  /**\r\n   * Event handlers for the `markerdelete` event.\r\n   */\r\n  markerdelete: MarkerEventHandler[] = [];\r\n\r\n  /**\r\n   * Add an event handler for a specific event type.\r\n   * @param eventType - event type.\r\n   * @param handler - function to handle the event.\r\n   */\r\n  public addEventListener<T extends keyof IEventListenerRepository>(\r\n    eventType: T,\r\n    handler: EventHandler<T>\r\n  ): void {\r\n    (<Array<EventHandler<T>>>this[eventType]).push(handler);\r\n  }\r\n\r\n  /**\r\n   * Remove an event handler for a specific event type.\r\n   * @param eventType - event type.\r\n   * @param handler - function currently handling the event.\r\n   */\r\n  public removeEventListener<T extends keyof IEventListenerRepository>(\r\n    eventType: T,\r\n    handler: EventHandler<T>\r\n  ): void {\r\n    const index = (<Array<EventHandler<T>>>this[eventType]).indexOf(handler);\r\n    if (index > -1) {\r\n      (<Array<EventHandler<T>>>this[eventType]).splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","import { SvgHelper } from './core/SvgHelper';\r\nimport { Activator } from './core/Activator';\r\nimport { Renderer } from './core/Renderer';\r\n\r\nimport Logo from './assets/markerjs-logo-m.svg';\r\nimport { MarkerBase } from './core/MarkerBase';\r\nimport { Toolbar, ToolbarButtonType } from './ui/Toolbar';\r\nimport { Toolbox } from './ui/Toolbox';\r\nimport { FrameMarker } from './markers/frame-marker/FrameMarker';\r\nimport { Settings } from './core/Settings';\r\nimport { Style } from './core/Style';\r\nimport { LineMarker } from './markers/line-marker/LineMarker';\r\nimport { TextMarker } from './markers/text-marker/TextMarker';\r\nimport { FreehandMarker } from './markers/freehand-marker/FreehandMarker';\r\nimport { ArrowMarker } from './markers/arrow-marker/ArrowMarker';\r\nimport { CoverMarker } from './markers/cover-marker/CoverMarker';\r\nimport { HighlightMarker } from './markers/highlight-marker/HighlightMarker';\r\nimport { CalloutMarker } from './markers/callout-marker/CalloutMarker';\r\nimport { MarkerAreaState } from './MarkerAreaState';\r\nimport { EllipseMarker } from './markers/ellipse-marker/EllipseMarker';\r\nimport { IStyleSettings } from './core/IStyleSettings';\r\nimport { MeasurementMarker } from './markers/measurement-marker/MeasurementMarker';\r\nimport { IPoint } from './core/IPoint';\r\nimport { EllipseFrameMarker } from './markers/ellipse-frame-marker/EllipseFrameMarker';\r\nimport { UndoRedoManager } from './core/UndoRedoManager';\r\nimport { CurveMarker } from './markers/curve-marker/CurveMarker';\r\nimport { EventHandler, EventListenerRepository, IEventListenerRepository, MarkerAreaEvent, MarkerAreaRenderEvent, MarkerEvent } from './core/Events';\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport type MarkerAreaMode = 'select' | 'create' | 'delete';\r\n\r\n/**\r\n * Identifier for marker type when setting {@linkcode availableMarkerTypes}.\r\n * Marker type can be set as either a string or a marker type reference.\r\n */\r\nexport type MarkerTypeIdentifier = string | typeof MarkerBase;\r\n\r\n/**\r\n * Event handler type for {@linkcode MarkerArea} `render` event.\r\n */\r\nexport type RenderEventHandler = (\r\n  dataURL: string,\r\n  state?: MarkerAreaState\r\n) => void;\r\n/**\r\n * Event handler type for {@linkcode MarkerArea} `close` event.\r\n */\r\nexport type CloseEventHandler = () => void;\r\n\r\n/**\r\n * MarkerArea is the main class of marker.js 2. It controls the behavior and appearance of the library.\r\n *\r\n * The simplest marker.js 2 usage scenario looks something like this:\r\n *\r\n * ```typescript\r\n * import * as markerjs2 from 'markerjs2';\r\n * // create an instance of MarkerArea and pass the target image reference as a parameter\r\n * let markerArea = new markerjs2.MarkerArea(document.getElementById('myimg'));\r\n *\r\n * // register an event listener for when user clicks OK/save in the marker.js UI\r\n * markerArea.addEventListener('render', event => {\r\n *   // we are setting the markup result to replace our original image on the page\r\n *   // but you can set a different image or upload it to your server\r\n *   document.getElementById('myimg').src = event.dataUrl;\r\n * });\r\n *\r\n * // finally, call the show() method and marker.js UI opens\r\n * markerArea.show();\r\n * ```\r\n */\r\nexport class MarkerArea {\r\n  private target: HTMLImageElement | HTMLElement;\r\n  private targetObserver: ResizeObserver;\r\n\r\n  private width: number;\r\n  private height: number;\r\n  private imageWidth: number;\r\n  private imageHeight: number;\r\n  private left: number;\r\n  private top: number;\r\n  private windowHeight: number;\r\n\r\n  private markerImage: SVGSVGElement;\r\n  private markerImageHolder: HTMLDivElement;\r\n  private defs: SVGDefsElement;\r\n\r\n  private coverDiv: HTMLDivElement;\r\n  private uiDiv: HTMLDivElement;\r\n  private contentDiv: HTMLDivElement;\r\n  private editorCanvas: HTMLDivElement;\r\n  private editingTarget: HTMLImageElement | HTMLCanvasElement;\r\n  private overlayContainer: HTMLDivElement;\r\n\r\n  private touchPoints = 0;\r\n\r\n  private logoUI: HTMLElement;\r\n\r\n  /**\r\n   * `targetRoot` is used to set an alternative positioning root for the marker.js UI.\r\n   *\r\n   * This is useful in cases when your target image is positioned, say, inside a div with `position: relative;`\r\n   *\r\n   * ```typescript\r\n   * // set targetRoot to a specific div instead of document.body\r\n   * markerArea.targetRoot = document.getElementById('myRootElement');\r\n   * ```\r\n   *\r\n   * @default document.body\r\n   */\r\n  public targetRoot: HTMLElement;\r\n\r\n  /**\r\n   * Returns a list of all built-in marker types for use with {@linkcode availableMarkerTypes}\r\n   *\r\n   * @readonly\r\n   */\r\n  public get ALL_MARKER_TYPES(): typeof MarkerBase[] {\r\n    return [\r\n      FrameMarker,\r\n      FreehandMarker,\r\n      ArrowMarker,\r\n      TextMarker,\r\n      EllipseFrameMarker,\r\n      EllipseMarker,\r\n      HighlightMarker,\r\n      CalloutMarker,\r\n      MeasurementMarker,\r\n      CoverMarker,\r\n      LineMarker,\r\n      CurveMarker,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Returns a list of default set of built-in marker types.\r\n   * Used when {@linkcode availableMarkerTypes} isn't set explicitly.\r\n   *\r\n   * @readonly\r\n   */\r\n  public get DEFAULT_MARKER_TYPES(): typeof MarkerBase[] {\r\n    return [\r\n      FrameMarker,\r\n      FreehandMarker,\r\n      ArrowMarker,\r\n      TextMarker,\r\n      EllipseMarker,\r\n      HighlightMarker,\r\n      CalloutMarker,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Returns a short list of essential built-in marker types for use with {@linkcode availableMarkerTypes}\r\n   *\r\n   * @readonly\r\n   */\r\n  public get BASIC_MARKER_TYPES(): typeof MarkerBase[] {\r\n    return [\r\n      FrameMarker,\r\n      FreehandMarker,\r\n      ArrowMarker,\r\n      TextMarker,\r\n      HighlightMarker,\r\n    ];\r\n  }\r\n\r\n  private _availableMarkerTypes: typeof MarkerBase[] = this\r\n    .DEFAULT_MARKER_TYPES;\r\n\r\n  /**\r\n   * Gets or sets a list of marker types avaiable to the user in the toolbar.\r\n   * The types can be passed as either type reference or a string type name.\r\n   *\r\n   * ```typescript\r\n   * this.markerArea1.availableMarkerTypes = ['CalloutMarker', ...this.markerArea1.BASIC_MARKER_TYPES];\r\n   * ```\r\n   *\r\n   * @default {@linkcode DEFAULT_MARKER_TYPES}\r\n   */\r\n  public get availableMarkerTypes(): MarkerTypeIdentifier[] {\r\n    return this._availableMarkerTypes;\r\n  }\r\n\r\n  public set availableMarkerTypes(value: MarkerTypeIdentifier[]) {\r\n    this._availableMarkerTypes.splice(0);\r\n    value.forEach((mt) => {\r\n      if (typeof mt === 'string') {\r\n        const typeType = this.ALL_MARKER_TYPES.find(\r\n          (allT) => allT.typeName === mt\r\n        );\r\n        if (typeType !== undefined) {\r\n          this._availableMarkerTypes.push(typeType);\r\n        }\r\n      } else {\r\n        this._availableMarkerTypes.push(mt);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toolbar: Toolbar;\r\n  private toolbox: Toolbox;\r\n\r\n  private mode: MarkerAreaMode = 'select';\r\n\r\n  private currentMarker?: MarkerBase;\r\n  private markers: MarkerBase[] = [];\r\n\r\n  private isDragging = false;\r\n\r\n  // for preserving orginal window state before opening the editor\r\n  private bodyOverflowState: string;\r\n  private scrollYState: number;\r\n  private scrollXState: number;\r\n\r\n  private renderEventListeners: RenderEventHandler[] = [];\r\n  private closeEventListeners: CloseEventHandler[] = [];\r\n\r\n  public settings: Settings = new Settings();\r\n  public uiStyleSettings: IStyleSettings;\r\n\r\n  private _isOpen = false;\r\n  /**\r\n   * Returns `true` when MarkerArea is open and `false` otherwise.\r\n   *\r\n   * @readonly\r\n   */\r\n  public get isOpen(): boolean {\r\n    return this._isOpen;\r\n  }\r\n\r\n  private undoRedoManager: UndoRedoManager<\r\n    MarkerAreaState\r\n  > = new UndoRedoManager<MarkerAreaState>();\r\n\r\n  /**\r\n   * When set to true resulting image will be rendered at the natural (original) resolution\r\n   * of the target image. Otherwise (default), screen dimensions of the image are used.\r\n   *\r\n   * @default false (use screen dimensions)\r\n   */\r\n  public renderAtNaturalSize = false;\r\n  /**\r\n   * Type of image for the rendering result. Eg. `image/png` (default) or `image/jpeg`.\r\n   *\r\n   * @default `image/png`\r\n   */\r\n  public renderImageType = 'image/png';\r\n  /**\r\n   * When rendering engine/format supports it (jpeg, for exmample),\r\n   * sets the rendering quality for the resulting image.\r\n   *\r\n   * In case of `image/jpeg` the value should be between 0 (worst quality) and 1 (best quality).\r\n   */\r\n  public renderImageQuality?: number;\r\n  /**\r\n   * When set to `true`, will render only the marker layer without the original image.\r\n   * This could be useful when you want to non-destructively overlay markers on top of the original image.\r\n   *\r\n   * Note that in order for the markers layer to have a transparent background {@linkcode renderImageType}\r\n   * should be set to a format supporting transparency, such as `image/png`.\r\n   *\r\n   * @default false\r\n   */\r\n  public renderMarkersOnly = false;\r\n\r\n  /**\r\n   * When set and {@linkcode renderAtNaturalSize} is `false` sets the width of the rendered image.\r\n   *\r\n   * Both `renderWidth` and `renderHeight` have to be set for this to take effect.\r\n   */\r\n  public renderWidth?: number;\r\n  /**\r\n   * When set and {@linkcode renderAtNaturalSize} is `false` sets the height of the rendered image.\r\n   *\r\n   * Both `renderWidth` and `renderHeight` have to be set for this to take effect.\r\n   */\r\n  public renderHeight?: number;\r\n\r\n  /**\r\n   * If a canvas is specified here, then marker.js will render the output to this canvas\r\n   * in addition to generating an image.\r\n   *\r\n   * @since 2.14.0\r\n   */\r\n  public renderTarget?: HTMLCanvasElement;\r\n\r\n  /**\r\n   * Pressing zoom button iterates through values in this array.\r\n   *\r\n   * @since 2.12.0\r\n   */\r\n  public zoomSteps = [1, 1.5, 2, 4];\r\n  private _zoomLevel = 1;\r\n  /**\r\n   * Gets current zoom level.\r\n   *\r\n   * @since 2.12.0\r\n   */\r\n  public get zoomLevel(): number {\r\n    return this._zoomLevel;\r\n  }\r\n  /**\r\n   * Sets current zoom level.\r\n   *\r\n   * @since 2.12.0\r\n   */\r\n  public set zoomLevel(value: number) {\r\n    this._zoomLevel = value;\r\n    if (this.editorCanvas && this.contentDiv) {\r\n      this.editorCanvas.style.transform = `scale(${this._zoomLevel})`;\r\n      this.contentDiv.scrollTo({\r\n        left:\r\n          (this.editorCanvas.clientWidth * this._zoomLevel -\r\n            this.contentDiv.clientWidth) /\r\n          2,\r\n        top:\r\n          (this.editorCanvas.clientHeight * this._zoomLevel -\r\n            this.contentDiv.clientHeight) /\r\n          2,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new MarkerArea for the specified target image.\r\n   *\r\n   * ```typescript\r\n   * // create an instance of MarkerArea and pass the target image (or other HTML element) reference as a parameter\r\n   * let markerArea = new markerjs2.MarkerArea(document.getElementById('myimg'));\r\n   * ```\r\n   *\r\n   * When `target` is not an image object the output is limited to \"markers only\" (@linkcode renderMarkersOnly)\r\n   * and \"popup\" mode won't work properly as the target object stays in it's original position and, unlike images,\r\n   * is not copied.\r\n   *\r\n   * @param target image object to mark up.\r\n   */\r\n  constructor(target: HTMLImageElement | HTMLElement) {\r\n    Style.settings = Style.defaultSettings;\r\n    this.uiStyleSettings = Style.settings;\r\n\r\n    this.target = target;\r\n    this.targetRoot = document.body;\r\n\r\n    this.width = target.clientWidth;\r\n    this.height = target.clientHeight;\r\n\r\n    Style.removeStyleSheet();\r\n\r\n    this.open = this.open.bind(this);\r\n    this.setTopLeft = this.setTopLeft.bind(this);\r\n\r\n    this.toolbarButtonClicked = this.toolbarButtonClicked.bind(this);\r\n    this.createNewMarker = this.createNewMarker.bind(this);\r\n    this.addNewMarker = this.addNewMarker.bind(this);\r\n    this.markerCreated = this.markerCreated.bind(this);\r\n    this.setCurrentMarker = this.setCurrentMarker.bind(this);\r\n    this.onPointerDown = this.onPointerDown.bind(this);\r\n    this.onDblClick = this.onDblClick.bind(this);\r\n    this.onPointerMove = this.onPointerMove.bind(this);\r\n    this.onPointerUp = this.onPointerUp.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.overrideOverflow = this.overrideOverflow.bind(this);\r\n    this.restoreOverflow = this.restoreOverflow.bind(this);\r\n    this.close = this.close.bind(this);\r\n    this.closeUI = this.closeUI.bind(this);\r\n    this.addCloseEventListener = this.addCloseEventListener.bind(this);\r\n    this.removeCloseEventListener = this.removeCloseEventListener.bind(this);\r\n    this.addRenderEventListener = this.addRenderEventListener.bind(this);\r\n    this.removeRenderEventListener = this.removeRenderEventListener.bind(this);\r\n    this.clientToLocalCoordinates = this.clientToLocalCoordinates.bind(this);\r\n    this.onWindowResize = this.onWindowResize.bind(this);\r\n    this.deleteSelectedMarker = this.deleteSelectedMarker.bind(this);\r\n    this.setWindowHeight = this.setWindowHeight.bind(this);\r\n    this.removeMarker = this.removeMarker.bind(this);\r\n    this.colorChanged = this.colorChanged.bind(this);\r\n    this.fillColorChanged = this.fillColorChanged.bind(this);\r\n    this.onPopupTargetResize = this.onPopupTargetResize.bind(this);\r\n    this.showNotesEditor = this.showNotesEditor.bind(this);\r\n    this.hideNotesEditor = this.hideNotesEditor.bind(this);\r\n    this.stepZoom = this.stepZoom.bind(this);\r\n  }\r\n\r\n  private open(): void {\r\n    this.setupResizeObserver();\r\n    this.setEditingTarget();\r\n    this.setTopLeft();\r\n    this.initMarkerCanvas();\r\n    this.initOverlay();\r\n    this.attachEvents();\r\n    if (this.settings.displayMode === 'popup') {\r\n      this.onPopupTargetResize();\r\n    }\r\n\r\n    if (!Activator.isLicensed) {\r\n      // NOTE:\r\n      // before removing this call please consider supporting marker.js\r\n      // by visiting https://markerjs.com/ for details\r\n      // thank you!\r\n      this.addLogo();\r\n    }\r\n\r\n    this._isOpen = true;\r\n  }\r\n\r\n  /**\r\n   * Initializes the MarkerArea and opens the UI.\r\n   */\r\n  public show(): void {\r\n    this.setWindowHeight();\r\n    this.showUI();\r\n    this.open();\r\n    this.eventListeners['show'].forEach(listener => listener(new MarkerAreaEvent(this)));\r\n  }\r\n\r\n  /**\r\n   * Renders the annotation result.\r\n   *\r\n   * Normally, you should use {@linkcode addEventListener} method to set a listener for the `render` event\r\n   * rather than calling this method directly.\r\n   */\r\n  public async render(): Promise<string> {\r\n    this.setCurrentMarker();\r\n\r\n    const renderer = new Renderer();\r\n    renderer.naturalSize = this.renderAtNaturalSize;\r\n    renderer.imageType = this.renderImageType;\r\n    renderer.imageQuality = this.renderImageQuality;\r\n    renderer.markersOnly = this.renderMarkersOnly;\r\n    renderer.width = this.renderWidth;\r\n    renderer.height = this.renderHeight;\r\n\r\n    // workaround for an issue in Safari where FreeHand marker\r\n    // is not rendered on the first try for some reason\r\n    await renderer.rasterize(\r\n      this.target instanceof HTMLImageElement ? this.target : null,\r\n      this.markerImage,\r\n      this.renderTarget\r\n    );\r\n\r\n    return await renderer.rasterize(\r\n      this.target instanceof HTMLImageElement ? this.target : null,\r\n      this.markerImage,\r\n      this.renderTarget\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Closes the MarkerArea UI.\r\n   */\r\n  public close(suppressBeforeClose = false): void {\r\n    if (this.isOpen) {\r\n      let cancel = false;\r\n\r\n      if (!suppressBeforeClose) {\r\n        this.eventListeners['beforeclose'].forEach(listener => {\r\n          const ev = new MarkerAreaEvent(this, true);\r\n          listener(ev);\r\n          if (ev.defaultPrevented) {\r\n            cancel = true;\r\n          }\r\n        });\r\n      }\r\n      \r\n      if (!cancel) {\r\n        if (this.coverDiv) {\r\n          this.closeUI();\r\n        }\r\n        if (this.targetObserver) {\r\n          this.targetObserver.unobserve(this.target);\r\n        }\r\n        if (this.settings.displayMode === 'popup') {\r\n          window.removeEventListener('resize', this.setWindowHeight);\r\n        }\r\n        //this.closeEventListeners.forEach((listener) => listener());\r\n        this.eventListeners['close'].forEach(listener => listener(new MarkerAreaEvent(this)));\r\n        this._isOpen = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds one or more markers to the toolbar.\r\n   *\r\n   * @param markers - one or more marker types to be added.\r\n   */\r\n  public addMarkersToToolbar(...markers: typeof MarkerBase[]): void {\r\n    this._availableMarkerTypes.push(...markers);\r\n  }\r\n\r\n  /**\r\n   * Add a `render` event listener which is called when user clicks on the OK/save button\r\n   * in the toolbar.\r\n   *\r\n   * ```typescript\r\n   * // register an event listener for when user clicks OK/save in the marker.js UI\r\n   * markerArea.addRenderEventListener(dataUrl => {\r\n   *   // we are setting the markup result to replace our original image on the page\r\n   *   // but you can set a different image or upload it to your server\r\n   *   document.getElementById('myimg').src = dataUrl;\r\n   * });\r\n   * ```\r\n   *\r\n   * This is where you place your code to save a resulting image and/or MarkerAreaState.\r\n   *\r\n   * @param listener - a method handling rendering results\r\n   *\r\n   * @see {@link MarkerAreaState}\r\n   * @deprecated use `addEventListener('render', ...)` instead.\r\n   */\r\n  public addRenderEventListener(listener: RenderEventHandler): void {\r\n    //this.renderEventListeners.push(listener);\r\n    this.addEventListener('render', (event: MarkerAreaRenderEvent) => {\r\n      listener(event.dataUrl, event.state);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove a `render` event handler.\r\n   *\r\n   * @param listener - previously registered `render` event handler.\r\n   * @deprecated use `removeEventListener('render', ...)` instead.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  public removeRenderEventListener(listener: RenderEventHandler): void {\r\n    // if (this.renderEventListeners.indexOf(listener) > -1) {\r\n    //   this.renderEventListeners.splice(\r\n    //     this.renderEventListeners.indexOf(listener),\r\n    //     1\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * Add a `close` event handler to perform actions in your code after the user\r\n   * clicks on the close button (without saving).\r\n   *\r\n   * @param listener - close event listener\r\n   * @deprecated use `addEventListener('close', ...)` instead.\r\n   */\r\n  public addCloseEventListener(listener: CloseEventHandler): void {\r\n    //this.closeEventListeners.push(listener);\r\n    this.addEventListener('close', () => {\r\n      listener();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove a `close` event handler.\r\n   *\r\n   * @param listener - previously registered `close` event handler.\r\n   * @deprecated use `removeEventListener('close', ...)` instead.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  public removeCloseEventListener(listener: CloseEventHandler): void {\r\n    // if (this.closeEventListeners.indexOf(listener) > -1) {\r\n    //   this.closeEventListeners.splice(\r\n    //     this.closeEventListeners.indexOf(listener),\r\n    //     1\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  private setupResizeObserver() {\r\n    if (this.settings.displayMode === 'inline') {\r\n      if (window.ResizeObserver) {\r\n        this.targetObserver = new ResizeObserver(() => {\r\n          this.resize(this.target.clientWidth, this.target.clientHeight);\r\n        });\r\n        this.targetObserver.observe(this.target);\r\n      }\r\n    } else if (this.settings.displayMode === 'popup') {\r\n      if (window.ResizeObserver) {\r\n        this.targetObserver = new ResizeObserver(() =>\r\n          this.onPopupTargetResize()\r\n        );\r\n        this.targetObserver.observe(this.editorCanvas);\r\n      }\r\n      window.addEventListener('resize', this.setWindowHeight);\r\n    }\r\n  }\r\n\r\n  private onPopupTargetResize() {\r\n    const ratio = (1.0 * this.target.clientWidth) / this.target.clientHeight;\r\n    const newWidth =\r\n      this.editorCanvas.clientWidth / ratio > this.editorCanvas.clientHeight\r\n        ? this.editorCanvas.clientHeight * ratio\r\n        : this.editorCanvas.clientWidth;\r\n    const newHeight =\r\n      newWidth < this.editorCanvas.clientWidth\r\n        ? this.editorCanvas.clientHeight\r\n        : this.editorCanvas.clientWidth / ratio;\r\n    this.resize(newWidth, newHeight);\r\n  }\r\n\r\n  private setWindowHeight() {\r\n    this.windowHeight = window.innerHeight;\r\n  }\r\n\r\n  private resize(newWidth: number, newHeight: number) {\r\n    const scaleX = newWidth / this.imageWidth;\r\n    const scaleY = newHeight / this.imageHeight;\r\n\r\n    this.imageWidth = Math.round(newWidth);\r\n    this.imageHeight = Math.round(newHeight);\r\n    if (\r\n      this.target instanceof HTMLImageElement &&\r\n      this.editingTarget instanceof HTMLImageElement\r\n    ) {\r\n      this.editingTarget.src = this.target.src;\r\n    }\r\n    this.editingTarget.width = this.imageWidth;\r\n    this.editingTarget.height = this.imageHeight;\r\n    this.editingTarget.style.width = `${this.imageWidth}px`;\r\n    this.editingTarget.style.height = `${this.imageHeight}px`;\r\n\r\n    this.markerImage.setAttribute('width', this.imageWidth.toString());\r\n    this.markerImage.setAttribute('height', this.imageHeight.toString());\r\n    this.markerImage.setAttribute(\r\n      'viewBox',\r\n      '0 0 ' + this.imageWidth.toString() + ' ' + this.imageHeight.toString()\r\n    );\r\n\r\n    this.markerImageHolder.style.width = `${this.imageWidth}px`;\r\n    this.markerImageHolder.style.height = `${this.imageHeight}px`;\r\n\r\n    this.overlayContainer.style.width = `${this.imageWidth}px`;\r\n    this.overlayContainer.style.height = `${this.imageHeight}px`;\r\n\r\n    if (this.settings.displayMode !== 'popup') {\r\n      this.coverDiv.style.width = `${this.imageWidth.toString()}px`;\r\n    } else {\r\n      this.setTopLeft();\r\n      this.positionMarkerImage();\r\n    }\r\n\r\n    if (this.toolbar !== undefined) {\r\n      this.toolbar.adjustLayout();\r\n    }\r\n\r\n    this.positionLogo();\r\n\r\n    this.scaleMarkers(scaleX, scaleY);\r\n  }\r\n\r\n  private scaleMarkers(scaleX: number, scaleY: number) {\r\n    let preScaleSelectedMarker: MarkerBase;\r\n    if (!(this.currentMarker && this.currentMarker instanceof TextMarker)) {\r\n      preScaleSelectedMarker = this.currentMarker;\r\n      this.setCurrentMarker();\r\n      this.toolbar.setSelectMode();\r\n    }\r\n    this.markers.forEach((marker) => marker.scale(scaleX, scaleY));\r\n    if (preScaleSelectedMarker !== undefined) {\r\n      this.setCurrentMarker(preScaleSelectedMarker);\r\n    }\r\n  }\r\n\r\n  private setEditingTarget() {\r\n    this.imageWidth = Math.round(this.target.clientWidth);\r\n    this.imageHeight = Math.round(this.target.clientHeight);\r\n    if (\r\n      this.target instanceof HTMLImageElement &&\r\n      this.editingTarget instanceof HTMLImageElement\r\n    ) {\r\n      this.editingTarget.src = this.target.src;\r\n    }\r\n    this.editingTarget.width = this.imageWidth;\r\n    this.editingTarget.height = this.imageHeight;\r\n    this.editingTarget.style.width = `${this.imageWidth}px`;\r\n    this.editingTarget.style.height = `${this.imageHeight}px`;\r\n  }\r\n\r\n  private setTopLeft() {\r\n    const targetRect = this.editingTarget.getBoundingClientRect();\r\n    const bodyRect = this.editorCanvas.getBoundingClientRect();\r\n    this.left = targetRect.left - bodyRect.left;\r\n    this.top = targetRect.top - bodyRect.top;\r\n  }\r\n\r\n  private initMarkerCanvas(): void {\r\n    this.markerImageHolder = document.createElement('div');\r\n    this.markerImageHolder.style.setProperty('touch-action', 'pinch-zoom');\r\n\r\n    this.markerImage = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'svg'\r\n    );\r\n    this.markerImage.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n    this.markerImage.setAttribute('width', this.imageWidth.toString());\r\n    this.markerImage.setAttribute('height', this.imageHeight.toString());\r\n    this.markerImage.setAttribute(\r\n      'viewBox',\r\n      '0 0 ' + this.imageWidth.toString() + ' ' + this.imageHeight.toString()\r\n    );\r\n    this.markerImage.style.pointerEvents = 'auto';\r\n\r\n    this.markerImageHolder.style.position = 'absolute';\r\n    this.markerImageHolder.style.width = `${this.imageWidth}px`;\r\n    this.markerImageHolder.style.height = `${this.imageHeight}px`;\r\n    this.markerImageHolder.style.transformOrigin = 'top left';\r\n    this.positionMarkerImage();\r\n\r\n    this.defs = SvgHelper.createDefs();\r\n    this.markerImage.appendChild(this.defs);\r\n\r\n    this.markerImageHolder.appendChild(this.markerImage);\r\n\r\n    this.editorCanvas.appendChild(this.markerImageHolder);\r\n  }\r\n\r\n  private initOverlay(): void {\r\n    this.overlayContainer = document.createElement('div');\r\n    this.overlayContainer.style.position = 'absolute';\r\n    this.overlayContainer.style.left = '0px';\r\n    this.overlayContainer.style.top = '0px';\r\n    this.overlayContainer.style.width = `${this.imageWidth}px`;\r\n    this.overlayContainer.style.height = `${this.imageHeight}px`;\r\n    this.overlayContainer.style.display = 'flex';\r\n    this.markerImageHolder.appendChild(this.overlayContainer);\r\n  }\r\n\r\n  private positionMarkerImage() {\r\n    this.markerImageHolder.style.top = this.top / this.zoomLevel + 'px';\r\n    this.markerImageHolder.style.left = this.left / this.zoomLevel + 'px';\r\n  }\r\n\r\n  private attachEvents() {\r\n    this.markerImage.addEventListener('pointerdown', this.onPointerDown);\r\n    this.markerImage.addEventListener('dblclick', this.onDblClick);\r\n    window.addEventListener('pointermove', this.onPointerMove);\r\n    window.addEventListener('pointerup', this.onPointerUp);\r\n    window.addEventListener('pointercancel', () => {\r\n      if (this.touchPoints > 0) {\r\n        this.touchPoints--;\r\n      }\r\n    });\r\n    window.addEventListener('pointerout', () => {\r\n      if (this.touchPoints > 0) {\r\n        this.touchPoints--;\r\n      }\r\n    });\r\n    window.addEventListener('pointerleave', this.onPointerUp);\r\n    window.addEventListener('resize', this.onWindowResize);\r\n    window.addEventListener('keyup', this.onKeyUp);\r\n  }\r\n\r\n  /**\r\n   * NOTE:\r\n   *\r\n   * before removing or modifying this method please consider supporting marker.js\r\n   * by visiting https://markerjs.com/#price for details\r\n   *\r\n   * thank you!\r\n   */\r\n  private addLogo() {\r\n    this.logoUI = document.createElement('div');\r\n    this.logoUI.style.display = 'inline-block';\r\n    this.logoUI.style.margin = '0px';\r\n    this.logoUI.style.padding = '0px';\r\n    this.logoUI.style.fill = '#333333';\r\n\r\n    const link = document.createElement('a');\r\n    link.href = 'https://markerjs.com/';\r\n    link.target = '_blank';\r\n    link.innerHTML = Logo;\r\n    link.title = 'Powered by marker.js';\r\n\r\n    link.style.display = 'grid';\r\n    link.style.alignItems = 'center';\r\n    link.style.justifyItems = 'center';\r\n    link.style.padding = '3px';\r\n    link.style.width = '20px';\r\n    link.style.height = '20px';\r\n\r\n    this.logoUI.appendChild(link);\r\n\r\n    this.editorCanvas.appendChild(this.logoUI);\r\n\r\n    this.logoUI.style.position = 'absolute';\r\n    this.logoUI.style.pointerEvents = 'all';\r\n    this.positionLogo();\r\n  }\r\n\r\n  private positionLogo() {\r\n    if (this.logoUI) {\r\n      if (this.uiStyleSettings.logoPosition !== 'right') {\r\n        this.logoUI.style.left = `${this.markerImageHolder.offsetLeft + 10}px`;\r\n      } else {\r\n        this.logoUI.style.left = `${\r\n          this.markerImageHolder.offsetLeft +\r\n          this.markerImageHolder.offsetWidth -\r\n          this.logoUI.clientWidth -\r\n          10\r\n        }px`;\r\n      }\r\n      this.logoUI.style.top = `${\r\n        this.markerImageHolder.offsetTop +\r\n        this.markerImageHolder.offsetHeight -\r\n        this.logoUI.clientHeight -\r\n        10\r\n      }px`;\r\n    }\r\n  }\r\n\r\n  private overrideOverflow() {\r\n    // backup current state of scrolling and overflow\r\n    this.scrollXState = window.scrollX;\r\n    this.scrollYState = window.scrollY;\r\n    this.bodyOverflowState = document.body.style.overflow;\r\n\r\n    window.scroll({ top: 0, left: 0 });\r\n    document.body.style.overflow = 'hidden';\r\n  }\r\n\r\n  private restoreOverflow() {\r\n    document.body.style.overflow = this.bodyOverflowState;\r\n    window.scroll({ top: this.scrollYState, left: this.scrollXState });\r\n  }\r\n\r\n  private showUI(): void {\r\n    if (this.settings.displayMode === 'popup') {\r\n      this.overrideOverflow();\r\n    }\r\n\r\n    this.coverDiv = document.createElement('div');\r\n    this.coverDiv.className = Style.CLASS_PREFIX;\r\n    // hardcode font size so nothing inside is affected by higher up settings\r\n    this.coverDiv.style.fontSize = '16px';\r\n    this.coverDiv.style.userSelect = 'none';\r\n\r\n    switch (this.settings.displayMode) {\r\n      case 'inline': {\r\n        this.coverDiv.style.position = 'absolute';\r\n        const coverTop =\r\n          this.target.getClientRects().item(0).y > Style.settings.toolbarHeight\r\n            ? this.target.offsetTop - Style.settings.toolbarHeight\r\n            : 0;\r\n        this.coverDiv.style.top = `${coverTop}px`;\r\n        this.coverDiv.style.left = `${this.target.offsetLeft.toString()}px`;\r\n        this.coverDiv.style.width = `${this.target.offsetWidth.toString()}px`;\r\n        //this.coverDiv.style.height = `${this.target.offsetHeight.toString()}px`;\r\n        this.coverDiv.style.zIndex =\r\n          this.uiStyleSettings.zIndex !== undefined\r\n            ? this.uiStyleSettings.zIndex\r\n            : '5';\r\n        // flex causes the ui to stretch when toolbox has wider nowrap panels\r\n        //this.coverDiv.style.display = 'flex';\r\n        break;\r\n      }\r\n      case 'popup': {\r\n        this.coverDiv.style.position = 'absolute';\r\n        this.coverDiv.style.top = '0px';\r\n        this.coverDiv.style.left = '0px';\r\n        this.coverDiv.style.width = '100vw';\r\n        this.coverDiv.style.height = `${window.innerHeight}px`;\r\n        this.coverDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.75)';\r\n        this.coverDiv.style.zIndex =\r\n          this.uiStyleSettings.zIndex !== undefined\r\n            ? this.uiStyleSettings.zIndex\r\n            : '1000';\r\n        this.coverDiv.style.display = 'flex';\r\n        // this.coverDiv.style.overflow = 'auto';\r\n      }\r\n    }\r\n    this.targetRoot.appendChild(this.coverDiv);\r\n\r\n    this.uiDiv = document.createElement('div');\r\n    this.uiDiv.style.display = 'flex';\r\n    this.uiDiv.style.flexDirection = 'column';\r\n    this.uiDiv.style.flexGrow = '2';\r\n    this.uiDiv.style.margin =\r\n      this.settings.displayMode === 'popup'\r\n        ? `${this.settings.popupMargin}px`\r\n        : '0px';\r\n    this.uiDiv.style.border = '0px';\r\n    // this.uiDiv.style.overflow = 'hidden';\r\n    //this.uiDiv.style.backgroundColor = '#ffffff';\r\n    this.coverDiv.appendChild(this.uiDiv);\r\n\r\n    this.toolbar = new Toolbar(\r\n      this.uiDiv,\r\n      this.settings.displayMode,\r\n      this._availableMarkerTypes,\r\n      this.uiStyleSettings\r\n    );\r\n    this.toolbar.addButtonClickListener(this.toolbarButtonClicked);\r\n    this.toolbar.show(this.uiStyleSettings.hideToolbar ? 'hidden' : 'visible');\r\n\r\n    this.contentDiv = document.createElement('div');\r\n    this.contentDiv.style.display = 'flex';\r\n    this.contentDiv.style.flexDirection = 'row';\r\n    this.contentDiv.style.flexGrow = '2';\r\n    this.contentDiv.style.flexShrink = '1';\r\n    if (this.settings.displayMode === 'popup') {\r\n      this.contentDiv.style.backgroundColor = this.uiStyleSettings.canvasBackgroundColor;\r\n      this.contentDiv.style.maxHeight = `${\r\n        this.windowHeight -\r\n        this.settings.popupMargin * 2 -\r\n        this.uiStyleSettings.toolbarHeight * 3.5\r\n      }px`;\r\n      // this.contentDiv.style.maxHeight = `calc(100vh - ${\r\n      //   this.settings.popupMargin * 2 + this.uiStyleSettings.toolbarHeight * 3.5}px)`;\r\n      this.contentDiv.style.maxWidth = `calc(100vw - ${\r\n        this.settings.popupMargin * 2\r\n      }px)`;\r\n    }\r\n    this.contentDiv.style.overflow = 'auto';\r\n    this.uiDiv.appendChild(this.contentDiv);\r\n\r\n    this.editorCanvas = document.createElement('div');\r\n    this.editorCanvas.style.flexGrow = '2';\r\n    this.editorCanvas.style.flexShrink = '1';\r\n    this.editorCanvas.style.position = 'relative';\r\n    this.editorCanvas.style.overflow = 'hidden';\r\n    this.editorCanvas.style.display = 'flex';\r\n    if (this.settings.displayMode === 'popup') {\r\n      this.editorCanvas.style.alignItems = 'center';\r\n      this.editorCanvas.style.justifyContent = 'center';\r\n    }\r\n    this.editorCanvas.style.pointerEvents = 'none';\r\n    this.editorCanvas.style.transformOrigin = 'left top';\r\n    this.editorCanvas.style.transform = `scale(${this.zoomLevel})`;\r\n    this.contentDiv.appendChild(this.editorCanvas);\r\n\r\n    this.editingTarget =\r\n      this.target instanceof HTMLImageElement\r\n        ? document.createElement('img')\r\n        : document.createElement('canvas');\r\n    if (this.target.getClientRects().item(0).y < Style.settings.toolbarHeight) {\r\n      this.editingTarget.style.marginTop = `${\r\n        this.target.offsetTop - Style.settings.toolbarHeight\r\n      }px`;\r\n    }\r\n    this.editorCanvas.appendChild(this.editingTarget);\r\n\r\n    this.toolbox = new Toolbox(\r\n      this.uiDiv,\r\n      this.settings.displayMode,\r\n      this.uiStyleSettings\r\n    );\r\n    this.toolbox.show(this.uiStyleSettings.hideToolbox ? 'hidden' : 'visible');\r\n  }\r\n\r\n  private closeUI() {\r\n    if (this.settings.displayMode === 'popup') {\r\n      this.restoreOverflow();\r\n    }\r\n    // @todo better cleanup\r\n    this.targetRoot.removeChild(this.coverDiv);\r\n  }\r\n\r\n  private removeMarker(marker: MarkerBase) {\r\n    this.markerImage.removeChild(marker.container);\r\n    if (this.markers.indexOf(marker) > -1) {\r\n      this.markers.splice(this.markers.indexOf(marker), 1);\r\n    }\r\n    marker.dispose();\r\n  }\r\n\r\n  private switchToSelectMode() {\r\n    this.mode = 'select';\r\n    this.hideNotesEditor();\r\n    if (this.currentMarker !== undefined) {\r\n      if (this.currentMarker.state !== 'new') {\r\n        this.currentMarker.select();\r\n      } else {\r\n        this.removeMarker(this.currentMarker);\r\n        this.setCurrentMarker();\r\n        this.markerImage.style.cursor = 'default';\r\n      }\r\n      this.addUndoStep();\r\n    }\r\n  }\r\n\r\n  private toolbarButtonClicked(\r\n    buttonType: ToolbarButtonType,\r\n    value?: typeof MarkerBase | string\r\n  ) {\r\n    if (buttonType === 'marker' && value !== undefined) {\r\n      this.createNewMarker(<typeof MarkerBase>value);\r\n    } else if (buttonType === 'action') {\r\n      switch (value) {\r\n        case 'select': {\r\n          this.switchToSelectMode();\r\n          break;\r\n        }\r\n        case 'delete': {\r\n          this.deleteSelectedMarker();\r\n          break;\r\n        }\r\n        case 'clear': {\r\n          this.clear();\r\n          break;\r\n        }\r\n        case 'undo': {\r\n          this.switchToSelectMode();\r\n          this.addUndoStep();\r\n          this.undo();\r\n          break;\r\n        }\r\n        case 'redo': {\r\n          this.switchToSelectMode();\r\n          this.redo();\r\n          break;\r\n        }\r\n        case 'zoom': {\r\n          this.stepZoom();\r\n          break;\r\n        }\r\n        case 'zoom-out': {\r\n          this.zoomLevel = 1;\r\n          break;\r\n        }\r\n        case 'notes': {\r\n          if (this.notesArea === undefined) {\r\n            this.switchToSelectMode();\r\n            this.zoomLevel = 1;\r\n            this.showNotesEditor();\r\n          } else {\r\n            this.switchToSelectMode();\r\n          }\r\n          break;\r\n        }\r\n        case 'close': {\r\n          this.close();\r\n          break;\r\n        }\r\n        case 'render': {\r\n          this.switchToSelectMode();\r\n          this.startRenderAndClose();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes currently selected marker.\r\n   */\r\n  public deleteSelectedMarker(): void {\r\n    if (this.currentMarker !== undefined) {\r\n      let cancel = false;\r\n\r\n      this.eventListeners['markerbeforedelete'].forEach(listener => {\r\n        const ev = new MarkerEvent(this, this.currentMarker, true);\r\n        listener(ev);\r\n        if (ev.defaultPrevented) {\r\n          cancel = true;\r\n        }\r\n      });\r\n      \r\n      if (!cancel) {\r\n        const marker = this.currentMarker;\r\n        this.currentMarker.dispose();\r\n        this.markerImage.removeChild(this.currentMarker.container);\r\n        this.markers.splice(this.markers.indexOf(this.currentMarker), 1);\r\n        this.setCurrentMarker();\r\n        this.addUndoStep();\r\n        this.eventListeners['markerdelete'].forEach(listener => listener(new MarkerEvent(this, marker)));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes all markers.\r\n   * \r\n   * @since 2.15.0\r\n   */\r\n  public clear(): void {\r\n    this.setCurrentMarker();\r\n    for (let i = this.markers.length - 1; i >= 0; i--) {\r\n      this.setCurrentMarker(this.markers[i]);\r\n      this.currentMarker.dispose();\r\n      this.markerImage.removeChild(this.currentMarker.container);\r\n      this.markers.splice(this.markers.indexOf(this.currentMarker), 1);\r\n    }\r\n    this.addUndoStep();\r\n  }\r\n\r\n  private notesArea?: HTMLTextAreaElement;\r\n  private get isNotesAreaOpen(): boolean {\r\n    return this.notesArea !== undefined;\r\n  }\r\n\r\n  private showNotesEditor() {\r\n    if (this.currentMarker !== undefined) {\r\n      this.overlayContainer.innerHTML = '';\r\n      this.notesArea = document.createElement('textarea');\r\n      this.notesArea.className = this.uiStyleSettings.notesAreaStyleClassName;\r\n      this.notesArea.style.pointerEvents = 'auto';\r\n      this.notesArea.style.alignSelf = 'stretch';\r\n      this.notesArea.style.width = '100%';\r\n      this.notesArea.style.margin = `${\r\n        this.uiStyleSettings.toolbarHeight / 4\r\n      }px`;\r\n      this.notesArea.value = this.currentMarker.notes ?? '';\r\n      this.overlayContainer.appendChild(this.notesArea);\r\n    }\r\n  }\r\n  private hideNotesEditor() {\r\n    if (this.isNotesAreaOpen) {\r\n      if (this.currentMarker !== undefined) {\r\n        this.currentMarker.notes =\r\n          this.notesArea.value.trim() !== '' ? this.notesArea.value : undefined;\r\n      }\r\n      this.overlayContainer.removeChild(this.notesArea);\r\n      this.notesArea = undefined;\r\n    }\r\n  }\r\n\r\n  private selectLastMarker() {\r\n    if (this.markers.length > 0) {\r\n      this.setCurrentMarker(this.markers[this.markers.length - 1]);\r\n    }\r\n  }\r\n\r\n  private addUndoStep() {\r\n    if (\r\n      this.currentMarker === undefined ||\r\n      this.currentMarker.state !== 'edit'\r\n    ) {\r\n      this.undoRedoManager.addUndoStep(this.getState());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Undo last action.\r\n   *\r\n   * @since 2.6.0\r\n   */\r\n  public undo(): void {\r\n    const stepData = this.undoRedoManager.undo();\r\n    if (stepData !== undefined) {\r\n      this.restoreState(stepData);\r\n      this.selectLastMarker();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Redo previously undone action.\r\n   *\r\n   * @since 2.6.0\r\n   */\r\n  public redo(): void {\r\n    const stepData = this.undoRedoManager.redo();\r\n    if (stepData !== undefined) {\r\n      this.restoreState(stepData);\r\n      this.selectLastMarker();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate zoom steps (@linkcode zoomSteps).\r\n   * Next zoom level is selected or returns to the first zoom level restarting the sequence.\r\n   *\r\n   * @since 2.12.0\r\n   */\r\n  public stepZoom(): void {\r\n    const zoomStepIndex = this.zoomSteps.indexOf(this.zoomLevel);\r\n    this.zoomLevel =\r\n      zoomStepIndex < this.zoomSteps.length - 1\r\n        ? this.zoomSteps[zoomStepIndex + 1]\r\n        : this.zoomSteps[0];\r\n  }\r\n\r\n  private prevPanPoint: IPoint = { x: 0, y: 0 };\r\n  private panTo(point: IPoint) {\r\n    this.contentDiv.scrollBy({\r\n      left: this.prevPanPoint.x - point.x,\r\n      top: this.prevPanPoint.y - point.y,\r\n    });\r\n    this.prevPanPoint = point;\r\n  }\r\n\r\n  /**\r\n   * Initiates markup rendering.\r\n   *\r\n   * Get results by adding a render event listener via {@linkcode addRenderEventListener}.\r\n   */\r\n  public async startRenderAndClose(): Promise<void> {\r\n    const result = await this.render();\r\n    const state = this.getState();\r\n    //this.renderEventListeners.forEach((listener) => listener(result, state));\r\n    this.eventListeners['render'].forEach(listener => listener(new MarkerAreaRenderEvent(this, result, state)));\r\n    this.close(true);\r\n  }\r\n\r\n  /**\r\n   * Returns the complete state for the MarkerArea that can be preserved and used\r\n   * to continue annotation next time.\r\n   *\r\n   * @param deselectCurrentMarker - when `true` is passed, currently selected marker will be deselected before getting the state.\r\n   */\r\n  public getState(deselectCurrentMarker?: boolean): MarkerAreaState {\r\n    if (deselectCurrentMarker === true) {\r\n      this.setCurrentMarker();\r\n    }\r\n    const result: MarkerAreaState = {\r\n      width: this.imageWidth,\r\n      height: this.imageHeight,\r\n      markers: [],\r\n    };\r\n    this.markers.forEach((marker) => result.markers.push(marker.getState()));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Restores MarkerArea state to continue previous annotation session.\r\n   *\r\n   * **IMPORTANT**: call `restoreState()` __after__ you've opened the MarkerArea with {@linkcode show}.\r\n   *\r\n   * ```typescript\r\n   * this.markerArea1.show();\r\n   * if (this.currentState) {\r\n   *   this.markerArea1.restoreState(this.currentState);\r\n   * }\r\n   * ```\r\n   *\r\n   * @param state - previously saved state object.\r\n   */\r\n  public restoreState(state: MarkerAreaState): void {\r\n    this.markers.splice(0);\r\n    while (this.markerImage.lastChild) {\r\n      this.markerImage.removeChild(this.markerImage.lastChild);\r\n    }\r\n    state.markers.forEach((markerState) => {\r\n      const markerType = this._availableMarkerTypes.find(\r\n        (mType) => mType.typeName === markerState.typeName\r\n      );\r\n      if (markerType !== undefined) {\r\n        const marker = this.addNewMarker(markerType);\r\n        marker.restoreState(markerState);\r\n        this.markers.push(marker);\r\n      }\r\n    });\r\n    if (\r\n      state.width &&\r\n      state.height &&\r\n      (state.width !== this.imageWidth || state.height !== this.imageHeight)\r\n    ) {\r\n      this.scaleMarkers(\r\n        this.imageWidth / state.width,\r\n        this.imageHeight / state.height\r\n      );\r\n    }\r\n    this.eventListeners['restorestate'].forEach(listener => listener(new MarkerAreaEvent(this)));\r\n  }\r\n\r\n  private addNewMarker(markerType: typeof MarkerBase): MarkerBase {\r\n    const g = SvgHelper.createGroup();\r\n    this.markerImage.appendChild(g);\r\n\r\n    return new markerType(g, this.overlayContainer, this.settings);\r\n  }\r\n\r\n  /**\r\n   * Initiate new marker creation.\r\n   *\r\n   * marker.js switches to marker creation mode for the marker type specified\r\n   * and users can draw a new marker like they would by pressing a corresponding\r\n   * toolbar button.\r\n   *\r\n   * This example initiates creation of a `FrameMarker`:\r\n   * ```typescript\r\n   * this.markerArea1.createNewMarker(FrameMarker);\r\n   * ```\r\n   *\r\n   * @param markerType\r\n   */\r\n  public createNewMarker(markerType: typeof MarkerBase): void {\r\n    this.setCurrentMarker();\r\n    this.currentMarker = this.addNewMarker(markerType);\r\n    this.currentMarker.onMarkerCreated = this.markerCreated;\r\n    this.currentMarker.onColorChanged = this.colorChanged;\r\n    this.currentMarker.onFillColorChanged = this.fillColorChanged;\r\n    this.markerImage.style.cursor = 'crosshair';\r\n    this.toolbox.setPanelButtons(this.currentMarker.toolboxPanels);\r\n    this.eventListeners['markercreating'].forEach(listener => listener(new MarkerEvent(this, this.currentMarker)));\r\n  }\r\n\r\n  private markerCreated(marker: MarkerBase) {\r\n    this.mode = 'select';\r\n    this.markerImage.style.cursor = 'default';\r\n    this.markers.push(marker);\r\n    this.setCurrentMarker(marker);\r\n    if (\r\n      marker instanceof FreehandMarker &&\r\n      this.settings.newFreehandMarkerOnPointerUp\r\n    ) {\r\n      this.createNewMarker(FreehandMarker);\r\n    } else {\r\n      this.toolbar.setSelectMode();\r\n    }\r\n    this.addUndoStep();\r\n    this.eventListeners['markercreate'].forEach(listener => listener(new MarkerEvent(this, this.currentMarker)));\r\n  }\r\n\r\n  private colorChanged(color: string): void {\r\n    if (this.settings.defaultColorsFollowCurrentColors) {\r\n      this.settings.defaultColor = color;\r\n      this.settings.defaultStrokeColor = color;\r\n    }\r\n  }\r\n  private fillColorChanged(color: string): void {\r\n    if (this.settings.defaultColorsFollowCurrentColors) {\r\n      this.settings.defaultFillColor = color;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the currently selected marker or deselects it if no parameter passed.\r\n   *\r\n   * @param marker marker to select. Deselects current marker if undefined.\r\n   */\r\n  public setCurrentMarker(marker?: MarkerBase): void {\r\n    if (this.currentMarker !== marker) { // no need to deselect if not changed\r\n      if (this.currentMarker !== undefined) {\r\n        this.currentMarker.deselect();\r\n        this.toolbar.setCurrentMarker();\r\n        this.toolbox.setPanelButtons([]);\r\n        this.eventListeners['markerdeselect'].forEach(listener => listener(new MarkerEvent(this, this.currentMarker)));\r\n      }\r\n    }\r\n    this.currentMarker = marker;\r\n    if (this.currentMarker !== undefined && !this.currentMarker.isSelected) {\r\n      this.currentMarker.select();\r\n      this.toolbar.setCurrentMarker(this.currentMarker);\r\n      this.toolbox.setPanelButtons(this.currentMarker.toolboxPanels);\r\n      this.eventListeners['markerselect'].forEach(listener => listener(new MarkerEvent(this, this.currentMarker)));\r\n    }\r\n  }\r\n\r\n  private onPointerDown(ev: PointerEvent) {\r\n    this.touchPoints++;\r\n    if (this.touchPoints === 1 || ev.pointerType !== 'touch') {\r\n      if (\r\n        this.currentMarker !== undefined &&\r\n        (this.currentMarker.state === 'new' ||\r\n          this.currentMarker.state === 'creating')\r\n      ) {\r\n        this.isDragging = true;\r\n        this.currentMarker.pointerDown(\r\n          this.clientToLocalCoordinates(ev.clientX, ev.clientY)\r\n        );\r\n      } else if (this.mode === 'select') {\r\n        const hitMarker = this.markers.find((m) => m.ownsTarget(ev.target));\r\n        if (hitMarker !== undefined) {\r\n          this.setCurrentMarker(hitMarker);\r\n          this.isDragging = true;\r\n          this.currentMarker.pointerDown(\r\n            this.clientToLocalCoordinates(ev.clientX, ev.clientY),\r\n            ev.target\r\n          );\r\n        } else {\r\n          this.setCurrentMarker();\r\n          this.isDragging = true;\r\n          this.prevPanPoint = { x: ev.clientX, y: ev.clientY };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private onDblClick(ev: PointerEvent) {\r\n    if (this.mode === 'select') {\r\n      const hitMarker = this.markers.find((m) => m.ownsTarget(ev.target));\r\n      if (hitMarker !== undefined && hitMarker !== this.currentMarker) {\r\n        this.setCurrentMarker(hitMarker);\r\n      }\r\n      if (this.currentMarker !== undefined) {\r\n        this.currentMarker.dblClick(\r\n          this.clientToLocalCoordinates(ev.clientX, ev.clientY),\r\n          ev.target\r\n        );\r\n      } else {\r\n        this.setCurrentMarker();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onPointerMove(ev: PointerEvent) {\r\n    if (this.touchPoints === 1 || ev.pointerType !== 'touch') {\r\n      if (this.currentMarker !== undefined || this.isDragging) {\r\n        // don't swallow the event when editing text markers\r\n        if (\r\n          this.currentMarker === undefined ||\r\n          this.currentMarker.state !== 'edit'\r\n        ) {\r\n          ev.preventDefault();\r\n        }\r\n\r\n        if (this.currentMarker !== undefined) {\r\n          this.currentMarker.manipulate(\r\n            this.clientToLocalCoordinates(ev.clientX, ev.clientY)\r\n          );\r\n        } else if (this.zoomLevel > 1) {\r\n          this.panTo({ x: ev.clientX, y: ev.clientY });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private onPointerUp(ev: PointerEvent) {\r\n    if (this.touchPoints > 0) {\r\n      this.touchPoints--;\r\n    }\r\n    if (this.touchPoints === 0) {\r\n      if (this.isDragging && this.currentMarker !== undefined) {\r\n        this.currentMarker.pointerUp(\r\n          this.clientToLocalCoordinates(ev.clientX, ev.clientY)\r\n        );\r\n      }\r\n    }\r\n    this.isDragging = false;\r\n    this.addUndoStep();\r\n  }\r\n\r\n  private onKeyUp(ev: KeyboardEvent) {\r\n    if (\r\n      this.currentMarker !== undefined &&\r\n      this.notesArea === undefined &&\r\n      (ev.key === 'Delete' || ev.key === 'Backspace')\r\n    ) {\r\n      this.removeMarker(this.currentMarker);\r\n      this.setCurrentMarker();\r\n      this.markerImage.style.cursor = 'default';\r\n      this.addUndoStep();\r\n    }\r\n  }\r\n\r\n  private clientToLocalCoordinates(x: number, y: number): IPoint {\r\n    const clientRect = this.markerImage.getBoundingClientRect();\r\n    return {\r\n      x: (x - clientRect.left) / this.zoomLevel,\r\n      y: (y - clientRect.top) / this.zoomLevel,\r\n    };\r\n  }\r\n\r\n  private onWindowResize() {\r\n    this.positionUI();\r\n  }\r\n\r\n  private positionUI() {\r\n    this.setTopLeft();\r\n    switch (this.settings.displayMode) {\r\n      case 'inline': {\r\n        const coverTop =\r\n          this.target.offsetTop > Style.settings.toolbarHeight\r\n            ? this.target.offsetTop - Style.settings.toolbarHeight\r\n            : 0;\r\n        this.coverDiv.style.top = `${coverTop}px`;\r\n        this.coverDiv.style.left = `${this.target.offsetLeft.toString()}px`;\r\n        break;\r\n      }\r\n      case 'popup': {\r\n        this.coverDiv.style.top = '0px';\r\n        this.coverDiv.style.left = '0px';\r\n        this.coverDiv.style.width = '100vw';\r\n        this.coverDiv.style.height = `${this.windowHeight}px`;\r\n        this.contentDiv.style.maxHeight = `${\r\n          this.windowHeight -\r\n          this.settings.popupMargin * 2 -\r\n          this.uiStyleSettings.toolbarHeight * 3.5\r\n        }px`;\r\n      }\r\n    }\r\n    this.positionMarkerImage();\r\n    this.positionLogo();\r\n  }\r\n\r\n  /**\r\n   * Add license key.\r\n   *\r\n   * This is a proxy method for {@linkcode Activator.addKey()}.\r\n   *\r\n   * @param key - commercial license key.\r\n   */\r\n  public addLicenseKey(key: string): void {\r\n    Activator.addKey(key);\r\n  }\r\n\r\n  private eventListeners = new EventListenerRepository();\r\n  /**\r\n   * Adds an event listener for one of the marker.js Live events.\r\n   * \r\n   * @param eventType - type of the event.\r\n   * @param handler - function handling the event.\r\n   * \r\n   * @since 2.16.0\r\n   */\r\n  public addEventListener<T extends keyof IEventListenerRepository>(\r\n    eventType: T,\r\n    handler: EventHandler<T>\r\n  ): void {\r\n    this.eventListeners.addEventListener(eventType, handler);\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener for one of the marker.js Live events.\r\n   * \r\n   * @param eventType - type of the event.\r\n   * @param handler - function currently handling the event.\r\n   * \r\n   * @since 2.16.0\r\n   */\r\n  public removeEventListener<T extends keyof IEventListenerRepository>(\r\n    eventType: T,\r\n    handler: EventHandler<T>\r\n  ): void {\r\n    this.eventListeners.removeEventListener(eventType, handler);\r\n  }\r\n\r\n}\r\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { Activator, FrameMarker, MarkerArea, Style } from '../../src';\r\nimport { DisplayMode } from '../../src/core/Settings';\r\nimport { MarkerAreaState } from '../../src/MarkerAreaState';\r\n\r\nexport * from './../../src/index';\r\n\r\nexport class Experiments {\r\n  private markerArea1: MarkerArea;\r\n  private displayMode: DisplayMode = 'inline';\r\n  private currentState: MarkerAreaState;\r\n\r\n  private oddLaunch = true;\r\n\r\n  constructor() {\r\n    this.renderResult = this.renderResult.bind(this);\r\n    //Activator.addKey('1234');\r\n  }\r\n\r\n  public openMarkerArea(target: HTMLImageElement): void {\r\n    this.markerArea1 = new MarkerArea(target);\r\n    Style.styleSheetRoot = document.head;\r\n\r\n    this.markerArea1.addRenderEventListener(this.renderResult);\r\n    //this.markerArea1.addCloseEventListener(() => alert('close'));\r\n    this.markerArea1.addEventListener('beforeclose', (event) => {\r\n      if (!confirm('close?')) {\r\n        event.preventDefault();\r\n      }\r\n    });\r\n    //this.markerArea1.addEventListener('show', () => document.body.style.backgroundColor = 'cyan');\r\n    //this.markerArea1.addEventListener('restorestate', () => document.body.style.backgroundColor = 'magenta');\r\n    this.markerArea1.addEventListener('markercreating', (event) => console.log(`creating: ${event.marker?.typeName}`));\r\n    this.markerArea1.addEventListener('markercreate', (event) => console.log(`created: ${event.marker?.typeName}`));\r\n    this.markerArea1.addEventListener('markerselect', (event) => console.log(`selected: ${event.marker?.typeName}`));\r\n    this.markerArea1.addEventListener('markerdeselect', (event) => console.log(`deselected: ${event.marker?.typeName}`));\r\n    this.markerArea1.addEventListener('markerdelete', (event) => console.log(`deleted: ${event.marker?.typeName}`));\r\n    this.markerArea1.addEventListener('markerbeforedelete', (event) => {\r\n      if (!confirm('delete?')) {\r\n        event.preventDefault();\r\n      }\r\n    });\r\n\r\n    //this.markerArea1.addEventListener('markercreate', event => event.markerArea.createNewMarker(FrameMarker));\r\n\r\n\r\n    this.markerArea1.settings.displayMode = this.displayMode;\r\n    this.markerArea1.settings.popupMargin = 10;\r\n\r\n    this.markerArea1.settings.defaultColorsFollowCurrentColors = true;\r\n\r\n    this.markerArea1.targetRoot = document.getElementById('app');\r\n    \r\n    // this.markerArea1.settings.defaultStrokeWidth = 10;\r\n\r\n    this.markerArea1.settings.newFreehandMarkerOnPointerUp = true;\r\n\r\n    // this.markerArea1.uiStyleSettings.toolbarHeight = 40;\r\n    // if (this.oddLaunch) {\r\n    //   this.markerArea1.uiStyleSettings.toolbarColor = 'blue';\r\n    // }\r\n    // this.oddLaunch = !this.oddLaunch;\r\n\r\n    // this.markerArea1.uiStyleSettings.zIndex = '5000';\r\n\r\n    this.markerArea1.uiStyleSettings.selectButtonColor = 'lightblue';\r\n    this.markerArea1.uiStyleSettings.deleteButtonColor = 'red';\r\n    this.markerArea1.uiStyleSettings.okButtonColor = 'green';\r\n    this.markerArea1.uiStyleSettings.closeButtonColor = 'yellow';\r\n    \r\n    // this.markerArea1.uiStyleSettings.undoButtonVisible = false;\r\n    this.markerArea1.uiStyleSettings.redoButtonVisible = true;\r\n    this.markerArea1.uiStyleSettings.notesButtonVisible = true;\r\n    this.markerArea1.uiStyleSettings.zoomButtonVisible = true;\r\n    this.markerArea1.uiStyleSettings.zoomOutButtonVisible = true;\r\n\r\n    this.markerArea1.uiStyleSettings.clearButtonVisible = true;\r\n\r\n    this.markerArea1.uiStyleSettings.logoPosition = 'right';\r\n\r\n    // this.markerArea1.uiStyleSettings.toolbarStyleColorsClassName = 'toolbar';\r\n    // this.markerArea1.uiStyleSettings.toolbarButtonStyleColorsClassName = 'toolbar-button';\r\n    // this.markerArea1.uiStyleSettings.toolbarActiveButtonStyleColorsClassName = 'toolbar-active-button';\r\n\r\n    // this.markerArea1.uiStyleSettings.toolboxButtonRowStyleColorsClassName = 'toolbox';\r\n    // this.markerArea1.uiStyleSettings.toolboxButtonStyleColorsClassName = 'toolbox-button';\r\n    // this.markerArea1.uiStyleSettings.toolboxActiveButtonStyleColorsClassName = 'toolbox-active-button';\r\n    // this.markerArea1.uiStyleSettings.toolboxPanelRowStyleColorsClassName = 'toolbox-panel-row';\r\n\r\n    // this.markerArea1.uiStyleSettings.notesAreaStyleClassName = 'notes-area';\r\n\r\n    // this.markerArea1.availableMarkerTypes = ['CalloutMarker', ...this.markerArea1.BASIC_MARKER_TYPES];\r\n    this.markerArea1.availableMarkerTypes = this.markerArea1.ALL_MARKER_TYPES;\r\n\r\n    // this.markerArea1.renderWidth = 1000;\r\n    // this.markerArea1.renderHeight = 400;\r\n    // this.markerArea1.renderAtNaturalSize = true;\r\n    // this.markerArea1.renderImageType = 'image/jpeg';\r\n    // this.markerArea1.renderImageQuality = 0.2;\r\n    // this.markerArea1.renderMarkersOnly = true;\r\n\r\n    // this.markerArea1.renderTarget = <HTMLCanvasElement>document.getElementById('resultCanvas');\r\n\r\n    this.markerArea1.show();\r\n    if (this.currentState) {\r\n      this.markerArea1.restoreState(this.currentState);\r\n    }\r\n  }\r\n\r\n  private renderResult(dataUrl: string, state: MarkerAreaState) {\r\n    (document.getElementById('resultImage1') as HTMLImageElement).src = dataUrl;\r\n    this.currentState = JSON.parse(JSON.stringify(state));\r\n    console.log(JSON.stringify(this.currentState));\r\n  }\r\n\r\n  public async render(resultTarget: HTMLImageElement): Promise<void> {\r\n    resultTarget.src = await this.markerArea1.render();\r\n    this.markerArea1.close();\r\n  }\r\n\r\n  public setDisplayMode(mode: DisplayMode): void {\r\n    this.displayMode = mode;\r\n  }\r\n\r\n  public closeMarkerArea(): void {\r\n    if (this.markerArea1) {\r\n      this.markerArea1.close();\r\n    }\r\n  }\r\n\r\n  public addFrameMarker(): void {\r\n    if (this.markerArea1) {\r\n      this.markerArea1.createNewMarker(FrameMarker);\r\n    }\r\n  }\r\n  public deleteCurrentMarker(): void {\r\n    if (this.markerArea1) {\r\n      this.markerArea1.deleteSelectedMarker();\r\n    }\r\n  }\r\n  public renderAndClose(): void {\r\n    if (this.markerArea1) {\r\n      this.markerArea1.startRenderAndClose();\r\n    }\r\n  }\r\n\r\n  public openNoUI(target: HTMLImageElement): void {\r\n    this.markerArea1 = new MarkerArea(target);\r\n    this.markerArea1.addRenderEventListener(this.renderResult);\r\n    this.markerArea1.settings.displayMode = this.displayMode;\r\n\r\n    // this.markerArea1.uiStyleSettings.toolbarHeight = 0;\r\n    this.markerArea1.uiStyleSettings.hideToolbar = true;\r\n    this.markerArea1.uiStyleSettings.hideToolbox = true;\r\n\r\n    this.markerArea1.show();\r\n    if (this.currentState) {\r\n      this.markerArea1.restoreState(this.currentState);\r\n    }\r\n  }\r\n\r\n  public getState(): void {\r\n    if (this.markerArea1) {\r\n      this.currentState = this.markerArea1.getState(true);\r\n      console.log(this.currentState);\r\n    }\r\n  }\r\n\r\n  public restoreState(): void {\r\n    if (this.markerArea1 && this.currentState) {\r\n      this.markerArea1.restoreState(this.currentState);\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":["Icon"],"mappings":"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"}